//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MSSEntityFrame
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MSEntities : DbContext
    {
        public MSEntities()
            : base("name=MSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<SalesItemDetail> SalesItemDetail { get; set; }
        public virtual DbSet<AmcSchedule> AmcSchedule { get; set; }
        public virtual DbSet<CategoryMaster> CategoryMaster { get; set; }
        public virtual DbSet<StoreRegistration> StoreRegistration { get; set; }
        public virtual DbSet<EmployeesMaster> EmployeesMaster { get; set; }
        public virtual DbSet<PaymentMode> PaymentMode { get; set; }
        public virtual DbSet<UnitMaster> UnitMaster { get; set; }
        public virtual DbSet<LedgerTransaction> LedgerTransaction { get; set; }
        public virtual DbSet<SalesHeader> SalesHeader { get; set; }
        public virtual DbSet<SupplierMaster> SupplierMaster { get; set; }
        public virtual DbSet<BrandMaster> BrandMaster { get; set; }
        public virtual DbSet<CustomerMaster> CustomerMaster { get; set; }
        public virtual DbSet<ProductsMaster> ProductsMaster { get; set; }
        public virtual DbSet<TaxesMaster> TaxesMaster { get; set; }
        public virtual DbSet<SalesItemTaxDetail> SalesItemTaxDetail { get; set; }
        public virtual DbSet<purchaseheader> purchaseheader { get; set; }
        public virtual DbSet<PurchaseItemDetail> PurchaseItemDetail { get; set; }
        public virtual DbSet<PurchaseItemTaxDetail> PurchaseItemTaxDetail { get; set; }
        public virtual DbSet<CustomerMapping> CustomerMapping { get; set; }
        public virtual DbSet<Itemmaster> Itemmaster { get; set; }
        public virtual DbSet<ItemServiceCharge> ItemServiceCharge { get; set; }
        public virtual DbSet<PurchaseSrNoDetails> PurchaseSrNoDetails { get; set; }
        public virtual DbSet<Admin> Admin { get; set; }
        public virtual DbSet<Business_Pics> Business_Pics { get; set; }
        public virtual DbSet<Business_Portfolio> Business_Portfolio { get; set; }
        public virtual DbSet<Business_Product> Business_Product { get; set; }
        public virtual DbSet<Business_ProductOrder> Business_ProductOrder { get; set; }
        public virtual DbSet<Business_ProductRecive> Business_ProductRecive { get; set; }
        public virtual DbSet<Business_Services> Business_Services { get; set; }
        public virtual DbSet<Business_Target> Business_Target { get; set; }
        public virtual DbSet<Business_Target_Assign> Business_Target_Assign { get; set; }
        public virtual DbSet<Business_users> Business_users { get; set; }
        public virtual DbSet<ClientLogin> ClientLogin { get; set; }
        public virtual DbSet<Country> Country { get; set; }
        public virtual DbSet<Customer> Customer { get; set; }
        public virtual DbSet<Emp_Attendance> Emp_Attendance { get; set; }
        public virtual DbSet<Emp_Salary> Emp_Salary { get; set; }
        public virtual DbSet<EndUser> EndUser { get; set; }
        public virtual DbSet<Enquiry> Enquiry { get; set; }
        public virtual DbSet<ExpenseType> ExpenseType { get; set; }
        public virtual DbSet<fabkut_cms> fabkut_cms { get; set; }
        public virtual DbSet<fabkut_Offers_terms_conditions> fabkut_Offers_terms_conditions { get; set; }
        public virtual DbSet<fabkut_Static_cms> fabkut_Static_cms { get; set; }
        public virtual DbSet<Facility> Facility { get; set; }
        public virtual DbSet<GenderMaster> GenderMaster { get; set; }
        public virtual DbSet<Invoice> Invoice { get; set; }
        public virtual DbSet<Item> Item { get; set; }
        public virtual DbSet<Item_Inward> Item_Inward { get; set; }
        public virtual DbSet<Item_Type> Item_Type { get; set; }
        public virtual DbSet<MaritalStatus> MaritalStatus { get; set; }
        public virtual DbSet<marketing_salon> marketing_salon { get; set; }
        public virtual DbSet<MemberRegistraction> MemberRegistraction { get; set; }
        public virtual DbSet<OfferTermsMaster> OfferTermsMaster { get; set; }
        public virtual DbSet<OfferType> OfferType { get; set; }
        public virtual DbSet<OnlineEndUser> OnlineEndUser { get; set; }
        public virtual DbSet<Proofdetails> Proofdetails { get; set; }
        public virtual DbSet<Salon_Emp_Salary> Salon_Emp_Salary { get; set; }
        public virtual DbSet<salon_Offers> salon_Offers { get; set; }
        public virtual DbSet<Salon_Type> Salon_Type { get; set; }
        public virtual DbSet<SalonLogin> SalonLogin { get; set; }
        public virtual DbSet<Service> Service { get; set; }
        public virtual DbSet<Slot_Creation> Slot_Creation { get; set; }
        public virtual DbSet<Slot_creation_roster> Slot_creation_roster { get; set; }
        public virtual DbSet<Slot_master> Slot_master { get; set; }
        public virtual DbSet<Slot_master_temp> Slot_master_temp { get; set; }
        public virtual DbSet<State> State { get; set; }
        public virtual DbSet<sub_services> sub_services { get; set; }
        public virtual DbSet<Tariff> Tariff { get; set; }
        public virtual DbSet<TaxInvoice> TaxInvoice { get; set; }
        public virtual DbSet<User_Type> User_Type { get; set; }
        public virtual DbSet<UserMaster> UserMaster { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<Work_Roaster> Work_Roaster { get; set; }
        public virtual DbSet<ComplaintLogType> ComplaintLogType { get; set; }
        public virtual DbSet<ComplaintResolutionStatus> ComplaintResolutionStatus { get; set; }
        public virtual DbSet<ComplaintStatus> ComplaintStatus { get; set; }
        public virtual DbSet<CustomerComplaint> CustomerComplaint { get; set; }
        public virtual DbSet<EnquiryDetails> EnquiryDetails { get; set; }
        public virtual DbSet<PaymentStatus> PaymentStatus { get; set; }
        public virtual DbSet<SMSNotification> SMSNotification { get; set; }
        public virtual DbSet<Business_ProductRecivedetails> Business_ProductRecivedetails { get; set; }
        public virtual DbSet<business_ServiceCost> business_ServiceCost { get; set; }
        public virtual DbSet<business_ServiceHierarchy> business_ServiceHierarchy { get; set; }
        public virtual DbSet<Business_users_login> Business_users_login { get; set; }
        public virtual DbSet<ComplaintAttachment> ComplaintAttachment { get; set; }
        public virtual DbSet<dob_date> dob_date { get; set; }
        public virtual DbSet<dob_month> dob_month { get; set; }
        public virtual DbSet<dob_year> dob_year { get; set; }
        public virtual DbSet<OfferInvitation> OfferInvitation { get; set; }
        public virtual DbSet<OrderFeedback> OrderFeedback { get; set; }
        public virtual DbSet<Rating> Rating { get; set; }
        public virtual DbSet<Review_reply> Review_reply { get; set; }
        public virtual DbSet<Reviewlikes> Reviewlikes { get; set; }
        public virtual DbSet<reviewPics> reviewPics { get; set; }
        public virtual DbSet<SMSNotification1> SMSNotification1 { get; set; }
        public virtual DbSet<Temp_ProductOrderdetails> Temp_ProductOrderdetails { get; set; }
        public virtual DbSet<Temp_ProductRecivedetails> Temp_ProductRecivedetails { get; set; }
        public virtual DbSet<temptable2> temptable2 { get; set; }
        public virtual DbSet<VendorContract> VendorContract { get; set; }
        public virtual DbSet<Rec_Payment> Rec_Payment { get; set; }
        public virtual DbSet<AMCEntry> AMCEntry { get; set; }
        public virtual DbSet<AMCItemEntry> AMCItemEntry { get; set; }
        public virtual DbSet<CustomerType> CustomerType { get; set; }
        public virtual DbSet<EmployeeAttandance> EmployeeAttandance { get; set; }
        public virtual DbSet<Business_Offers> Business_Offers { get; set; }
        public virtual DbSet<deliverymode> deliverymode { get; set; }
        public virtual DbSet<DriverRoute> DriverRoute { get; set; }
        public virtual DbSet<ModuleMaster> ModuleMaster { get; set; }
        public virtual DbSet<ProductExpStatus> ProductExpStatus { get; set; }
        public virtual DbSet<Track_InsertCoordinate> Track_InsertCoordinate { get; set; }
        public virtual DbSet<Track_UserMaster> Track_UserMaster { get; set; }
        public virtual DbSet<Zone> Zone { get; set; }
        public virtual DbSet<UserAccessRight> UserAccessRight { get; set; }
    
        public virtual ObjectResult<BindBranchMaster_Result> BindBranchMaster()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindBranchMaster_Result>("BindBranchMaster");
        }
    
        public virtual ObjectResult<BindBrandMaster_Result> BindBrandMaster(Nullable<int> shopid)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindBrandMaster_Result>("BindBrandMaster", shopidParameter);
        }
    
        public virtual ObjectResult<BindCategoryMaster_Result> BindCategoryMaster(Nullable<int> shopid)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindCategoryMaster_Result>("BindCategoryMaster", shopidParameter);
        }
    
        public virtual int BindCustomerMaster(Nullable<int> shopid)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BindCustomerMaster", shopidParameter);
        }
    
        public virtual ObjectResult<BindDDLCategoryMaster_Result> BindDDLCategoryMaster(Nullable<int> shopid)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindDDLCategoryMaster_Result>("BindDDLCategoryMaster", shopidParameter);
        }
    
        public virtual ObjectResult<BindDDLProductMaster_Result> BindDDLProductMaster()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindDDLProductMaster_Result>("BindDDLProductMaster");
        }
    
        public virtual ObjectResult<BindDDLSupplierMaster_Result> BindDDLSupplierMaster(Nullable<int> shopID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindDDLSupplierMaster_Result>("BindDDLSupplierMaster", shopIDParameter);
        }
    
        public virtual ObjectResult<BindDDLTaxesMaster_Result> BindDDLTaxesMaster()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindDDLTaxesMaster_Result>("BindDDLTaxesMaster");
        }
    
        public virtual ObjectResult<BindDDLUnitMaster_Result> BindDDLUnitMaster(Nullable<int> shopid)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindDDLUnitMaster_Result>("BindDDLUnitMaster", shopidParameter);
        }
    
        public virtual ObjectResult<BindDropDownBrandName_Result> BindDropDownBrandName(Nullable<int> categoryid)
        {
            var categoryidParameter = categoryid.HasValue ?
                new ObjectParameter("Categoryid", categoryid) :
                new ObjectParameter("Categoryid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindDropDownBrandName_Result>("BindDropDownBrandName", categoryidParameter);
        }
    
        public virtual int BindItemDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BindItemDetails");
        }
    
        public virtual ObjectResult<BindProductMaster_Result> BindProductMaster(Nullable<int> shopid)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindProductMaster_Result>("BindProductMaster", shopidParameter);
        }
    
        public virtual int BindReceiveChalanItemDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BindReceiveChalanItemDetails");
        }
    
        public virtual ObjectResult<BindSupplierMaster_Result> BindSupplierMaster(Nullable<int> shopid)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindSupplierMaster_Result>("BindSupplierMaster", shopidParameter);
        }
    
        public virtual ObjectResult<BindTaxesMaster_Result> BindTaxesMaster(Nullable<int> shopid)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindTaxesMaster_Result>("BindTaxesMaster", shopidParameter);
        }
    
        public virtual ObjectResult<DeleteBindBrandsDetails_Result> DeleteBindBrandsDetails(string action, Nullable<int> brandId)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeleteBindBrandsDetails_Result>("DeleteBindBrandsDetails", actionParameter, brandIdParameter);
        }
    
        public virtual ObjectResult<DeleteBindCategoryDetails_Result> DeleteBindCategoryDetails(string action, Nullable<int> categoryId)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeleteBindCategoryDetails_Result>("DeleteBindCategoryDetails", actionParameter, categoryIdParameter);
        }
    
        public virtual int DeleteBindCustomersDetails(string action, Nullable<int> customerId, Nullable<int> shopid)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteBindCustomersDetails", actionParameter, customerIdParameter, shopidParameter);
        }
    
        public virtual ObjectResult<DeleteBindProductDetails_Result> DeleteBindProductDetails(string action, Nullable<int> productId)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeleteBindProductDetails_Result>("DeleteBindProductDetails", actionParameter, productIdParameter);
        }
    
        public virtual ObjectResult<DeleteBindSuppliersDetails_Result> DeleteBindSuppliersDetails(string action, Nullable<int> unitid)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var unitidParameter = unitid.HasValue ?
                new ObjectParameter("Unitid", unitid) :
                new ObjectParameter("Unitid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeleteBindSuppliersDetails_Result>("DeleteBindSuppliersDetails", actionParameter, unitidParameter);
        }
    
        public virtual ObjectResult<SearchCategoryMaster_Result> SearchCategoryMaster(string categoryname)
        {
            var categorynameParameter = categoryname != null ?
                new ObjectParameter("Categoryname", categoryname) :
                new ObjectParameter("Categoryname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchCategoryMaster_Result>("SearchCategoryMaster", categorynameParameter);
        }
    
        public virtual ObjectResult<SearchSupplierDetails_Result> SearchSupplierDetails(string searchBy, string searchVal)
        {
            var searchByParameter = searchBy != null ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(string));
    
            var searchValParameter = searchVal != null ?
                new ObjectParameter("SearchVal", searchVal) :
                new ObjectParameter("SearchVal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchSupplierDetails_Result>("SearchSupplierDetails", searchByParameter, searchValParameter);
        }
    
        public virtual int sp_InsertUpdateBranch(Nullable<int> branchid, string branchname, string address, string city, string state, string country, string pincode, string emailid, string contact, string alternateContact, Nullable<bool> isActive)
        {
            var branchidParameter = branchid.HasValue ?
                new ObjectParameter("Branchid", branchid) :
                new ObjectParameter("Branchid", typeof(int));
    
            var branchnameParameter = branchname != null ?
                new ObjectParameter("Branchname", branchname) :
                new ObjectParameter("Branchname", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("Pincode", pincode) :
                new ObjectParameter("Pincode", typeof(string));
    
            var emailidParameter = emailid != null ?
                new ObjectParameter("Emailid", emailid) :
                new ObjectParameter("Emailid", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var alternateContactParameter = alternateContact != null ?
                new ObjectParameter("AlternateContact", alternateContact) :
                new ObjectParameter("AlternateContact", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertUpdateBranch", branchidParameter, branchnameParameter, addressParameter, cityParameter, stateParameter, countryParameter, pincodeParameter, emailidParameter, contactParameter, alternateContactParameter, isActiveParameter);
        }
    
        public virtual int sp_InsertUpdateBrands(Nullable<int> shopid, Nullable<int> brandid, Nullable<int> categoryBrandID, string brandname, string description, Nullable<bool> isActive)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            var brandidParameter = brandid.HasValue ?
                new ObjectParameter("Brandid", brandid) :
                new ObjectParameter("Brandid", typeof(int));
    
            var categoryBrandIDParameter = categoryBrandID.HasValue ?
                new ObjectParameter("CategoryBrandID", categoryBrandID) :
                new ObjectParameter("CategoryBrandID", typeof(int));
    
            var brandnameParameter = brandname != null ?
                new ObjectParameter("Brandname", brandname) :
                new ObjectParameter("Brandname", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertUpdateBrands", shopidParameter, brandidParameter, categoryBrandIDParameter, brandnameParameter, descriptionParameter, isActiveParameter);
        }
    
        public virtual int sp_InsertUpdateCategory(Nullable<int> shopid, Nullable<int> categoryid, string categoryname, string description, Nullable<bool> isActive)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            var categoryidParameter = categoryid.HasValue ?
                new ObjectParameter("Categoryid", categoryid) :
                new ObjectParameter("Categoryid", typeof(int));
    
            var categorynameParameter = categoryname != null ?
                new ObjectParameter("Categoryname", categoryname) :
                new ObjectParameter("Categoryname", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertUpdateCategory", shopidParameter, categoryidParameter, categorynameParameter, descriptionParameter, isActiveParameter);
        }
    
        public virtual int sp_InsertUpdateCustomers(Nullable<int> customerid, string customername, string city, string states, string country, string pincode, string emailid, string contact, string altContact, string address, string descriptions, Nullable<System.DateTime> birthdate, Nullable<System.DateTime> aniversaryDate, Nullable<bool> isActive, Nullable<int> shopID, Nullable<int> maritalStatus, Nullable<int> gender, string stateCode, string shippingAddress, string shippingCity, string shippingState, string shippingStateCode, string shippingPinCode, string shippingCountry, Nullable<bool> sameAsBilling, Nullable<int> zoneId, Nullable<int> customertype, string gstin, ObjectParameter genCustomerID)
        {
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("Customerid", customerid) :
                new ObjectParameter("Customerid", typeof(int));
    
            var customernameParameter = customername != null ?
                new ObjectParameter("Customername", customername) :
                new ObjectParameter("Customername", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var statesParameter = states != null ?
                new ObjectParameter("States", states) :
                new ObjectParameter("States", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("Pincode", pincode) :
                new ObjectParameter("Pincode", typeof(string));
    
            var emailidParameter = emailid != null ?
                new ObjectParameter("Emailid", emailid) :
                new ObjectParameter("Emailid", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var altContactParameter = altContact != null ?
                new ObjectParameter("AltContact", altContact) :
                new ObjectParameter("AltContact", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var descriptionsParameter = descriptions != null ?
                new ObjectParameter("Descriptions", descriptions) :
                new ObjectParameter("Descriptions", typeof(string));
    
            var birthdateParameter = birthdate.HasValue ?
                new ObjectParameter("Birthdate", birthdate) :
                new ObjectParameter("Birthdate", typeof(System.DateTime));
    
            var aniversaryDateParameter = aniversaryDate.HasValue ?
                new ObjectParameter("AniversaryDate", aniversaryDate) :
                new ObjectParameter("AniversaryDate", typeof(System.DateTime));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var maritalStatusParameter = maritalStatus.HasValue ?
                new ObjectParameter("MaritalStatus", maritalStatus) :
                new ObjectParameter("MaritalStatus", typeof(int));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var shippingAddressParameter = shippingAddress != null ?
                new ObjectParameter("ShippingAddress", shippingAddress) :
                new ObjectParameter("ShippingAddress", typeof(string));
    
            var shippingCityParameter = shippingCity != null ?
                new ObjectParameter("ShippingCity", shippingCity) :
                new ObjectParameter("ShippingCity", typeof(string));
    
            var shippingStateParameter = shippingState != null ?
                new ObjectParameter("ShippingState", shippingState) :
                new ObjectParameter("ShippingState", typeof(string));
    
            var shippingStateCodeParameter = shippingStateCode != null ?
                new ObjectParameter("ShippingStateCode", shippingStateCode) :
                new ObjectParameter("ShippingStateCode", typeof(string));
    
            var shippingPinCodeParameter = shippingPinCode != null ?
                new ObjectParameter("ShippingPinCode", shippingPinCode) :
                new ObjectParameter("ShippingPinCode", typeof(string));
    
            var shippingCountryParameter = shippingCountry != null ?
                new ObjectParameter("ShippingCountry", shippingCountry) :
                new ObjectParameter("ShippingCountry", typeof(string));
    
            var sameAsBillingParameter = sameAsBilling.HasValue ?
                new ObjectParameter("SameAsBilling", sameAsBilling) :
                new ObjectParameter("SameAsBilling", typeof(bool));
    
            var zoneIdParameter = zoneId.HasValue ?
                new ObjectParameter("ZoneId", zoneId) :
                new ObjectParameter("ZoneId", typeof(int));
    
            var customertypeParameter = customertype.HasValue ?
                new ObjectParameter("Customertype", customertype) :
                new ObjectParameter("Customertype", typeof(int));
    
            var gstinParameter = gstin != null ?
                new ObjectParameter("Gstin", gstin) :
                new ObjectParameter("Gstin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertUpdateCustomers", customeridParameter, customernameParameter, cityParameter, statesParameter, countryParameter, pincodeParameter, emailidParameter, contactParameter, altContactParameter, addressParameter, descriptionsParameter, birthdateParameter, aniversaryDateParameter, isActiveParameter, shopIDParameter, maritalStatusParameter, genderParameter, stateCodeParameter, shippingAddressParameter, shippingCityParameter, shippingStateParameter, shippingStateCodeParameter, shippingPinCodeParameter, shippingCountryParameter, sameAsBillingParameter, zoneIdParameter, customertypeParameter, gstinParameter, genCustomerID);
        }
    
        public virtual int sp_InsertUpdateEmployees(Nullable<int> employeeid, string employeename, string city, string states, string country, string pincode, string emailid, string contact, string altContact, string address, string descriptions, Nullable<bool> isActive)
        {
            var employeeidParameter = employeeid.HasValue ?
                new ObjectParameter("Employeeid", employeeid) :
                new ObjectParameter("Employeeid", typeof(int));
    
            var employeenameParameter = employeename != null ?
                new ObjectParameter("Employeename", employeename) :
                new ObjectParameter("Employeename", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var statesParameter = states != null ?
                new ObjectParameter("States", states) :
                new ObjectParameter("States", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("Pincode", pincode) :
                new ObjectParameter("Pincode", typeof(string));
    
            var emailidParameter = emailid != null ?
                new ObjectParameter("Emailid", emailid) :
                new ObjectParameter("Emailid", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var altContactParameter = altContact != null ?
                new ObjectParameter("AltContact", altContact) :
                new ObjectParameter("AltContact", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var descriptionsParameter = descriptions != null ?
                new ObjectParameter("Descriptions", descriptions) :
                new ObjectParameter("Descriptions", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertUpdateEmployees", employeeidParameter, employeenameParameter, cityParameter, statesParameter, countryParameter, pincodeParameter, emailidParameter, contactParameter, altContactParameter, addressParameter, descriptionsParameter, isActiveParameter);
        }
    
        public virtual int sp_InsertUpdateProducts(Nullable<int> shopid, Nullable<int> productid, Nullable<int> categoryProductId, Nullable<int> brandProductId, string productCode, string productname, Nullable<decimal> price, Nullable<int> unit, Nullable<decimal> cGST, Nullable<decimal> sGST, Nullable<decimal> iGST, string barcode, string hSNCode, string modelNo, string description, Nullable<bool> isActive, ObjectParameter genProductID)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            var productidParameter = productid.HasValue ?
                new ObjectParameter("Productid", productid) :
                new ObjectParameter("Productid", typeof(int));
    
            var categoryProductIdParameter = categoryProductId.HasValue ?
                new ObjectParameter("CategoryProductId", categoryProductId) :
                new ObjectParameter("CategoryProductId", typeof(int));
    
            var brandProductIdParameter = brandProductId.HasValue ?
                new ObjectParameter("BrandProductId", brandProductId) :
                new ObjectParameter("BrandProductId", typeof(int));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var productnameParameter = productname != null ?
                new ObjectParameter("Productname", productname) :
                new ObjectParameter("Productname", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var unitParameter = unit.HasValue ?
                new ObjectParameter("Unit", unit) :
                new ObjectParameter("Unit", typeof(int));
    
            var cGSTParameter = cGST.HasValue ?
                new ObjectParameter("CGST", cGST) :
                new ObjectParameter("CGST", typeof(decimal));
    
            var sGSTParameter = sGST.HasValue ?
                new ObjectParameter("SGST", sGST) :
                new ObjectParameter("SGST", typeof(decimal));
    
            var iGSTParameter = iGST.HasValue ?
                new ObjectParameter("IGST", iGST) :
                new ObjectParameter("IGST", typeof(decimal));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("Barcode", barcode) :
                new ObjectParameter("Barcode", typeof(string));
    
            var hSNCodeParameter = hSNCode != null ?
                new ObjectParameter("HSNCode", hSNCode) :
                new ObjectParameter("HSNCode", typeof(string));
    
            var modelNoParameter = modelNo != null ?
                new ObjectParameter("ModelNo", modelNo) :
                new ObjectParameter("ModelNo", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertUpdateProducts", shopidParameter, productidParameter, categoryProductIdParameter, brandProductIdParameter, productCodeParameter, productnameParameter, priceParameter, unitParameter, cGSTParameter, sGSTParameter, iGSTParameter, barcodeParameter, hSNCodeParameter, modelNoParameter, descriptionParameter, isActiveParameter, genProductID);
        }
    
        public virtual int sp_InsertUpdateSuppliers(Nullable<int> supplierid, string suppliername, string city, string states, string country, string pincode, string emailid, string contact, string altContact, string address, string descriptions, Nullable<bool> isActive, Nullable<int> shopID)
        {
            var supplieridParameter = supplierid.HasValue ?
                new ObjectParameter("Supplierid", supplierid) :
                new ObjectParameter("Supplierid", typeof(int));
    
            var suppliernameParameter = suppliername != null ?
                new ObjectParameter("Suppliername", suppliername) :
                new ObjectParameter("Suppliername", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var statesParameter = states != null ?
                new ObjectParameter("States", states) :
                new ObjectParameter("States", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("Pincode", pincode) :
                new ObjectParameter("Pincode", typeof(string));
    
            var emailidParameter = emailid != null ?
                new ObjectParameter("Emailid", emailid) :
                new ObjectParameter("Emailid", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var altContactParameter = altContact != null ?
                new ObjectParameter("AltContact", altContact) :
                new ObjectParameter("AltContact", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var descriptionsParameter = descriptions != null ?
                new ObjectParameter("Descriptions", descriptions) :
                new ObjectParameter("Descriptions", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertUpdateSuppliers", supplieridParameter, suppliernameParameter, cityParameter, statesParameter, countryParameter, pincodeParameter, emailidParameter, contactParameter, altContactParameter, addressParameter, descriptionsParameter, isActiveParameter, shopIDParameter);
        }
    
        public virtual int sp_InsertUpdateTaxesMaster(Nullable<int> taxid, string taxname, Nullable<decimal> rate, string description, Nullable<bool> isActive, Nullable<int> shopid)
        {
            var taxidParameter = taxid.HasValue ?
                new ObjectParameter("Taxid", taxid) :
                new ObjectParameter("Taxid", typeof(int));
    
            var taxnameParameter = taxname != null ?
                new ObjectParameter("Taxname", taxname) :
                new ObjectParameter("Taxname", typeof(string));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(decimal));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertUpdateTaxesMaster", taxidParameter, taxnameParameter, rateParameter, descriptionParameter, isActiveParameter, shopidParameter);
        }
    
        public virtual ObjectResult<sp_Login_Result> sp_Login(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Login_Result>("sp_Login", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<BindDDLCustomerMaster_Result> BindDDLCustomerMaster(Nullable<int> shopid)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindDDLCustomerMaster_Result>("BindDDLCustomerMaster", shopidParameter);
        }
    
        public virtual ObjectResult<BindTaxInvoice_Result> BindTaxInvoice(Nullable<int> shopid)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindTaxInvoice_Result>("BindTaxInvoice", shopidParameter);
        }
    
        public virtual ObjectResult<BindUnitMaster_Result> BindUnitMaster(Nullable<int> shopid)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindUnitMaster_Result>("BindUnitMaster", shopidParameter);
        }
    
        public virtual ObjectResult<DailyPurchaseReport_Result> DailyPurchaseReport(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> shopid)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DailyPurchaseReport_Result>("DailyPurchaseReport", fromDateParameter, toDateParameter, shopidParameter);
        }
    
        public virtual ObjectResult<DailySalesReport_Result> DailySalesReport(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> shopID, Nullable<int> prodID, Nullable<int> brandID, Nullable<int> categoryID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var prodIDParameter = prodID.HasValue ?
                new ObjectParameter("ProdID", prodID) :
                new ObjectParameter("ProdID", typeof(int));
    
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(int));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DailySalesReport_Result>("DailySalesReport", fromDateParameter, toDateParameter, shopIDParameter, prodIDParameter, brandIDParameter, categoryIDParameter);
        }
    
        public virtual ObjectResult<ProductMasterReport_Result> ProductMasterReport(Nullable<int> shopid)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductMasterReport_Result>("ProductMasterReport", shopidParameter);
        }
    
        public virtual ObjectResult<SearchCategoryDetails_Result> SearchCategoryDetails(string categoryName)
        {
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchCategoryDetails_Result>("SearchCategoryDetails", categoryNameParameter);
        }
    
        public virtual ObjectResult<string> SearchSupplier(Nullable<int> supplierid)
        {
            var supplieridParameter = supplierid.HasValue ?
                new ObjectParameter("Supplierid", supplierid) :
                new ObjectParameter("Supplierid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SearchSupplier", supplieridParameter);
        }
    
        public virtual int sp_InsertUpdateUnit(Nullable<int> unitid, string unitname, string description, Nullable<bool> isActive, Nullable<int> shopid)
        {
            var unitidParameter = unitid.HasValue ?
                new ObjectParameter("Unitid", unitid) :
                new ObjectParameter("Unitid", typeof(int));
    
            var unitnameParameter = unitname != null ?
                new ObjectParameter("Unitname", unitname) :
                new ObjectParameter("Unitname", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertUpdateUnit", unitidParameter, unitnameParameter, descriptionParameter, isActiveParameter, shopidParameter);
        }
    
        public virtual ObjectResult<spo_GetPurchaseDetail_Result> spo_GetPurchaseDetail(string pONO, Nullable<int> shopid)
        {
            var pONOParameter = pONO != null ?
                new ObjectParameter("PONO", pONO) :
                new ObjectParameter("PONO", typeof(string));
    
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spo_GetPurchaseDetail_Result>("spo_GetPurchaseDetail", pONOParameter, shopidParameter);
        }
    
        public virtual ObjectResult<spo_GetSalesDetail_Result> spo_GetSalesDetail(string sONO, Nullable<int> shopid)
        {
            var sONOParameter = sONO != null ?
                new ObjectParameter("SONO", sONO) :
                new ObjectParameter("SONO", typeof(string));
    
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spo_GetSalesDetail_Result>("spo_GetSalesDetail", sONOParameter, shopidParameter);
        }
    
        public virtual int InsertEnduser(Nullable<int> business_id, string enduser_name, string lname, string gender, string email, string contact_no, string allergies)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var enduser_nameParameter = enduser_name != null ?
                new ObjectParameter("Enduser_name", enduser_name) :
                new ObjectParameter("Enduser_name", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var contact_noParameter = contact_no != null ?
                new ObjectParameter("Contact_no", contact_no) :
                new ObjectParameter("Contact_no", typeof(string));
    
            var allergiesParameter = allergies != null ?
                new ObjectParameter("Allergies", allergies) :
                new ObjectParameter("Allergies", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertEnduser", business_idParameter, enduser_nameParameter, lnameParameter, genderParameter, emailParameter, contact_noParameter, allergiesParameter);
        }
    
        public virtual ObjectResult<sp_BindChargeDetails_Result> sp_BindChargeDetails(Nullable<int> itemid, Nullable<int> shopid, Nullable<int> compid)
        {
            var itemidParameter = itemid.HasValue ?
                new ObjectParameter("Itemid", itemid) :
                new ObjectParameter("Itemid", typeof(int));
    
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            var compidParameter = compid.HasValue ?
                new ObjectParameter("Compid", compid) :
                new ObjectParameter("Compid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BindChargeDetails_Result>("sp_BindChargeDetails", itemidParameter, shopidParameter, compidParameter);
        }
    
        public virtual ObjectResult<sp_BindItemMaster_Result> sp_BindItemMaster(Nullable<int> shopid)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BindItemMaster_Result>("sp_BindItemMaster", shopidParameter);
        }
    
        public virtual ObjectResult<sp_BindItemServiceCharge_Result> sp_BindItemServiceCharge(Nullable<int> complainid, string compalinNo)
        {
            var complainidParameter = complainid.HasValue ?
                new ObjectParameter("Complainid", complainid) :
                new ObjectParameter("Complainid", typeof(int));
    
            var compalinNoParameter = compalinNo != null ?
                new ObjectParameter("CompalinNo", compalinNo) :
                new ObjectParameter("CompalinNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BindItemServiceCharge_Result>("sp_BindItemServiceCharge", complainidParameter, compalinNoParameter);
        }
    
        public virtual ObjectResult<SP_BindStoreRegistraction_Result> SP_BindStoreRegistraction(Nullable<int> shopid)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("shopid", shopid) :
                new ObjectParameter("shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BindStoreRegistraction_Result>("SP_BindStoreRegistraction", shopidParameter);
        }
    
        public virtual ObjectResult<sp_GetCustomerMapping_Result> sp_GetCustomerMapping(string customer_id)
        {
            var customer_idParameter = customer_id != null ?
                new ObjectParameter("Customer_id", customer_id) :
                new ObjectParameter("Customer_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetCustomerMapping_Result>("sp_GetCustomerMapping", customer_idParameter);
        }
    
        public virtual int sp_insertupdateCustomerMapping(Nullable<int> customer_id, string cardnumber, string referenceBy, string custsalerefno)
        {
            var customer_idParameter = customer_id.HasValue ?
                new ObjectParameter("Customer_id", customer_id) :
                new ObjectParameter("Customer_id", typeof(int));
    
            var cardnumberParameter = cardnumber != null ?
                new ObjectParameter("Cardnumber", cardnumber) :
                new ObjectParameter("Cardnumber", typeof(string));
    
            var referenceByParameter = referenceBy != null ?
                new ObjectParameter("ReferenceBy", referenceBy) :
                new ObjectParameter("ReferenceBy", typeof(string));
    
            var custsalerefnoParameter = custsalerefno != null ?
                new ObjectParameter("Custsalerefno", custsalerefno) :
                new ObjectParameter("Custsalerefno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertupdateCustomerMapping", customer_idParameter, cardnumberParameter, referenceByParameter, custsalerefnoParameter);
        }
    
        public virtual int sp_InsertUpdateItemDetails(Nullable<int> shopid, Nullable<int> itemid, string itemname, string charge, Nullable<bool> isActive)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            var itemidParameter = itemid.HasValue ?
                new ObjectParameter("Itemid", itemid) :
                new ObjectParameter("Itemid", typeof(int));
    
            var itemnameParameter = itemname != null ?
                new ObjectParameter("Itemname", itemname) :
                new ObjectParameter("Itemname", typeof(string));
    
            var chargeParameter = charge != null ?
                new ObjectParameter("Charge", charge) :
                new ObjectParameter("Charge", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertUpdateItemDetails", shopidParameter, itemidParameter, itemnameParameter, chargeParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<string> sp_InsertUpdateItemsDetails(Nullable<int> shopid, Nullable<int> itemid, string itemname, string charge, Nullable<bool> isActive)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            var itemidParameter = itemid.HasValue ?
                new ObjectParameter("Itemid", itemid) :
                new ObjectParameter("Itemid", typeof(int));
    
            var itemnameParameter = itemname != null ?
                new ObjectParameter("Itemname", itemname) :
                new ObjectParameter("Itemname", typeof(string));
    
            var chargeParameter = charge != null ?
                new ObjectParameter("Charge", charge) :
                new ObjectParameter("Charge", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_InsertUpdateItemsDetails", shopidParameter, itemidParameter, itemnameParameter, chargeParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_IsVerifyByOtp(string mobile, string oTP, Nullable<int> shopid)
        {
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var oTPParameter = oTP != null ?
                new ObjectParameter("OTP", oTP) :
                new ObjectParameter("OTP", typeof(string));
    
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_IsVerifyByOtp", mobileParameter, oTPParameter, shopidParameter);
        }
    
        public virtual int sp_ItemServiceCharge(Nullable<int> complainid, string compalinNo, string serviceID, string serviceCharge, Nullable<int> qty, Nullable<int> totalCharge, Nullable<decimal> stockCharge)
        {
            var complainidParameter = complainid.HasValue ?
                new ObjectParameter("Complainid", complainid) :
                new ObjectParameter("Complainid", typeof(int));
    
            var compalinNoParameter = compalinNo != null ?
                new ObjectParameter("CompalinNo", compalinNo) :
                new ObjectParameter("CompalinNo", typeof(string));
    
            var serviceIDParameter = serviceID != null ?
                new ObjectParameter("ServiceID", serviceID) :
                new ObjectParameter("ServiceID", typeof(string));
    
            var serviceChargeParameter = serviceCharge != null ?
                new ObjectParameter("ServiceCharge", serviceCharge) :
                new ObjectParameter("ServiceCharge", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(int));
    
            var totalChargeParameter = totalCharge.HasValue ?
                new ObjectParameter("TotalCharge", totalCharge) :
                new ObjectParameter("TotalCharge", typeof(int));
    
            var stockChargeParameter = stockCharge.HasValue ?
                new ObjectParameter("StockCharge", stockCharge) :
                new ObjectParameter("StockCharge", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ItemServiceCharge", complainidParameter, compalinNoParameter, serviceIDParameter, serviceChargeParameter, qtyParameter, totalChargeParameter, stockChargeParameter);
        }
    
        public virtual ObjectResult<string> Spo_BillSummary(Nullable<int> compid)
        {
            var compidParameter = compid.HasValue ?
                new ObjectParameter("Compid", compid) :
                new ObjectParameter("Compid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Spo_BillSummary", compidParameter);
        }
    
        public virtual ObjectResult<spo_BindItemMaster_Result> spo_BindItemMaster(Nullable<int> shopid, Nullable<int> compid)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            var compidParameter = compid.HasValue ?
                new ObjectParameter("compid", compid) :
                new ObjectParameter("compid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spo_BindItemMaster_Result>("spo_BindItemMaster", shopidParameter, compidParameter);
        }
    
        public virtual int Spo_ChangeShopProfile(Nullable<int> shopID, string shopName, string shopAddress, string shopDescription, string shopGSTIN, string shopTin, string shopCIN, string shopRegNo, string shopOwner, string shopOwnerPAN, string shopOwnerMob, string shopOwnerOfficeContact, string shopEMail, string reportName, string apiUrl, Nullable<int> isHappyCodeEnable)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var shopNameParameter = shopName != null ?
                new ObjectParameter("ShopName", shopName) :
                new ObjectParameter("ShopName", typeof(string));
    
            var shopAddressParameter = shopAddress != null ?
                new ObjectParameter("ShopAddress", shopAddress) :
                new ObjectParameter("ShopAddress", typeof(string));
    
            var shopDescriptionParameter = shopDescription != null ?
                new ObjectParameter("ShopDescription", shopDescription) :
                new ObjectParameter("ShopDescription", typeof(string));
    
            var shopGSTINParameter = shopGSTIN != null ?
                new ObjectParameter("ShopGSTIN", shopGSTIN) :
                new ObjectParameter("ShopGSTIN", typeof(string));
    
            var shopTinParameter = shopTin != null ?
                new ObjectParameter("ShopTin", shopTin) :
                new ObjectParameter("ShopTin", typeof(string));
    
            var shopCINParameter = shopCIN != null ?
                new ObjectParameter("ShopCIN", shopCIN) :
                new ObjectParameter("ShopCIN", typeof(string));
    
            var shopRegNoParameter = shopRegNo != null ?
                new ObjectParameter("ShopRegNo", shopRegNo) :
                new ObjectParameter("ShopRegNo", typeof(string));
    
            var shopOwnerParameter = shopOwner != null ?
                new ObjectParameter("ShopOwner", shopOwner) :
                new ObjectParameter("ShopOwner", typeof(string));
    
            var shopOwnerPANParameter = shopOwnerPAN != null ?
                new ObjectParameter("ShopOwnerPAN", shopOwnerPAN) :
                new ObjectParameter("ShopOwnerPAN", typeof(string));
    
            var shopOwnerMobParameter = shopOwnerMob != null ?
                new ObjectParameter("ShopOwnerMob", shopOwnerMob) :
                new ObjectParameter("ShopOwnerMob", typeof(string));
    
            var shopOwnerOfficeContactParameter = shopOwnerOfficeContact != null ?
                new ObjectParameter("ShopOwnerOfficeContact", shopOwnerOfficeContact) :
                new ObjectParameter("ShopOwnerOfficeContact", typeof(string));
    
            var shopEMailParameter = shopEMail != null ?
                new ObjectParameter("ShopEMail", shopEMail) :
                new ObjectParameter("ShopEMail", typeof(string));
    
            var reportNameParameter = reportName != null ?
                new ObjectParameter("ReportName", reportName) :
                new ObjectParameter("ReportName", typeof(string));
    
            var apiUrlParameter = apiUrl != null ?
                new ObjectParameter("ApiUrl", apiUrl) :
                new ObjectParameter("ApiUrl", typeof(string));
    
            var isHappyCodeEnableParameter = isHappyCodeEnable.HasValue ?
                new ObjectParameter("IsHappyCodeEnable", isHappyCodeEnable) :
                new ObjectParameter("IsHappyCodeEnable", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Spo_ChangeShopProfile", shopIDParameter, shopNameParameter, shopAddressParameter, shopDescriptionParameter, shopGSTINParameter, shopTinParameter, shopCINParameter, shopRegNoParameter, shopOwnerParameter, shopOwnerPANParameter, shopOwnerMobParameter, shopOwnerOfficeContactParameter, shopEMailParameter, reportNameParameter, apiUrlParameter, isHappyCodeEnableParameter);
        }
    
        public virtual int Spo_DeleteCharge(Nullable<int> itemsrid)
        {
            var itemsridParameter = itemsrid.HasValue ?
                new ObjectParameter("Itemsrid", itemsrid) :
                new ObjectParameter("Itemsrid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Spo_DeleteCharge", itemsridParameter);
        }
    
        public virtual int Spo_DeleteUploadFile(Nullable<int> attachID)
        {
            var attachIDParameter = attachID.HasValue ?
                new ObjectParameter("AttachID", attachID) :
                new ObjectParameter("AttachID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Spo_DeleteUploadFile", attachIDParameter);
        }
    
        public virtual ObjectResult<string> SPO_GENERATEComplaintNO(Nullable<int> shopID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SPO_GENERATEComplaintNO", shopIDParameter);
        }
    
        public virtual ObjectResult<string> SPO_GENERATEEnquiryNO(Nullable<int> shopID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SPO_GENERATEEnquiryNO", shopIDParameter);
        }
    
        public virtual ObjectResult<SPO_GETAllComplaint_Result> SPO_GETAllComplaint(string searchText, Nullable<int> shopID, string complaintNo, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string status, string complaintStatusIds)
        {
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var complaintNoParameter = complaintNo != null ?
                new ObjectParameter("ComplaintNo", complaintNo) :
                new ObjectParameter("ComplaintNo", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var complaintStatusIdsParameter = complaintStatusIds != null ?
                new ObjectParameter("ComplaintStatusIds", complaintStatusIds) :
                new ObjectParameter("ComplaintStatusIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPO_GETAllComplaint_Result>("SPO_GETAllComplaint", searchTextParameter, shopIDParameter, complaintNoParameter, fromDateParameter, toDateParameter, statusParameter, complaintStatusIdsParameter);
        }
    
        public virtual ObjectResult<spo_getallcomplaintResolutionStatus_Result> spo_getallcomplaintResolutionStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spo_getallcomplaintResolutionStatus_Result>("spo_getallcomplaintResolutionStatus");
        }
    
        public virtual ObjectResult<spo_getallcomplaintStatus_Result> spo_getallcomplaintStatus(Nullable<int> shopID, Nullable<int> catID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spo_getallcomplaintStatus_Result>("spo_getallcomplaintStatus", shopIDParameter, catIDParameter);
        }
    
        public virtual ObjectResult<SPO_GETAllEnquiry_Result> SPO_GETAllEnquiry(string searchText, Nullable<int> shopID)
        {
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPO_GETAllEnquiry_Result>("SPO_GETAllEnquiry", searchTextParameter, shopIDParameter);
        }
    
        public virtual ObjectResult<Spo_GetAllMessageList_Result> Spo_GetAllMessageList(Nullable<System.DateTime> frmDate, Nullable<System.DateTime> toDate, string customerContact, Nullable<int> shopID)
        {
            var frmDateParameter = frmDate.HasValue ?
                new ObjectParameter("FrmDate", frmDate) :
                new ObjectParameter("FrmDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var customerContactParameter = customerContact != null ?
                new ObjectParameter("CustomerContact", customerContact) :
                new ObjectParameter("CustomerContact", typeof(string));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_GetAllMessageList_Result>("Spo_GetAllMessageList", frmDateParameter, toDateParameter, customerContactParameter, shopIDParameter);
        }
    
        public virtual ObjectResult<Spo_GetCustomerComplaintHistory_Result> Spo_GetCustomerComplaintHistory(string complaintID)
        {
            var complaintIDParameter = complaintID != null ?
                new ObjectParameter("ComplaintID", complaintID) :
                new ObjectParameter("ComplaintID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_GetCustomerComplaintHistory_Result>("Spo_GetCustomerComplaintHistory", complaintIDParameter);
        }
    
        public virtual ObjectResult<SPO_GETCustomerEnquiryDetails_Result> SPO_GETCustomerEnquiryDetails(Nullable<int> custID, Nullable<System.DateTime> fDate, Nullable<System.DateTime> tDate, Nullable<int> shopID)
        {
            var custIDParameter = custID.HasValue ?
                new ObjectParameter("CustID", custID) :
                new ObjectParameter("CustID", typeof(int));
    
            var fDateParameter = fDate.HasValue ?
                new ObjectParameter("FDate", fDate) :
                new ObjectParameter("FDate", typeof(System.DateTime));
    
            var tDateParameter = tDate.HasValue ?
                new ObjectParameter("TDate", tDate) :
                new ObjectParameter("TDate", typeof(System.DateTime));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPO_GETCustomerEnquiryDetails_Result>("SPO_GETCustomerEnquiryDetails", custIDParameter, fDateParameter, tDateParameter, shopIDParameter);
        }
    
        public virtual ObjectResult<SPO_GETDailyEnquiry_Result> SPO_GETDailyEnquiry(Nullable<System.DateTime> date, Nullable<int> shopID)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPO_GETDailyEnquiry_Result>("SPO_GETDailyEnquiry", dateParameter, shopIDParameter);
        }
    
        public virtual ObjectResult<Spo_GetEmployeeComplaintSummary_Result> Spo_GetEmployeeComplaintSummary(Nullable<int> employeeID, Nullable<System.DateTime> date, Nullable<int> shopID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_GetEmployeeComplaintSummary_Result>("Spo_GetEmployeeComplaintSummary", employeeIDParameter, dateParameter, shopIDParameter);
        }
    
        public virtual ObjectResult<Spo_GetItemStock_Result> Spo_GetItemStock(string itemSrno, string productID, Nullable<int> shopid)
        {
            var itemSrnoParameter = itemSrno != null ?
                new ObjectParameter("ItemSrno", itemSrno) :
                new ObjectParameter("ItemSrno", typeof(string));
    
            var productIDParameter = productID != null ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(string));
    
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_GetItemStock_Result>("Spo_GetItemStock", itemSrnoParameter, productIDParameter, shopidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spo_getOrderNo(Nullable<int> shopID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spo_getOrderNo", shopIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spo_getPurchaseOrderNo(Nullable<int> shopID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spo_getPurchaseOrderNo", shopIDParameter);
        }
    
        public virtual ObjectResult<Spo_GetShopEmail_Result> Spo_GetShopEmail(string shopUserID)
        {
            var shopUserIDParameter = shopUserID != null ?
                new ObjectParameter("ShopUserID", shopUserID) :
                new ObjectParameter("ShopUserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_GetShopEmail_Result>("Spo_GetShopEmail", shopUserIDParameter);
        }
    
        public virtual ObjectResult<spo_getShopRegistration_Result> spo_getShopRegistration(Nullable<int> shopID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spo_getShopRegistration_Result>("spo_getShopRegistration", shopIDParameter);
        }
    
        public virtual ObjectResult<Spo_GetSumCharge_Result> Spo_GetSumCharge(Nullable<int> complainid, Nullable<int> customerID)
        {
            var complainidParameter = complainid.HasValue ?
                new ObjectParameter("Complainid", complainid) :
                new ObjectParameter("Complainid", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_GetSumCharge_Result>("Spo_GetSumCharge", complainidParameter, customerIDParameter);
        }
    
        public virtual ObjectResult<Spo_GetUnpaidList_Result> Spo_GetUnpaidList(Nullable<int> shopid, Nullable<int> customerid)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("Customerid", customerid) :
                new ObjectParameter("Customerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_GetUnpaidList_Result>("Spo_GetUnpaidList", shopidParameter, customeridParameter);
        }
    
        public virtual ObjectResult<Spo_GetUploadFile_Result> Spo_GetUploadFile(Nullable<int> refID)
        {
            var refIDParameter = refID.HasValue ?
                new ObjectParameter("RefID", refID) :
                new ObjectParameter("RefID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_GetUploadFile_Result>("Spo_GetUploadFile", refIDParameter);
        }
    
        public virtual int Spo_InsertAttachment(Nullable<int> attachID, Nullable<int> refID, string attachDescription, string fiName)
        {
            var attachIDParameter = attachID.HasValue ?
                new ObjectParameter("AttachID", attachID) :
                new ObjectParameter("AttachID", typeof(int));
    
            var refIDParameter = refID.HasValue ?
                new ObjectParameter("RefID", refID) :
                new ObjectParameter("RefID", typeof(int));
    
            var attachDescriptionParameter = attachDescription != null ?
                new ObjectParameter("AttachDescription", attachDescription) :
                new ObjectParameter("AttachDescription", typeof(string));
    
            var fiNameParameter = fiName != null ?
                new ObjectParameter("FiName", fiName) :
                new ObjectParameter("FiName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Spo_InsertAttachment", attachIDParameter, refIDParameter, attachDescriptionParameter, fiNameParameter);
        }
    
        public virtual int Spo_InsertUpdateComplaint(Nullable<int> compID, string complaintID, Nullable<System.DateTime> complaintDate, Nullable<int> customerID, string customerName, string customeradd, string customerContact, Nullable<int> statusID, Nullable<int> empID, Nullable<System.DateTime> visitDate, Nullable<System.DateTime> closeDate, Nullable<int> shopID, string remark, Nullable<bool> isNew, Nullable<int> resolutionStatus, Nullable<System.TimeSpan> compStartTime, Nullable<System.TimeSpan> compEndTime, Nullable<int> submittedBY, string referenceNo, Nullable<int> logType, Nullable<System.DateTime> serviceDate, Nullable<System.DateTime> actServiceDate, Nullable<bool> payStatus, Nullable<int> prevDuePaid, Nullable<int> currentChargePaid, Nullable<int> paidAmt, Nullable<int> balAmt, Nullable<int> zoneID, string productModelNo, Nullable<System.DateTime> productExpDate, Nullable<int> warantyStatus, string altContact, Nullable<int> nextServiceCat)
        {
            var compIDParameter = compID.HasValue ?
                new ObjectParameter("CompID", compID) :
                new ObjectParameter("CompID", typeof(int));
    
            var complaintIDParameter = complaintID != null ?
                new ObjectParameter("ComplaintID", complaintID) :
                new ObjectParameter("ComplaintID", typeof(string));
    
            var complaintDateParameter = complaintDate.HasValue ?
                new ObjectParameter("ComplaintDate", complaintDate) :
                new ObjectParameter("ComplaintDate", typeof(System.DateTime));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var customeraddParameter = customeradd != null ?
                new ObjectParameter("Customeradd", customeradd) :
                new ObjectParameter("Customeradd", typeof(string));
    
            var customerContactParameter = customerContact != null ?
                new ObjectParameter("CustomerContact", customerContact) :
                new ObjectParameter("CustomerContact", typeof(string));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("EmpID", empID) :
                new ObjectParameter("EmpID", typeof(int));
    
            var visitDateParameter = visitDate.HasValue ?
                new ObjectParameter("VisitDate", visitDate) :
                new ObjectParameter("VisitDate", typeof(System.DateTime));
    
            var closeDateParameter = closeDate.HasValue ?
                new ObjectParameter("CloseDate", closeDate) :
                new ObjectParameter("CloseDate", typeof(System.DateTime));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var isNewParameter = isNew.HasValue ?
                new ObjectParameter("IsNew", isNew) :
                new ObjectParameter("IsNew", typeof(bool));
    
            var resolutionStatusParameter = resolutionStatus.HasValue ?
                new ObjectParameter("ResolutionStatus", resolutionStatus) :
                new ObjectParameter("ResolutionStatus", typeof(int));
    
            var compStartTimeParameter = compStartTime.HasValue ?
                new ObjectParameter("CompStartTime", compStartTime) :
                new ObjectParameter("CompStartTime", typeof(System.TimeSpan));
    
            var compEndTimeParameter = compEndTime.HasValue ?
                new ObjectParameter("CompEndTime", compEndTime) :
                new ObjectParameter("CompEndTime", typeof(System.TimeSpan));
    
            var submittedBYParameter = submittedBY.HasValue ?
                new ObjectParameter("SubmittedBY", submittedBY) :
                new ObjectParameter("SubmittedBY", typeof(int));
    
            var referenceNoParameter = referenceNo != null ?
                new ObjectParameter("ReferenceNo", referenceNo) :
                new ObjectParameter("ReferenceNo", typeof(string));
    
            var logTypeParameter = logType.HasValue ?
                new ObjectParameter("LogType", logType) :
                new ObjectParameter("LogType", typeof(int));
    
            var serviceDateParameter = serviceDate.HasValue ?
                new ObjectParameter("ServiceDate", serviceDate) :
                new ObjectParameter("ServiceDate", typeof(System.DateTime));
    
            var actServiceDateParameter = actServiceDate.HasValue ?
                new ObjectParameter("ActServiceDate", actServiceDate) :
                new ObjectParameter("ActServiceDate", typeof(System.DateTime));
    
            var payStatusParameter = payStatus.HasValue ?
                new ObjectParameter("PayStatus", payStatus) :
                new ObjectParameter("PayStatus", typeof(bool));
    
            var prevDuePaidParameter = prevDuePaid.HasValue ?
                new ObjectParameter("PrevDuePaid", prevDuePaid) :
                new ObjectParameter("PrevDuePaid", typeof(int));
    
            var currentChargePaidParameter = currentChargePaid.HasValue ?
                new ObjectParameter("CurrentChargePaid", currentChargePaid) :
                new ObjectParameter("CurrentChargePaid", typeof(int));
    
            var paidAmtParameter = paidAmt.HasValue ?
                new ObjectParameter("PaidAmt", paidAmt) :
                new ObjectParameter("PaidAmt", typeof(int));
    
            var balAmtParameter = balAmt.HasValue ?
                new ObjectParameter("BalAmt", balAmt) :
                new ObjectParameter("BalAmt", typeof(int));
    
            var zoneIDParameter = zoneID.HasValue ?
                new ObjectParameter("ZoneID", zoneID) :
                new ObjectParameter("ZoneID", typeof(int));
    
            var productModelNoParameter = productModelNo != null ?
                new ObjectParameter("ProductModelNo", productModelNo) :
                new ObjectParameter("ProductModelNo", typeof(string));
    
            var productExpDateParameter = productExpDate.HasValue ?
                new ObjectParameter("ProductExpDate", productExpDate) :
                new ObjectParameter("ProductExpDate", typeof(System.DateTime));
    
            var warantyStatusParameter = warantyStatus.HasValue ?
                new ObjectParameter("WarantyStatus", warantyStatus) :
                new ObjectParameter("WarantyStatus", typeof(int));
    
            var altContactParameter = altContact != null ?
                new ObjectParameter("AltContact", altContact) :
                new ObjectParameter("AltContact", typeof(string));
    
            var nextServiceCatParameter = nextServiceCat.HasValue ?
                new ObjectParameter("NextServiceCat", nextServiceCat) :
                new ObjectParameter("NextServiceCat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Spo_InsertUpdateComplaint", compIDParameter, complaintIDParameter, complaintDateParameter, customerIDParameter, customerNameParameter, customeraddParameter, customerContactParameter, statusIDParameter, empIDParameter, visitDateParameter, closeDateParameter, shopIDParameter, remarkParameter, isNewParameter, resolutionStatusParameter, compStartTimeParameter, compEndTimeParameter, submittedBYParameter, referenceNoParameter, logTypeParameter, serviceDateParameter, actServiceDateParameter, payStatusParameter, prevDuePaidParameter, currentChargePaidParameter, paidAmtParameter, balAmtParameter, zoneIDParameter, productModelNoParameter, productExpDateParameter, warantyStatusParameter, altContactParameter, nextServiceCatParameter);
        }
    
        public virtual int Spo_InsertUpdateComplaint_Online(Nullable<int> compID, string complaintID, Nullable<System.DateTime> complaintDate, Nullable<int> customerID, string customerName, string customeradd, string customerContact, Nullable<int> statusID, Nullable<int> empID, Nullable<System.DateTime> visitDate, Nullable<System.DateTime> closeDate, Nullable<int> shopID, string remark, Nullable<bool> isNew, Nullable<int> resolutionStatus, Nullable<System.TimeSpan> compStartTime, Nullable<System.TimeSpan> compEndTime, Nullable<int> submittedBY, string referenceNo)
        {
            var compIDParameter = compID.HasValue ?
                new ObjectParameter("CompID", compID) :
                new ObjectParameter("CompID", typeof(int));
    
            var complaintIDParameter = complaintID != null ?
                new ObjectParameter("ComplaintID", complaintID) :
                new ObjectParameter("ComplaintID", typeof(string));
    
            var complaintDateParameter = complaintDate.HasValue ?
                new ObjectParameter("ComplaintDate", complaintDate) :
                new ObjectParameter("ComplaintDate", typeof(System.DateTime));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var customeraddParameter = customeradd != null ?
                new ObjectParameter("Customeradd", customeradd) :
                new ObjectParameter("Customeradd", typeof(string));
    
            var customerContactParameter = customerContact != null ?
                new ObjectParameter("CustomerContact", customerContact) :
                new ObjectParameter("CustomerContact", typeof(string));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("EmpID", empID) :
                new ObjectParameter("EmpID", typeof(int));
    
            var visitDateParameter = visitDate.HasValue ?
                new ObjectParameter("VisitDate", visitDate) :
                new ObjectParameter("VisitDate", typeof(System.DateTime));
    
            var closeDateParameter = closeDate.HasValue ?
                new ObjectParameter("CloseDate", closeDate) :
                new ObjectParameter("CloseDate", typeof(System.DateTime));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var isNewParameter = isNew.HasValue ?
                new ObjectParameter("IsNew", isNew) :
                new ObjectParameter("IsNew", typeof(bool));
    
            var resolutionStatusParameter = resolutionStatus.HasValue ?
                new ObjectParameter("ResolutionStatus", resolutionStatus) :
                new ObjectParameter("ResolutionStatus", typeof(int));
    
            var compStartTimeParameter = compStartTime.HasValue ?
                new ObjectParameter("CompStartTime", compStartTime) :
                new ObjectParameter("CompStartTime", typeof(System.TimeSpan));
    
            var compEndTimeParameter = compEndTime.HasValue ?
                new ObjectParameter("CompEndTime", compEndTime) :
                new ObjectParameter("CompEndTime", typeof(System.TimeSpan));
    
            var submittedBYParameter = submittedBY.HasValue ?
                new ObjectParameter("SubmittedBY", submittedBY) :
                new ObjectParameter("SubmittedBY", typeof(int));
    
            var referenceNoParameter = referenceNo != null ?
                new ObjectParameter("ReferenceNo", referenceNo) :
                new ObjectParameter("ReferenceNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Spo_InsertUpdateComplaint_Online", compIDParameter, complaintIDParameter, complaintDateParameter, customerIDParameter, customerNameParameter, customeraddParameter, customerContactParameter, statusIDParameter, empIDParameter, visitDateParameter, closeDateParameter, shopIDParameter, remarkParameter, isNewParameter, resolutionStatusParameter, compStartTimeParameter, compEndTimeParameter, submittedBYParameter, referenceNoParameter);
        }
    
        public virtual int Spo_InsertUpdateEnquiry(Nullable<int> compID, string complaintID, Nullable<System.DateTime> complaintDate, Nullable<int> customerID, string customerName, string customeradd, string customerContact, Nullable<int> statusID, Nullable<int> empID, Nullable<System.DateTime> visitDate, Nullable<System.DateTime> closeDate, Nullable<int> shopID, string remark, Nullable<bool> isNew, Nullable<int> resolutionStatus)
        {
            var compIDParameter = compID.HasValue ?
                new ObjectParameter("CompID", compID) :
                new ObjectParameter("CompID", typeof(int));
    
            var complaintIDParameter = complaintID != null ?
                new ObjectParameter("ComplaintID", complaintID) :
                new ObjectParameter("ComplaintID", typeof(string));
    
            var complaintDateParameter = complaintDate.HasValue ?
                new ObjectParameter("ComplaintDate", complaintDate) :
                new ObjectParameter("ComplaintDate", typeof(System.DateTime));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var customeraddParameter = customeradd != null ?
                new ObjectParameter("Customeradd", customeradd) :
                new ObjectParameter("Customeradd", typeof(string));
    
            var customerContactParameter = customerContact != null ?
                new ObjectParameter("CustomerContact", customerContact) :
                new ObjectParameter("CustomerContact", typeof(string));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("EmpID", empID) :
                new ObjectParameter("EmpID", typeof(int));
    
            var visitDateParameter = visitDate.HasValue ?
                new ObjectParameter("VisitDate", visitDate) :
                new ObjectParameter("VisitDate", typeof(System.DateTime));
    
            var closeDateParameter = closeDate.HasValue ?
                new ObjectParameter("CloseDate", closeDate) :
                new ObjectParameter("CloseDate", typeof(System.DateTime));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var isNewParameter = isNew.HasValue ?
                new ObjectParameter("IsNew", isNew) :
                new ObjectParameter("IsNew", typeof(bool));
    
            var resolutionStatusParameter = resolutionStatus.HasValue ?
                new ObjectParameter("ResolutionStatus", resolutionStatus) :
                new ObjectParameter("ResolutionStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Spo_InsertUpdateEnquiry", compIDParameter, complaintIDParameter, complaintDateParameter, customerIDParameter, customerNameParameter, customeraddParameter, customerContactParameter, statusIDParameter, empIDParameter, visitDateParameter, closeDateParameter, shopIDParameter, remarkParameter, isNewParameter, resolutionStatusParameter);
        }
    
        public virtual ObjectResult<spo_LogType_Result> spo_LogType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spo_LogType_Result>("spo_LogType");
        }
    
        public virtual ObjectResult<Spo_PaymentStatus_Result> Spo_PaymentStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_PaymentStatus_Result>("Spo_PaymentStatus");
        }
    
        public virtual ObjectResult<Spo_ProductDetail_Result> Spo_ProductDetail(Nullable<int> shopid)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_ProductDetail_Result>("Spo_ProductDetail", shopidParameter);
        }
    
        public virtual ObjectResult<Spo_SearchCustomer_Result> Spo_SearchCustomer(string init, Nullable<int> shopID)
        {
            var initParameter = init != null ?
                new ObjectParameter("init", init) :
                new ObjectParameter("init", typeof(string));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_SearchCustomer_Result>("Spo_SearchCustomer", initParameter, shopIDParameter);
        }
    
        public virtual ObjectResult<Spo_SearchVendor_Result> Spo_SearchVendor(string init, Nullable<int> shopID)
        {
            var initParameter = init != null ?
                new ObjectParameter("init", init) :
                new ObjectParameter("init", typeof(string));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_SearchVendor_Result>("Spo_SearchVendor", initParameter, shopIDParameter);
        }
    
        public virtual int Spo_SendEmpSMS(string statusID, Nullable<System.DateTime> complaintdate, Nullable<System.TimeSpan> compstarttime, string empcontact, string complaintID, string customerID, Nullable<int> shopid)
        {
            var statusIDParameter = statusID != null ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(string));
    
            var complaintdateParameter = complaintdate.HasValue ?
                new ObjectParameter("Complaintdate", complaintdate) :
                new ObjectParameter("Complaintdate", typeof(System.DateTime));
    
            var compstarttimeParameter = compstarttime.HasValue ?
                new ObjectParameter("compstarttime", compstarttime) :
                new ObjectParameter("compstarttime", typeof(System.TimeSpan));
    
            var empcontactParameter = empcontact != null ?
                new ObjectParameter("empcontact", empcontact) :
                new ObjectParameter("empcontact", typeof(string));
    
            var complaintIDParameter = complaintID != null ?
                new ObjectParameter("ComplaintID", complaintID) :
                new ObjectParameter("ComplaintID", typeof(string));
    
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Spo_SendEmpSMS", statusIDParameter, complaintdateParameter, compstarttimeParameter, empcontactParameter, complaintIDParameter, customerIDParameter, shopidParameter);
        }
    
        public virtual ObjectResult<Spo_TrackComplaint_Result> Spo_TrackComplaint(Nullable<int> custID, string compID)
        {
            var custIDParameter = custID.HasValue ?
                new ObjectParameter("CustID", custID) :
                new ObjectParameter("CustID", typeof(int));
    
            var compIDParameter = compID != null ?
                new ObjectParameter("CompID", compID) :
                new ObjectParameter("CompID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_TrackComplaint_Result>("Spo_TrackComplaint", custIDParameter, compIDParameter);
        }
    
        public virtual ObjectResult<AMCDetails_Result> AMCDetails(Nullable<int> customerID, Nullable<int> shopID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AMCDetails_Result>("AMCDetails", customerIDParameter, shopIDParameter);
        }
    
        public virtual ObjectResult<BindBranchMaster1_Result> BindBranchMaster1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindBranchMaster1_Result>("BindBranchMaster1");
        }
    
        public virtual int Bindcomplaintstatu(Nullable<int> shopid)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bindcomplaintstatu", shopidParameter);
        }
    
        public virtual ObjectResult<Bindcomplaintstatus_Result> Bindcomplaintstatus(Nullable<int> shopid)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bindcomplaintstatus_Result>("Bindcomplaintstatus", shopidParameter);
        }
    
        public virtual int BindComplaintStatusMaster(Nullable<int> shopid)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BindComplaintStatusMaster", shopidParameter);
        }
    
        public virtual ObjectResult<BindDebitor_Result> BindDebitor(Nullable<int> shopid)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindDebitor_Result>("BindDebitor", shopidParameter);
        }
    
        public virtual int BindItemMaster(Nullable<int> shopid)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BindItemMaster", shopidParameter);
        }
    
        public virtual ObjectResult<BindRefCustomerMaster_Result> BindRefCustomerMaster(Nullable<int> shopid)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindRefCustomerMaster_Result>("BindRefCustomerMaster", shopidParameter);
        }
    
        [DbFunction("MSEntities", "CSVToTable")]
        public virtual IQueryable<Nullable<int>> CSVToTable(string inStr)
        {
            var inStrParameter = inStr != null ?
                new ObjectParameter("InStr", inStr) :
                new ObjectParameter("InStr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<int>>("[MSEntities].[CSVToTable](@InStr)", inStrParameter);
        }
    
        public virtual ObjectResult<DailyPurchaseReport_Item_Result> DailyPurchaseReport_Item(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> shopid)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DailyPurchaseReport_Item_Result>("DailyPurchaseReport_Item", fromDateParameter, toDateParameter, shopidParameter);
        }
    
        public virtual int DeleteBindComplaintStatus(string action, Nullable<int> statusId)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteBindComplaintStatus", actionParameter, statusIdParameter);
        }
    
        public virtual int DeleteBindItemDetails(string action, Nullable<int> itemId)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteBindItemDetails", actionParameter, itemIdParameter);
        }
    
        public virtual ObjectResult<DeleteBindProductsDetails_Result> DeleteBindProductsDetails(string action, Nullable<int> productId)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeleteBindProductsDetails_Result>("DeleteBindProductsDetails", actionParameter, productIdParameter);
        }
    
        public virtual ObjectResult<DeleteBindUnitDetails_Result> DeleteBindUnitDetails(string action, Nullable<int> unitid)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var unitidParameter = unitid.HasValue ?
                new ObjectParameter("Unitid", unitid) :
                new ObjectParameter("Unitid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeleteBindUnitDetails_Result>("DeleteBindUnitDetails", actionParameter, unitidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GenLedger(Nullable<int> shopid)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GenLedger", shopidParameter);
        }
    
        public virtual ObjectResult<Get_Accept_Offer_From_Fabkut_Result> Get_Accept_Offer_From_Fabkut(string mode)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Accept_Offer_From_Fabkut_Result>("Get_Accept_Offer_From_Fabkut", modeParameter);
        }
    
        public virtual ObjectResult<Get_BusinessGrid_Own_Offer_Result> Get_BusinessGrid_Own_Offer(string mode)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_BusinessGrid_Own_Offer_Result>("Get_BusinessGrid_Own_Offer", modeParameter);
        }
    
        public virtual ObjectResult<Get_Fabkut_Edited_Offer_Result> Get_Fabkut_Edited_Offer(Nullable<int> fabkut_offer_id, string mode)
        {
            var fabkut_offer_idParameter = fabkut_offer_id.HasValue ?
                new ObjectParameter("fabkut_offer_id", fabkut_offer_id) :
                new ObjectParameter("fabkut_offer_id", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Fabkut_Edited_Offer_Result>("Get_Fabkut_Edited_Offer", fabkut_offer_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<Get_Fabkut_Nested_Offer_Result> Get_Fabkut_Nested_Offer(Nullable<int> fabkut_offer_id, string mode)
        {
            var fabkut_offer_idParameter = fabkut_offer_id.HasValue ?
                new ObjectParameter("fabkut_offer_id", fabkut_offer_id) :
                new ObjectParameter("fabkut_offer_id", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Fabkut_Nested_Offer_Result>("Get_Fabkut_Nested_Offer", fabkut_offer_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<Get_Fabkut_Nested_Offer_NewGrid_Result> Get_Fabkut_Nested_Offer_NewGrid(Nullable<int> fabkut_offer_id, string mode)
        {
            var fabkut_offer_idParameter = fabkut_offer_id.HasValue ?
                new ObjectParameter("fabkut_offer_id", fabkut_offer_id) :
                new ObjectParameter("fabkut_offer_id", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Fabkut_Nested_Offer_NewGrid_Result>("Get_Fabkut_Nested_Offer_NewGrid", fabkut_offer_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<Get_Fabkut_Nested_Selected_Offer_Result> Get_Fabkut_Nested_Selected_Offer(Nullable<int> fabkut_offer_id, string mode)
        {
            var fabkut_offer_idParameter = fabkut_offer_id.HasValue ?
                new ObjectParameter("fabkut_offer_id", fabkut_offer_id) :
                new ObjectParameter("fabkut_offer_id", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Fabkut_Nested_Selected_Offer_Result>("Get_Fabkut_Nested_Selected_Offer", fabkut_offer_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<Get_Fabkut_Offer_Result> Get_Fabkut_Offer(string mode)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Fabkut_Offer_Result>("Get_Fabkut_Offer", modeParameter);
        }
    
        public virtual ObjectResult<Get_Offer_Launched_By_Fabkut_Result> Get_Offer_Launched_By_Fabkut(string mode)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Offer_Launched_By_Fabkut_Result>("Get_Offer_Launched_By_Fabkut", modeParameter);
        }
    
        public virtual ObjectResult<Get_Own_Accept_Offer_Result> Get_Own_Accept_Offer(Nullable<int> businessID, string mode)
        {
            var businessIDParameter = businessID.HasValue ?
                new ObjectParameter("businessID", businessID) :
                new ObjectParameter("businessID", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Own_Accept_Offer_Result>("Get_Own_Accept_Offer", businessIDParameter, modeParameter);
        }
    
        public virtual ObjectResult<Get_Product_Detail_Order_Wise_Result> Get_Product_Detail_Order_Wise(Nullable<int> order_id, string mode)
        {
            var order_idParameter = order_id.HasValue ?
                new ObjectParameter("order_id", order_id) :
                new ObjectParameter("order_id", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Product_Detail_Order_Wise_Result>("Get_Product_Detail_Order_Wise", order_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<Get_Product_Vendor_Detail_Result> Get_Product_Vendor_Detail(Nullable<int> business_id, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Product_Vendor_Detail_Result>("Get_Product_Vendor_Detail", business_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Get_Seat_Wise_amount(Nullable<int> business_id, Nullable<System.DateTime> booking_date, Nullable<int> work_place_id, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var booking_dateParameter = booking_date.HasValue ?
                new ObjectParameter("Booking_date", booking_date) :
                new ObjectParameter("Booking_date", typeof(System.DateTime));
    
            var work_place_idParameter = work_place_id.HasValue ?
                new ObjectParameter("work_place_id", work_place_id) :
                new ObjectParameter("work_place_id", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Get_Seat_Wise_amount", business_idParameter, booking_dateParameter, work_place_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<Get_Seat_Wise_Customer_Detail_Result> Get_Seat_Wise_Customer_Detail(Nullable<int> business_id, Nullable<System.DateTime> booking_date, Nullable<int> work_place_id, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var booking_dateParameter = booking_date.HasValue ?
                new ObjectParameter("Booking_date", booking_date) :
                new ObjectParameter("Booking_date", typeof(System.DateTime));
    
            var work_place_idParameter = work_place_id.HasValue ?
                new ObjectParameter("work_place_id", work_place_id) :
                new ObjectParameter("work_place_id", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Seat_Wise_Customer_Detail_Result>("Get_Seat_Wise_Customer_Detail", business_idParameter, booking_dateParameter, work_place_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<Get_Seat_Wise_Customer_Services_Result> Get_Seat_Wise_Customer_Services(Nullable<int> booking_id, Nullable<int> business_id, Nullable<System.DateTime> booking_date, Nullable<int> work_place_id, string mode)
        {
            var booking_idParameter = booking_id.HasValue ?
                new ObjectParameter("booking_id", booking_id) :
                new ObjectParameter("booking_id", typeof(int));
    
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var booking_dateParameter = booking_date.HasValue ?
                new ObjectParameter("Booking_date", booking_date) :
                new ObjectParameter("Booking_date", typeof(System.DateTime));
    
            var work_place_idParameter = work_place_id.HasValue ?
                new ObjectParameter("work_place_id", work_place_id) :
                new ObjectParameter("work_place_id", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Seat_Wise_Customer_Services_Result>("Get_Seat_Wise_Customer_Services", booking_idParameter, business_idParameter, booking_dateParameter, work_place_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<prc_emp_next_slot_status_Result> prc_emp_next_slot_status(Nullable<int> business_id, Nullable<int> emp_id)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_emp_next_slot_status_Result>("prc_emp_next_slot_status", business_idParameter, emp_idParameter);
        }
    
        public virtual ObjectResult<prc_emp_slot_status_Result> prc_emp_slot_status(Nullable<int> business_id, Nullable<System.DateTime> date_from)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var date_fromParameter = date_from.HasValue ?
                new ObjectParameter("date_from", date_from) :
                new ObjectParameter("date_from", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_emp_slot_status_Result>("prc_emp_slot_status", business_idParameter, date_fromParameter);
        }
    
        public virtual ObjectResult<prc_emp_slot_status1_Result> prc_emp_slot_status1(Nullable<int> business_id, Nullable<System.DateTime> date_from)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var date_fromParameter = date_from.HasValue ?
                new ObjectParameter("date_from", date_from) :
                new ObjectParameter("date_from", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_emp_slot_status1_Result>("prc_emp_slot_status1", business_idParameter, date_fromParameter);
        }
    
        public virtual int prc_emp_slot_status3(Nullable<int> business_id, Nullable<System.DateTime> date_from)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var date_fromParameter = date_from.HasValue ?
                new ObjectParameter("date_from", date_from) :
                new ObjectParameter("date_from", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_emp_slot_status3", business_idParameter, date_fromParameter);
        }
    
        public virtual int prc_emp_slot_status3_Sheet(Nullable<int> business_id, Nullable<System.DateTime> date_from)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var date_fromParameter = date_from.HasValue ?
                new ObjectParameter("date_from", date_from) :
                new ObjectParameter("date_from", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_emp_slot_status3_Sheet", business_idParameter, date_fromParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> prc_Get_slot_for_booking(Nullable<int> business_id)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("prc_Get_slot_for_booking", business_idParameter);
        }
    
        public virtual ObjectResult<prc_Get_slot_for_display_Result> prc_Get_slot_for_display(Nullable<int> business_id)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_Get_slot_for_display_Result>("prc_Get_slot_for_display", business_idParameter);
        }
    
        public virtual ObjectResult<prc_Get_slot_roster_id_booking_Start_Time_Result> prc_Get_slot_roster_id_booking_Start_Time(Nullable<int> business_id, Nullable<System.DateTime> date_from)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var date_fromParameter = date_from.HasValue ?
                new ObjectParameter("date_from", date_from) :
                new ObjectParameter("date_from", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_Get_slot_roster_id_booking_Start_Time_Result>("prc_Get_slot_roster_id_booking_Start_Time", business_idParameter, date_fromParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> prc_Get_slot_roster_id_for_online_booking(Nullable<int> business_id, string slot_start, Nullable<int> emp_id, string eta)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var slot_startParameter = slot_start != null ?
                new ObjectParameter("slot_start", slot_start) :
                new ObjectParameter("slot_start", typeof(string));
    
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            var etaParameter = eta != null ?
                new ObjectParameter("eta", eta) :
                new ObjectParameter("eta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("prc_Get_slot_roster_id_for_online_booking", business_idParameter, slot_startParameter, emp_idParameter, etaParameter);
        }
    
        public virtual ObjectResult<prc_Get_slot_roster_id_OFF_booking_29_Sheet_Result> prc_Get_slot_roster_id_OFF_booking_29_Sheet(Nullable<int> business_id, Nullable<int> work_place_id, Nullable<int> eta, Nullable<System.DateTime> date_from)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var work_place_idParameter = work_place_id.HasValue ?
                new ObjectParameter("work_place_id", work_place_id) :
                new ObjectParameter("work_place_id", typeof(int));
    
            var etaParameter = eta.HasValue ?
                new ObjectParameter("eta", eta) :
                new ObjectParameter("eta", typeof(int));
    
            var date_fromParameter = date_from.HasValue ?
                new ObjectParameter("date_from", date_from) :
                new ObjectParameter("date_from", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_Get_slot_roster_id_OFF_booking_29_Sheet_Result>("prc_Get_slot_roster_id_OFF_booking_29_Sheet", business_idParameter, work_place_idParameter, etaParameter, date_fromParameter);
        }
    
        public virtual ObjectResult<prc_Get_slot_roster_id_OFF_booking_Start_Time_Result> prc_Get_slot_roster_id_OFF_booking_Start_Time(Nullable<int> business_id, Nullable<int> eta, Nullable<System.DateTime> date_from)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var etaParameter = eta.HasValue ?
                new ObjectParameter("eta", eta) :
                new ObjectParameter("eta", typeof(int));
    
            var date_fromParameter = date_from.HasValue ?
                new ObjectParameter("date_from", date_from) :
                new ObjectParameter("date_from", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_Get_slot_roster_id_OFF_booking_Start_Time_Result>("prc_Get_slot_roster_id_OFF_booking_Start_Time", business_idParameter, etaParameter, date_fromParameter);
        }
    
        public virtual ObjectResult<prc_Get_slot_Start_Time_Result> prc_Get_slot_Start_Time(Nullable<System.DateTime> date_from)
        {
            var date_fromParameter = date_from.HasValue ?
                new ObjectParameter("date_from", date_from) :
                new ObjectParameter("date_from", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_Get_slot_Start_Time_Result>("prc_Get_slot_Start_Time", date_fromParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> prc_slot_creation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("prc_slot_creation");
        }
    
        public virtual int prc_slot_creation_business(Nullable<int> business_id)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_slot_creation_business", business_idParameter);
        }
    
        public virtual int prc_slot_roster_creation_Admin_job_sheet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_slot_roster_creation_Admin_job_sheet");
        }
    
        public virtual int prc_slot_roster_creation_for_Sheet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_slot_roster_creation_for_Sheet");
        }
    
        public virtual int prc_slot_roster_creation_for_Sheet_Bussiness(Nullable<int> business_id)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_slot_roster_creation_for_Sheet_Bussiness", business_idParameter);
        }
    
        public virtual int SaleProduct(Nullable<int> autoID, Nullable<int> business_id, Nullable<int> booking_id, Nullable<int> endUserID, string endUserType, Nullable<int> productID, Nullable<long> productAmount, string prescription, Nullable<long> qty, Nullable<System.DateTime> sdate)
        {
            var autoIDParameter = autoID.HasValue ?
                new ObjectParameter("AutoID", autoID) :
                new ObjectParameter("AutoID", typeof(int));
    
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var booking_idParameter = booking_id.HasValue ?
                new ObjectParameter("booking_id", booking_id) :
                new ObjectParameter("booking_id", typeof(int));
    
            var endUserIDParameter = endUserID.HasValue ?
                new ObjectParameter("EndUserID", endUserID) :
                new ObjectParameter("EndUserID", typeof(int));
    
            var endUserTypeParameter = endUserType != null ?
                new ObjectParameter("EndUserType", endUserType) :
                new ObjectParameter("EndUserType", typeof(string));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var productAmountParameter = productAmount.HasValue ?
                new ObjectParameter("ProductAmount", productAmount) :
                new ObjectParameter("ProductAmount", typeof(long));
    
            var prescriptionParameter = prescription != null ?
                new ObjectParameter("Prescription", prescription) :
                new ObjectParameter("Prescription", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(long));
    
            var sdateParameter = sdate.HasValue ?
                new ObjectParameter("Sdate", sdate) :
                new ObjectParameter("Sdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaleProduct", autoIDParameter, business_idParameter, booking_idParameter, endUserIDParameter, endUserTypeParameter, productIDParameter, productAmountParameter, prescriptionParameter, qtyParameter, sdateParameter);
        }
    
        public virtual ObjectResult<slot_Result> slot()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<slot_Result>("slot");
        }
    
        public virtual ObjectResult<slot_for_display_dropdown_time_Result> slot_for_display_dropdown_time(Nullable<int> business_id)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<slot_for_display_dropdown_time_Result>("slot_for_display_dropdown_time", business_idParameter);
        }
    
        public virtual ObjectResult<slot1_Result> slot1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<slot1_Result>("slot1");
        }
    
        public virtual ObjectResult<sp_BindGender_Result> sp_BindGender()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BindGender_Result>("sp_BindGender");
        }
    
        public virtual ObjectResult<sp_BindMaritalStatus_Result> sp_BindMaritalStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BindMaritalStatus_Result>("sp_BindMaritalStatus");
        }
    
        public virtual ObjectResult<sp_BindMemberDetails_Result> sp_BindMemberDetails(Nullable<int> shopid, string memberName, Nullable<int> memberID)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            var memberNameParameter = memberName != null ?
                new ObjectParameter("MemberName", memberName) :
                new ObjectParameter("MemberName", typeof(string));
    
            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("MemberID", memberID) :
                new ObjectParameter("MemberID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BindMemberDetails_Result>("sp_BindMemberDetails", shopidParameter, memberNameParameter, memberIDParameter);
        }
    
        public virtual ObjectResult<sp_BindProofDetails_Result> sp_BindProofDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BindProofDetails_Result>("sp_BindProofDetails");
        }
    
        public virtual ObjectResult<sp_BindStoreRegistraction1_Result> sp_BindStoreRegistraction1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BindStoreRegistraction1_Result>("sp_BindStoreRegistraction1");
        }
    
        public virtual ObjectResult<sp_BindTextBoxValues_Result> sp_BindTextBoxValues(string barcode)
        {
            var barcodeParameter = barcode != null ?
                new ObjectParameter("Barcode", barcode) :
                new ObjectParameter("Barcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BindTextBoxValues_Result>("sp_BindTextBoxValues", barcodeParameter);
        }
    
        public virtual ObjectResult<sp_booking_services_Result> sp_booking_services(Nullable<int> booking_id, Nullable<int> business_id, Nullable<int> business_service_id, Nullable<int> eta, Nullable<int> rate, Nullable<System.DateTime> date, string mode)
        {
            var booking_idParameter = booking_id.HasValue ?
                new ObjectParameter("booking_id", booking_id) :
                new ObjectParameter("booking_id", typeof(int));
    
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var business_service_idParameter = business_service_id.HasValue ?
                new ObjectParameter("business_service_id", business_service_id) :
                new ObjectParameter("business_service_id", typeof(int));
    
            var etaParameter = eta.HasValue ?
                new ObjectParameter("eta", eta) :
                new ObjectParameter("eta", typeof(int));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_booking_services_Result>("sp_booking_services", booking_idParameter, business_idParameter, business_service_idParameter, etaParameter, rateParameter, dateParameter, modeParameter);
        }
    
        public virtual int sp_ChangePassword(Nullable<int> shopid, string shopUsrid, string shopOldPassword, string newPassword)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            var shopUsridParameter = shopUsrid != null ?
                new ObjectParameter("ShopUsrid", shopUsrid) :
                new ObjectParameter("ShopUsrid", typeof(string));
    
            var shopOldPasswordParameter = shopOldPassword != null ?
                new ObjectParameter("ShopOldPassword", shopOldPassword) :
                new ObjectParameter("ShopOldPassword", typeof(string));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("NewPassword", newPassword) :
                new ObjectParameter("NewPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ChangePassword", shopidParameter, shopUsridParameter, shopOldPasswordParameter, newPasswordParameter);
        }
    
        public virtual ObjectResult<sp_EmployeeLogin_Result> sp_EmployeeLogin(string username, string password, Nullable<int> shopid)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EmployeeLogin_Result>("sp_EmployeeLogin", usernameParameter, passwordParameter, shopidParameter);
        }
    
        public virtual int sp_ForgotPassword(string shopUserid, string shopNewPassword)
        {
            var shopUseridParameter = shopUserid != null ?
                new ObjectParameter("ShopUserid", shopUserid) :
                new ObjectParameter("ShopUserid", typeof(string));
    
            var shopNewPasswordParameter = shopNewPassword != null ?
                new ObjectParameter("ShopNewPassword", shopNewPassword) :
                new ObjectParameter("ShopNewPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ForgotPassword", shopUseridParameter, shopNewPasswordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_ForgotsPassword(string mobile, string oTP, Nullable<int> shopid)
        {
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var oTPParameter = oTP != null ?
                new ObjectParameter("OTP", oTP) :
                new ObjectParameter("OTP", typeof(string));
    
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_ForgotsPassword", mobileParameter, oTPParameter, shopidParameter);
        }
    
        public virtual ObjectResult<string> sp_GetMembershipid(Nullable<int> shopid)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_GetMembershipid", shopidParameter);
        }
    
        public virtual int sp_insertNotification(string contact, string messageText, Nullable<int> shopid, Nullable<System.DateTime> scheduledDate)
        {
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            var scheduledDateParameter = scheduledDate.HasValue ?
                new ObjectParameter("ScheduledDate", scheduledDate) :
                new ObjectParameter("ScheduledDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertNotification", contactParameter, messageTextParameter, shopidParameter, scheduledDateParameter);
        }
    
        public virtual int sp_InsertUpdateItems(Nullable<int> shopid, Nullable<int> itemid, string itemname, string charge, Nullable<bool> isActive)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            var itemidParameter = itemid.HasValue ?
                new ObjectParameter("Itemid", itemid) :
                new ObjectParameter("Itemid", typeof(int));
    
            var itemnameParameter = itemname != null ?
                new ObjectParameter("Itemname", itemname) :
                new ObjectParameter("Itemname", typeof(string));
    
            var chargeParameter = charge != null ?
                new ObjectParameter("Charge", charge) :
                new ObjectParameter("Charge", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertUpdateItems", shopidParameter, itemidParameter, itemnameParameter, chargeParameter, isActiveParameter);
        }
    
        public virtual int sp_insertupdateMemberRegistraction(Nullable<int> shopid, Nullable<int> memberid, Nullable<System.DateTime> admissionDate, string firstname, string lastname, string contact, string email, Nullable<int> gender, Nullable<System.DateTime> dateofBirth, Nullable<int> proofGiven, string proofDetails, string salary, string address, string employeeID, string role, string userID, string pwd)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            var memberidParameter = memberid.HasValue ?
                new ObjectParameter("Memberid", memberid) :
                new ObjectParameter("Memberid", typeof(int));
    
            var admissionDateParameter = admissionDate.HasValue ?
                new ObjectParameter("AdmissionDate", admissionDate) :
                new ObjectParameter("AdmissionDate", typeof(System.DateTime));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("Lastname", lastname) :
                new ObjectParameter("Lastname", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var dateofBirthParameter = dateofBirth.HasValue ?
                new ObjectParameter("DateofBirth", dateofBirth) :
                new ObjectParameter("DateofBirth", typeof(System.DateTime));
    
            var proofGivenParameter = proofGiven.HasValue ?
                new ObjectParameter("ProofGiven", proofGiven) :
                new ObjectParameter("ProofGiven", typeof(int));
    
            var proofDetailsParameter = proofDetails != null ?
                new ObjectParameter("ProofDetails", proofDetails) :
                new ObjectParameter("ProofDetails", typeof(string));
    
            var salaryParameter = salary != null ?
                new ObjectParameter("Salary", salary) :
                new ObjectParameter("Salary", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("Pwd", pwd) :
                new ObjectParameter("Pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertupdateMemberRegistraction", shopidParameter, memberidParameter, admissionDateParameter, firstnameParameter, lastnameParameter, contactParameter, emailParameter, genderParameter, dateofBirthParameter, proofGivenParameter, proofDetailsParameter, salaryParameter, addressParameter, employeeIDParameter, roleParameter, userIDParameter, pwdParameter);
        }
    
        public virtual int sp_InsertUpdateProducts_new(Nullable<int> shopid, Nullable<int> productid, Nullable<int> categoryProductId, Nullable<int> brandProductId, string productCode, string productname, Nullable<decimal> price, Nullable<int> unit, Nullable<decimal> cGST, Nullable<decimal> sGST, Nullable<decimal> iGST, string barcode, string hSNCode, string modelNo, string description, string imageName, Nullable<bool> isActive)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            var productidParameter = productid.HasValue ?
                new ObjectParameter("Productid", productid) :
                new ObjectParameter("Productid", typeof(int));
    
            var categoryProductIdParameter = categoryProductId.HasValue ?
                new ObjectParameter("CategoryProductId", categoryProductId) :
                new ObjectParameter("CategoryProductId", typeof(int));
    
            var brandProductIdParameter = brandProductId.HasValue ?
                new ObjectParameter("BrandProductId", brandProductId) :
                new ObjectParameter("BrandProductId", typeof(int));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var productnameParameter = productname != null ?
                new ObjectParameter("Productname", productname) :
                new ObjectParameter("Productname", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var unitParameter = unit.HasValue ?
                new ObjectParameter("Unit", unit) :
                new ObjectParameter("Unit", typeof(int));
    
            var cGSTParameter = cGST.HasValue ?
                new ObjectParameter("CGST", cGST) :
                new ObjectParameter("CGST", typeof(decimal));
    
            var sGSTParameter = sGST.HasValue ?
                new ObjectParameter("SGST", sGST) :
                new ObjectParameter("SGST", typeof(decimal));
    
            var iGSTParameter = iGST.HasValue ?
                new ObjectParameter("IGST", iGST) :
                new ObjectParameter("IGST", typeof(decimal));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("Barcode", barcode) :
                new ObjectParameter("Barcode", typeof(string));
    
            var hSNCodeParameter = hSNCode != null ?
                new ObjectParameter("HSNCode", hSNCode) :
                new ObjectParameter("HSNCode", typeof(string));
    
            var modelNoParameter = modelNo != null ?
                new ObjectParameter("ModelNo", modelNo) :
                new ObjectParameter("ModelNo", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var imageNameParameter = imageName != null ?
                new ObjectParameter("ImageName", imageName) :
                new ObjectParameter("ImageName", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertUpdateProducts_new", shopidParameter, productidParameter, categoryProductIdParameter, brandProductIdParameter, productCodeParameter, productnameParameter, priceParameter, unitParameter, cGSTParameter, sGSTParameter, iGSTParameter, barcodeParameter, hSNCodeParameter, modelNoParameter, descriptionParameter, imageNameParameter, isActiveParameter);
        }
    
        public virtual int sp_InsertUpdateReasonCode(Nullable<int> shopid, Nullable<int> statusID, Nullable<int> categoryID, string statusDescription, Nullable<bool> isActive, Nullable<int> timeDuration, Nullable<int> fDS1, Nullable<int> fDS2, Nullable<int> fDS3, Nullable<int> fDS4, Nullable<int> fDS5)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var statusDescriptionParameter = statusDescription != null ?
                new ObjectParameter("StatusDescription", statusDescription) :
                new ObjectParameter("StatusDescription", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var timeDurationParameter = timeDuration.HasValue ?
                new ObjectParameter("TimeDuration", timeDuration) :
                new ObjectParameter("TimeDuration", typeof(int));
    
            var fDS1Parameter = fDS1.HasValue ?
                new ObjectParameter("FDS1", fDS1) :
                new ObjectParameter("FDS1", typeof(int));
    
            var fDS2Parameter = fDS2.HasValue ?
                new ObjectParameter("FDS2", fDS2) :
                new ObjectParameter("FDS2", typeof(int));
    
            var fDS3Parameter = fDS3.HasValue ?
                new ObjectParameter("FDS3", fDS3) :
                new ObjectParameter("FDS3", typeof(int));
    
            var fDS4Parameter = fDS4.HasValue ?
                new ObjectParameter("FDS4", fDS4) :
                new ObjectParameter("FDS4", typeof(int));
    
            var fDS5Parameter = fDS5.HasValue ?
                new ObjectParameter("FDS5", fDS5) :
                new ObjectParameter("FDS5", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertUpdateReasonCode", shopidParameter, statusIDParameter, categoryIDParameter, statusDescriptionParameter, isActiveParameter, timeDurationParameter, fDS1Parameter, fDS2Parameter, fDS3Parameter, fDS4Parameter, fDS5Parameter);
        }
    
        public virtual int sp_InsertUpdateRefCustomers(Nullable<int> customerid, string customername, string city, string states, string country, string pincode, string emailid, string contact, string altContact, string address, string descriptions, Nullable<System.DateTime> birthdate, Nullable<System.DateTime> aniversaryDate, Nullable<bool> isActive, Nullable<int> shopID, Nullable<int> maritalStatus, Nullable<int> gender, string stateCode, string shippingAddress, string shippingCity, string shippingState, string shippingStateCode, string shippingPinCode, string shippingCountry, string cardnumber, Nullable<bool> sameAsBilling)
        {
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("Customerid", customerid) :
                new ObjectParameter("Customerid", typeof(int));
    
            var customernameParameter = customername != null ?
                new ObjectParameter("Customername", customername) :
                new ObjectParameter("Customername", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var statesParameter = states != null ?
                new ObjectParameter("States", states) :
                new ObjectParameter("States", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("Pincode", pincode) :
                new ObjectParameter("Pincode", typeof(string));
    
            var emailidParameter = emailid != null ?
                new ObjectParameter("Emailid", emailid) :
                new ObjectParameter("Emailid", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var altContactParameter = altContact != null ?
                new ObjectParameter("AltContact", altContact) :
                new ObjectParameter("AltContact", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var descriptionsParameter = descriptions != null ?
                new ObjectParameter("Descriptions", descriptions) :
                new ObjectParameter("Descriptions", typeof(string));
    
            var birthdateParameter = birthdate.HasValue ?
                new ObjectParameter("Birthdate", birthdate) :
                new ObjectParameter("Birthdate", typeof(System.DateTime));
    
            var aniversaryDateParameter = aniversaryDate.HasValue ?
                new ObjectParameter("AniversaryDate", aniversaryDate) :
                new ObjectParameter("AniversaryDate", typeof(System.DateTime));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var maritalStatusParameter = maritalStatus.HasValue ?
                new ObjectParameter("MaritalStatus", maritalStatus) :
                new ObjectParameter("MaritalStatus", typeof(int));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var shippingAddressParameter = shippingAddress != null ?
                new ObjectParameter("ShippingAddress", shippingAddress) :
                new ObjectParameter("ShippingAddress", typeof(string));
    
            var shippingCityParameter = shippingCity != null ?
                new ObjectParameter("ShippingCity", shippingCity) :
                new ObjectParameter("ShippingCity", typeof(string));
    
            var shippingStateParameter = shippingState != null ?
                new ObjectParameter("ShippingState", shippingState) :
                new ObjectParameter("ShippingState", typeof(string));
    
            var shippingStateCodeParameter = shippingStateCode != null ?
                new ObjectParameter("ShippingStateCode", shippingStateCode) :
                new ObjectParameter("ShippingStateCode", typeof(string));
    
            var shippingPinCodeParameter = shippingPinCode != null ?
                new ObjectParameter("ShippingPinCode", shippingPinCode) :
                new ObjectParameter("ShippingPinCode", typeof(string));
    
            var shippingCountryParameter = shippingCountry != null ?
                new ObjectParameter("ShippingCountry", shippingCountry) :
                new ObjectParameter("ShippingCountry", typeof(string));
    
            var cardnumberParameter = cardnumber != null ?
                new ObjectParameter("Cardnumber", cardnumber) :
                new ObjectParameter("Cardnumber", typeof(string));
    
            var sameAsBillingParameter = sameAsBilling.HasValue ?
                new ObjectParameter("SameAsBilling", sameAsBilling) :
                new ObjectParameter("SameAsBilling", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertUpdateRefCustomers", customeridParameter, customernameParameter, cityParameter, statesParameter, countryParameter, pincodeParameter, emailidParameter, contactParameter, altContactParameter, addressParameter, descriptionsParameter, birthdateParameter, aniversaryDateParameter, isActiveParameter, shopIDParameter, maritalStatusParameter, genderParameter, stateCodeParameter, shippingAddressParameter, shippingCityParameter, shippingStateParameter, shippingStateCodeParameter, shippingPinCodeParameter, shippingCountryParameter, cardnumberParameter, sameAsBillingParameter);
        }
    
        public virtual int sp_InsertUpdateShopRegister(Nullable<int> shopid, string shopname, string shopAddress, string shopDescription, string shopGSTIN, string shopTin, string shopCin, Nullable<int> shopRegNo, string shopOnwer, string shopOnwerPan, string shopOnwerMobile, string shoponwerOfficeContact, string shopEmail, string shopUserid, string reportname)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            var shopnameParameter = shopname != null ?
                new ObjectParameter("Shopname", shopname) :
                new ObjectParameter("Shopname", typeof(string));
    
            var shopAddressParameter = shopAddress != null ?
                new ObjectParameter("ShopAddress", shopAddress) :
                new ObjectParameter("ShopAddress", typeof(string));
    
            var shopDescriptionParameter = shopDescription != null ?
                new ObjectParameter("ShopDescription", shopDescription) :
                new ObjectParameter("ShopDescription", typeof(string));
    
            var shopGSTINParameter = shopGSTIN != null ?
                new ObjectParameter("ShopGSTIN", shopGSTIN) :
                new ObjectParameter("ShopGSTIN", typeof(string));
    
            var shopTinParameter = shopTin != null ?
                new ObjectParameter("ShopTin", shopTin) :
                new ObjectParameter("ShopTin", typeof(string));
    
            var shopCinParameter = shopCin != null ?
                new ObjectParameter("ShopCin", shopCin) :
                new ObjectParameter("ShopCin", typeof(string));
    
            var shopRegNoParameter = shopRegNo.HasValue ?
                new ObjectParameter("ShopRegNo", shopRegNo) :
                new ObjectParameter("ShopRegNo", typeof(int));
    
            var shopOnwerParameter = shopOnwer != null ?
                new ObjectParameter("ShopOnwer", shopOnwer) :
                new ObjectParameter("ShopOnwer", typeof(string));
    
            var shopOnwerPanParameter = shopOnwerPan != null ?
                new ObjectParameter("ShopOnwerPan", shopOnwerPan) :
                new ObjectParameter("ShopOnwerPan", typeof(string));
    
            var shopOnwerMobileParameter = shopOnwerMobile != null ?
                new ObjectParameter("ShopOnwerMobile", shopOnwerMobile) :
                new ObjectParameter("ShopOnwerMobile", typeof(string));
    
            var shoponwerOfficeContactParameter = shoponwerOfficeContact != null ?
                new ObjectParameter("ShoponwerOfficeContact", shoponwerOfficeContact) :
                new ObjectParameter("ShoponwerOfficeContact", typeof(string));
    
            var shopEmailParameter = shopEmail != null ?
                new ObjectParameter("ShopEmail", shopEmail) :
                new ObjectParameter("ShopEmail", typeof(string));
    
            var shopUseridParameter = shopUserid != null ?
                new ObjectParameter("ShopUserid", shopUserid) :
                new ObjectParameter("ShopUserid", typeof(string));
    
            var reportnameParameter = reportname != null ?
                new ObjectParameter("Reportname", reportname) :
                new ObjectParameter("Reportname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertUpdateShopRegister", shopidParameter, shopnameParameter, shopAddressParameter, shopDescriptionParameter, shopGSTINParameter, shopTinParameter, shopCinParameter, shopRegNoParameter, shopOnwerParameter, shopOnwerPanParameter, shopOnwerMobileParameter, shoponwerOfficeContactParameter, shopEmailParameter, shopUseridParameter, reportnameParameter);
        }
    
        public virtual int sp_InsertUpdateUsers(Nullable<int> userid, string customer_Name, string mobile, string password, string address, string email, Nullable<int> shopID, ObjectParameter oTP, ObjectParameter isMobileExist, string deviceID)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var customer_NameParameter = customer_Name != null ?
                new ObjectParameter("Customer_Name", customer_Name) :
                new ObjectParameter("Customer_Name", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var deviceIDParameter = deviceID != null ?
                new ObjectParameter("DeviceID", deviceID) :
                new ObjectParameter("DeviceID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertUpdateUsers", useridParameter, customer_NameParameter, mobileParameter, passwordParameter, addressParameter, emailParameter, shopIDParameter, oTP, isMobileExist, deviceIDParameter);
        }
    
        public virtual ObjectResult<string> sp_SearchEndUser(Nullable<int> business_id)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("Business_id", business_id) :
                new ObjectParameter("Business_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_SearchEndUser", business_idParameter);
        }
    
        public virtual ObjectResult<sp_Select_Enduser_Result> sp_Select_Enduser(string enduser_name, Nullable<int> business_id, string mode)
        {
            var enduser_nameParameter = enduser_name != null ?
                new ObjectParameter("Enduser_name", enduser_name) :
                new ObjectParameter("Enduser_name", typeof(string));
    
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Select_Enduser_Result>("sp_Select_Enduser", enduser_nameParameter, business_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_ShopLogin(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_ShopLogin", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<sp_ShowMemberDetails_Result> sp_ShowMemberDetails(Nullable<int> shopid, string memberName, Nullable<int> memberID)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            var memberNameParameter = memberName != null ?
                new ObjectParameter("MemberName", memberName) :
                new ObjectParameter("MemberName", typeof(string));
    
            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("MemberID", memberID) :
                new ObjectParameter("MemberID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ShowMemberDetails_Result>("sp_ShowMemberDetails", shopidParameter, memberNameParameter, memberIDParameter);
        }
    
        public virtual ObjectResult<sp_UserLogin_Result> sp_UserLogin(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UserLogin_Result>("sp_UserLogin", usernameParameter, passwordParameter);
        }
    
        [DbFunction("MSEntities", "Split")]
        public virtual IQueryable<string> Split(string @string, string delimiter)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("String", @string) :
                new ObjectParameter("String", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<string>("[MSEntities].[Split](@String, @Delimiter)", stringParameter, delimiterParameter);
        }
    
        public virtual int Spo_AutoSuggestCustomer(Nullable<int> productID, Nullable<int> vendorID, Nullable<System.DateTime> orderDate, Nullable<decimal> costPrice)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            var costPriceParameter = costPrice.HasValue ?
                new ObjectParameter("CostPrice", costPrice) :
                new ObjectParameter("CostPrice", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Spo_AutoSuggestCustomer", productIDParameter, vendorIDParameter, orderDateParameter, costPriceParameter);
        }
    
        public virtual ObjectResult<SPO_BusinessEndUser_Result> SPO_BusinessEndUser(Nullable<int> businessId, Nullable<int> fabkut_offer_id)
        {
            var businessIdParameter = businessId.HasValue ?
                new ObjectParameter("businessId", businessId) :
                new ObjectParameter("businessId", typeof(int));
    
            var fabkut_offer_idParameter = fabkut_offer_id.HasValue ?
                new ObjectParameter("fabkut_offer_id", fabkut_offer_id) :
                new ObjectParameter("fabkut_offer_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPO_BusinessEndUser_Result>("SPO_BusinessEndUser", businessIdParameter, fabkut_offer_idParameter);
        }
    
        public virtual ObjectResult<Spo_CustomerProfile_Result> Spo_CustomerProfile(Nullable<int> businessID, Nullable<int> endUserID)
        {
            var businessIDParameter = businessID.HasValue ?
                new ObjectParameter("BusinessID", businessID) :
                new ObjectParameter("BusinessID", typeof(int));
    
            var endUserIDParameter = endUserID.HasValue ?
                new ObjectParameter("EndUserID", endUserID) :
                new ObjectParameter("EndUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_CustomerProfile_Result>("Spo_CustomerProfile", businessIDParameter, endUserIDParameter);
        }
    
        public virtual ObjectResult<SPO_FabkutStaticContent_Result> SPO_FabkutStaticContent(Nullable<int> cms_id, string franchisee_content, string inventory_content, string customer_content, string appointment_content, string reports_content, string billing_content, string membership_content, string marketing_content, string mode)
        {
            var cms_idParameter = cms_id.HasValue ?
                new ObjectParameter("cms_id", cms_id) :
                new ObjectParameter("cms_id", typeof(int));
    
            var franchisee_contentParameter = franchisee_content != null ?
                new ObjectParameter("franchisee_content", franchisee_content) :
                new ObjectParameter("franchisee_content", typeof(string));
    
            var inventory_contentParameter = inventory_content != null ?
                new ObjectParameter("inventory_content", inventory_content) :
                new ObjectParameter("inventory_content", typeof(string));
    
            var customer_contentParameter = customer_content != null ?
                new ObjectParameter("customer_content", customer_content) :
                new ObjectParameter("customer_content", typeof(string));
    
            var appointment_contentParameter = appointment_content != null ?
                new ObjectParameter("appointment_content", appointment_content) :
                new ObjectParameter("appointment_content", typeof(string));
    
            var reports_contentParameter = reports_content != null ?
                new ObjectParameter("reports_content", reports_content) :
                new ObjectParameter("reports_content", typeof(string));
    
            var billing_contentParameter = billing_content != null ?
                new ObjectParameter("billing_content", billing_content) :
                new ObjectParameter("billing_content", typeof(string));
    
            var membership_contentParameter = membership_content != null ?
                new ObjectParameter("membership_content", membership_content) :
                new ObjectParameter("membership_content", typeof(string));
    
            var marketing_contentParameter = marketing_content != null ?
                new ObjectParameter("marketing_content", marketing_content) :
                new ObjectParameter("marketing_content", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPO_FabkutStaticContent_Result>("SPO_FabkutStaticContent", cms_idParameter, franchisee_contentParameter, inventory_contentParameter, customer_contentParameter, appointment_contentParameter, reports_contentParameter, billing_contentParameter, membership_contentParameter, marketing_contentParameter, modeParameter);
        }
    
        public virtual ObjectResult<spo_GenerateBarCode_Result> spo_GenerateBarCode(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> toDate, Nullable<int> shopid)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spo_GenerateBarCode_Result>("spo_GenerateBarCode", fromdateParameter, toDateParameter, shopidParameter);
        }
    
        public virtual ObjectResult<Spo_GetAccountDetails_Result> Spo_GetAccountDetails(Nullable<int> work_placeid, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> emp_id)
        {
            var work_placeidParameter = work_placeid.HasValue ?
                new ObjectParameter("work_placeid", work_placeid) :
                new ObjectParameter("work_placeid", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("Emp_id", emp_id) :
                new ObjectParameter("Emp_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_GetAccountDetails_Result>("Spo_GetAccountDetails", work_placeidParameter, fromDateParameter, toDateParameter, emp_idParameter);
        }
    
        public virtual ObjectResult<Spo_GetAllEmp_Result> Spo_GetAllEmp(Nullable<int> businessID)
        {
            var businessIDParameter = businessID.HasValue ?
                new ObjectParameter("BusinessID", businessID) :
                new ObjectParameter("BusinessID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_GetAllEmp_Result>("Spo_GetAllEmp", businessIDParameter);
        }
    
        public virtual ObjectResult<Spo_GetAllMessageList1_Result> Spo_GetAllMessageList1(Nullable<System.DateTime> frmDate, Nullable<System.DateTime> toDate, string customerContact, Nullable<int> shopID)
        {
            var frmDateParameter = frmDate.HasValue ?
                new ObjectParameter("FrmDate", frmDate) :
                new ObjectParameter("FrmDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var customerContactParameter = customerContact != null ?
                new ObjectParameter("CustomerContact", customerContact) :
                new ObjectParameter("CustomerContact", typeof(string));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_GetAllMessageList1_Result>("Spo_GetAllMessageList1", frmDateParameter, toDateParameter, customerContactParameter, shopIDParameter);
        }
    
        public virtual ObjectResult<SPO_GetAllService_Result> SPO_GetAllService(Nullable<int> businessID, Nullable<int> serviceID)
        {
            var businessIDParameter = businessID.HasValue ?
                new ObjectParameter("BusinessID", businessID) :
                new ObjectParameter("BusinessID", typeof(int));
    
            var serviceIDParameter = serviceID.HasValue ?
                new ObjectParameter("ServiceID", serviceID) :
                new ObjectParameter("ServiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPO_GetAllService_Result>("SPO_GetAllService", businessIDParameter, serviceIDParameter);
        }
    
        public virtual int spo_GetallTime(Nullable<int> businessID)
        {
            var businessIDParameter = businessID.HasValue ?
                new ObjectParameter("BusinessID", businessID) :
                new ObjectParameter("BusinessID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spo_GetallTime", businessIDParameter);
        }
    
        public virtual ObjectResult<Spo_GetAMCSchedule_Result> Spo_GetAMCSchedule(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> duration)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_GetAMCSchedule_Result>("Spo_GetAMCSchedule", startDateParameter, endDateParameter, durationParameter);
        }
    
        public virtual int SPO_GETBATCHNO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPO_GETBATCHNO");
        }
    
        public virtual ObjectResult<string> Spo_GetComplainDetails(string iD, Nullable<int> shopid)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Spo_GetComplainDetails", iDParameter, shopidParameter);
        }
    
        public virtual ObjectResult<string> Spo_GetComplaintDetails(string iD, Nullable<int> shopid)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Spo_GetComplaintDetails", iDParameter, shopidParameter);
        }
    
        public virtual ObjectResult<Spo_GetExpiredWaranty_Result> Spo_GetExpiredWaranty(Nullable<int> shopID, Nullable<System.DateTime> date)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_GetExpiredWaranty_Result>("Spo_GetExpiredWaranty", shopIDParameter, dateParameter);
        }
    
        public virtual ObjectResult<Spo_GetExpiredWaranty_Repo_Result> Spo_GetExpiredWaranty_Repo(Nullable<int> shopID, Nullable<System.DateTime> date)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_GetExpiredWaranty_Repo_Result>("Spo_GetExpiredWaranty_Repo", shopIDParameter, dateParameter);
        }
    
        public virtual ObjectResult<Spo_GetLoginDetails_Result> Spo_GetLoginDetails(string iD, string pWD, Nullable<int> shopid)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var pWDParameter = pWD != null ?
                new ObjectParameter("PWD", pWD) :
                new ObjectParameter("PWD", typeof(string));
    
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_GetLoginDetails_Result>("Spo_GetLoginDetails", iDParameter, pWDParameter, shopidParameter);
        }
    
        public virtual ObjectResult<SPO_GetPending_Result> SPO_GetPending(Nullable<int> shopID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPO_GetPending_Result>("SPO_GetPending", shopIDParameter);
        }
    
        public virtual ObjectResult<SPO_GetPending_test_Result> SPO_GetPending_test(Nullable<int> shopID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPO_GetPending_test_Result>("SPO_GetPending_test", shopIDParameter);
        }
    
        public virtual ObjectResult<Spo_GetPendingAMC_Result> Spo_GetPendingAMC(Nullable<int> shopID, Nullable<System.DateTime> date, Nullable<System.DateTime> tDate, Nullable<int> customerid)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var tDateParameter = tDate.HasValue ?
                new ObjectParameter("TDate", tDate) :
                new ObjectParameter("TDate", typeof(System.DateTime));
    
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("Customerid", customerid) :
                new ObjectParameter("Customerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_GetPendingAMC_Result>("Spo_GetPendingAMC", shopIDParameter, dateParameter, tDateParameter, customeridParameter);
        }
    
        public virtual ObjectResult<Spo_GetPendingAMCReport_Result> Spo_GetPendingAMCReport(Nullable<int> shopID, Nullable<System.DateTime> date)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_GetPendingAMCReport_Result>("Spo_GetPendingAMCReport", shopIDParameter, dateParameter);
        }
    
        public virtual ObjectResult<Spo_GetPendingServices_Result> Spo_GetPendingServices(Nullable<int> shopID, Nullable<System.DateTime> date, Nullable<System.DateTime> tDate, Nullable<int> customerid)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var tDateParameter = tDate.HasValue ?
                new ObjectParameter("TDate", tDate) :
                new ObjectParameter("TDate", typeof(System.DateTime));
    
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("Customerid", customerid) :
                new ObjectParameter("Customerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_GetPendingServices_Result>("Spo_GetPendingServices", shopIDParameter, dateParameter, tDateParameter, customeridParameter);
        }
    
        public virtual ObjectResult<spo_getprice_Result> spo_getprice(Nullable<int> business_id, Nullable<int> productID, Nullable<int> vendorID, Nullable<int> unit, Nullable<System.DateTime> orderdate)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("Business_id", business_id) :
                new ObjectParameter("Business_id", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));
    
            var unitParameter = unit.HasValue ?
                new ObjectParameter("Unit", unit) :
                new ObjectParameter("Unit", typeof(int));
    
            var orderdateParameter = orderdate.HasValue ?
                new ObjectParameter("orderdate", orderdate) :
                new ObjectParameter("orderdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spo_getprice_Result>("spo_getprice", business_idParameter, productIDParameter, vendorIDParameter, unitParameter, orderdateParameter);
        }
    
        public virtual ObjectResult<spo_GetPurchaseDetail1_Result> spo_GetPurchaseDetail1(string sONO, Nullable<int> shopid)
        {
            var sONOParameter = sONO != null ?
                new ObjectParameter("SONO", sONO) :
                new ObjectParameter("SONO", typeof(string));
    
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spo_GetPurchaseDetail1_Result>("spo_GetPurchaseDetail1", sONOParameter, shopidParameter);
        }
    
        public virtual ObjectResult<spo_GetSalesDetail1_Result> spo_GetSalesDetail1(string sONO, Nullable<int> shopid, Nullable<int> pOID)
        {
            var sONOParameter = sONO != null ?
                new ObjectParameter("SONO", sONO) :
                new ObjectParameter("SONO", typeof(string));
    
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            var pOIDParameter = pOID.HasValue ?
                new ObjectParameter("POID", pOID) :
                new ObjectParameter("POID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spo_GetSalesDetail1_Result>("spo_GetSalesDetail1", sONOParameter, shopidParameter, pOIDParameter);
        }
    
        public virtual ObjectResult<Spo_GetServicePerformance_Result> Spo_GetServicePerformance(Nullable<int> shopID, Nullable<System.DateTime> frmDate, Nullable<System.DateTime> toDate, Nullable<int> empID)
        {
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            var frmDateParameter = frmDate.HasValue ?
                new ObjectParameter("FrmDate", frmDate) :
                new ObjectParameter("FrmDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("EmpID", empID) :
                new ObjectParameter("EmpID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_GetServicePerformance_Result>("Spo_GetServicePerformance", shopIDParameter, frmDateParameter, toDateParameter, empIDParameter);
        }
    
        public virtual ObjectResult<Spo_GetSMSSchedule_Result> Spo_GetSMSSchedule(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> duration, string sMSText)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(int));
    
            var sMSTextParameter = sMSText != null ?
                new ObjectParameter("SMSText", sMSText) :
                new ObjectParameter("SMSText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_GetSMSSchedule_Result>("Spo_GetSMSSchedule", startDateParameter, endDateParameter, durationParameter, sMSTextParameter);
        }
    
        public virtual int Spo_IgnoreAMC(Nullable<int> rowID, string reason)
        {
            var rowIDParameter = rowID.HasValue ?
                new ObjectParameter("RowID", rowID) :
                new ObjectParameter("RowID", typeof(int));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Spo_IgnoreAMC", rowIDParameter, reasonParameter);
        }
    
        public virtual ObjectResult<spo_LedgerBalance_Result> spo_LedgerBalance(Nullable<int> shopid, Nullable<System.DateTime> fdt, Nullable<System.DateTime> tdt, Nullable<int> empID)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            var fdtParameter = fdt.HasValue ?
                new ObjectParameter("Fdt", fdt) :
                new ObjectParameter("Fdt", typeof(System.DateTime));
    
            var tdtParameter = tdt.HasValue ?
                new ObjectParameter("Tdt", tdt) :
                new ObjectParameter("Tdt", typeof(System.DateTime));
    
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("EmpID", empID) :
                new ObjectParameter("EmpID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spo_LedgerBalance_Result>("spo_LedgerBalance", shopidParameter, fdtParameter, tdtParameter, empIDParameter);
        }
    
        public virtual ObjectResult<spo_LedgerDetails_Result> spo_LedgerDetails(Nullable<int> shopid, Nullable<int> tranID)
        {
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            var tranIDParameter = tranID.HasValue ?
                new ObjectParameter("TranID", tranID) :
                new ObjectParameter("TranID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spo_LedgerDetails_Result>("spo_LedgerDetails", shopidParameter, tranIDParameter);
        }
    
        public virtual int SPO_LedgerTransaction(Nullable<int> tranID, Nullable<int> shopid, string ledgNO, string payType, Nullable<System.DateTime> payDt, Nullable<int> custID, Nullable<int> supID, Nullable<int> empID, Nullable<int> aMT, string remark)
        {
            var tranIDParameter = tranID.HasValue ?
                new ObjectParameter("TranID", tranID) :
                new ObjectParameter("TranID", typeof(int));
    
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            var ledgNOParameter = ledgNO != null ?
                new ObjectParameter("LedgNO", ledgNO) :
                new ObjectParameter("LedgNO", typeof(string));
    
            var payTypeParameter = payType != null ?
                new ObjectParameter("PayType", payType) :
                new ObjectParameter("PayType", typeof(string));
    
            var payDtParameter = payDt.HasValue ?
                new ObjectParameter("PayDt", payDt) :
                new ObjectParameter("PayDt", typeof(System.DateTime));
    
            var custIDParameter = custID.HasValue ?
                new ObjectParameter("CustID", custID) :
                new ObjectParameter("CustID", typeof(int));
    
            var supIDParameter = supID.HasValue ?
                new ObjectParameter("SupID", supID) :
                new ObjectParameter("SupID", typeof(int));
    
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("EmpID", empID) :
                new ObjectParameter("EmpID", typeof(int));
    
            var aMTParameter = aMT.HasValue ?
                new ObjectParameter("AMT", aMT) :
                new ObjectParameter("AMT", typeof(int));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPO_LedgerTransaction", tranIDParameter, shopidParameter, ledgNOParameter, payTypeParameter, payDtParameter, custIDParameter, supIDParameter, empIDParameter, aMTParameter, remarkParameter);
        }
    
        public virtual int Spo_MakeAMCCompleted(Nullable<int> rowID, string reason)
        {
            var rowIDParameter = rowID.HasValue ?
                new ObjectParameter("RowID", rowID) :
                new ObjectParameter("RowID", typeof(int));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Spo_MakeAMCCompleted", rowIDParameter, reasonParameter);
        }
    
        public virtual ObjectResult<string> SPO_OfferInvitation(Nullable<int> autoID, Nullable<int> fabkut_offer_id, Nullable<int> businessId, Nullable<int> enduserId, Nullable<System.DateTime> addDate, Nullable<System.DateTime> sendDate, Nullable<int> status, Nullable<int> mess, string mode)
        {
            var autoIDParameter = autoID.HasValue ?
                new ObjectParameter("AutoID", autoID) :
                new ObjectParameter("AutoID", typeof(int));
    
            var fabkut_offer_idParameter = fabkut_offer_id.HasValue ?
                new ObjectParameter("fabkut_offer_id", fabkut_offer_id) :
                new ObjectParameter("fabkut_offer_id", typeof(int));
    
            var businessIdParameter = businessId.HasValue ?
                new ObjectParameter("businessId", businessId) :
                new ObjectParameter("businessId", typeof(int));
    
            var enduserIdParameter = enduserId.HasValue ?
                new ObjectParameter("EnduserId", enduserId) :
                new ObjectParameter("EnduserId", typeof(int));
    
            var addDateParameter = addDate.HasValue ?
                new ObjectParameter("AddDate", addDate) :
                new ObjectParameter("AddDate", typeof(System.DateTime));
    
            var sendDateParameter = sendDate.HasValue ?
                new ObjectParameter("SendDate", sendDate) :
                new ObjectParameter("SendDate", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var messParameter = mess.HasValue ?
                new ObjectParameter("Mess", mess) :
                new ObjectParameter("Mess", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SPO_OfferInvitation", autoIDParameter, fabkut_offer_idParameter, businessIdParameter, enduserIdParameter, addDateParameter, sendDateParameter, statusParameter, messParameter, modeParameter);
        }
    
        public virtual int SPO_OrderDetails(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPO_OrderDetails", orderIDParameter);
        }
    
        public virtual int SPO_OrderHeader(Nullable<int> businessID)
        {
            var businessIDParameter = businessID.HasValue ?
                new ObjectParameter("BusinessID", businessID) :
                new ObjectParameter("BusinessID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPO_OrderHeader", businessIDParameter);
        }
    
        public virtual int SPO_OrderReceived(Nullable<int> orderID, Nullable<int> productID, Nullable<decimal> receivedQty)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var receivedQtyParameter = receivedQty.HasValue ?
                new ObjectParameter("ReceivedQty", receivedQty) :
                new ObjectParameter("ReceivedQty", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPO_OrderReceived", orderIDParameter, productIDParameter, receivedQtyParameter);
        }
    
        public virtual int spo_ordertype()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spo_ordertype");
        }
    
        public virtual ObjectResult<Spo_PurchaseInvoice_POS_Result> Spo_PurchaseInvoice_POS(string invoiceNo, Nullable<int> shopID)
        {
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_PurchaseInvoice_POS_Result>("Spo_PurchaseInvoice_POS", invoiceNoParameter, shopIDParameter);
        }
    
        public virtual int SPO_RecvOrder(Nullable<int> orderID, string batchNo, Nullable<int> productID, Nullable<decimal> recQty, Nullable<System.DateTime> expiryDate, string remarks)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var batchNoParameter = batchNo != null ?
                new ObjectParameter("BatchNo", batchNo) :
                new ObjectParameter("BatchNo", typeof(string));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var recQtyParameter = recQty.HasValue ?
                new ObjectParameter("RecQty", recQty) :
                new ObjectParameter("RecQty", typeof(decimal));
    
            var expiryDateParameter = expiryDate.HasValue ?
                new ObjectParameter("ExpiryDate", expiryDate) :
                new ObjectParameter("ExpiryDate", typeof(System.DateTime));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPO_RecvOrder", orderIDParameter, batchNoParameter, productIDParameter, recQtyParameter, expiryDateParameter, remarksParameter);
        }
    
        public virtual ObjectResult<SPO_ServiceCosting_Result> SPO_ServiceCosting(Nullable<int> serviceCostID, Nullable<int> business_service_id, Nullable<int> businessid, Nullable<int> productid, Nullable<int> unitid, Nullable<int> qty, Nullable<System.DateTime> createddate, Nullable<System.DateTime> updateddate, string remark, string mode)
        {
            var serviceCostIDParameter = serviceCostID.HasValue ?
                new ObjectParameter("ServiceCostID", serviceCostID) :
                new ObjectParameter("ServiceCostID", typeof(int));
    
            var business_service_idParameter = business_service_id.HasValue ?
                new ObjectParameter("business_service_id", business_service_id) :
                new ObjectParameter("business_service_id", typeof(int));
    
            var businessidParameter = businessid.HasValue ?
                new ObjectParameter("businessid", businessid) :
                new ObjectParameter("businessid", typeof(int));
    
            var productidParameter = productid.HasValue ?
                new ObjectParameter("productid", productid) :
                new ObjectParameter("productid", typeof(int));
    
            var unitidParameter = unitid.HasValue ?
                new ObjectParameter("unitid", unitid) :
                new ObjectParameter("unitid", typeof(int));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(int));
    
            var createddateParameter = createddate.HasValue ?
                new ObjectParameter("createddate", createddate) :
                new ObjectParameter("createddate", typeof(System.DateTime));
    
            var updateddateParameter = updateddate.HasValue ?
                new ObjectParameter("updateddate", updateddate) :
                new ObjectParameter("updateddate", typeof(System.DateTime));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("remark", remark) :
                new ObjectParameter("remark", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPO_ServiceCosting_Result>("SPO_ServiceCosting", serviceCostIDParameter, business_service_idParameter, businessidParameter, productidParameter, unitidParameter, qtyParameter, createddateParameter, updateddateParameter, remarkParameter, modeParameter);
        }
    
        public virtual ObjectResult<SPO_ServiceHierarchy_Result> SPO_ServiceHierarchy(Nullable<int> serviceHierarchyID, Nullable<int> parentserviceid, Nullable<int> businessid, Nullable<int> childserviceid, Nullable<int> estdate, Nullable<int> isoptional, Nullable<int> sequenceno, Nullable<System.DateTime> createddate, Nullable<System.DateTime> updateddate, string remark, string mode)
        {
            var serviceHierarchyIDParameter = serviceHierarchyID.HasValue ?
                new ObjectParameter("ServiceHierarchyID", serviceHierarchyID) :
                new ObjectParameter("ServiceHierarchyID", typeof(int));
    
            var parentserviceidParameter = parentserviceid.HasValue ?
                new ObjectParameter("parentserviceid", parentserviceid) :
                new ObjectParameter("parentserviceid", typeof(int));
    
            var businessidParameter = businessid.HasValue ?
                new ObjectParameter("businessid", businessid) :
                new ObjectParameter("businessid", typeof(int));
    
            var childserviceidParameter = childserviceid.HasValue ?
                new ObjectParameter("childserviceid", childserviceid) :
                new ObjectParameter("childserviceid", typeof(int));
    
            var estdateParameter = estdate.HasValue ?
                new ObjectParameter("estdate", estdate) :
                new ObjectParameter("estdate", typeof(int));
    
            var isoptionalParameter = isoptional.HasValue ?
                new ObjectParameter("isoptional", isoptional) :
                new ObjectParameter("isoptional", typeof(int));
    
            var sequencenoParameter = sequenceno.HasValue ?
                new ObjectParameter("sequenceno", sequenceno) :
                new ObjectParameter("sequenceno", typeof(int));
    
            var createddateParameter = createddate.HasValue ?
                new ObjectParameter("createddate", createddate) :
                new ObjectParameter("createddate", typeof(System.DateTime));
    
            var updateddateParameter = updateddate.HasValue ?
                new ObjectParameter("updateddate", updateddate) :
                new ObjectParameter("updateddate", typeof(System.DateTime));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("remark", remark) :
                new ObjectParameter("remark", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPO_ServiceHierarchy_Result>("SPO_ServiceHierarchy", serviceHierarchyIDParameter, parentserviceidParameter, businessidParameter, childserviceidParameter, estdateParameter, isoptionalParameter, sequencenoParameter, createddateParameter, updateddateParameter, remarkParameter, modeParameter);
        }
    
        public virtual ObjectResult<Spo_TaxInvoice_Result> Spo_TaxInvoice(string invoiceNo, Nullable<int> shopID)
        {
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_TaxInvoice_Result>("Spo_TaxInvoice", invoiceNoParameter, shopIDParameter);
        }
    
        public virtual ObjectResult<Spo_TaxInvoice_POS_Result> Spo_TaxInvoice_POS(string invoiceNo, Nullable<int> shopID)
        {
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var shopIDParameter = shopID.HasValue ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_TaxInvoice_POS_Result>("Spo_TaxInvoice_POS", invoiceNoParameter, shopIDParameter);
        }
    
        public virtual ObjectResult<Spo_UpdatePassword_Result> Spo_UpdatePassword(string iD, string pWD, Nullable<int> shopid)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var pWDParameter = pWD != null ?
                new ObjectParameter("PWD", pWD) :
                new ObjectParameter("PWD", typeof(string));
    
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("Shopid", shopid) :
                new ObjectParameter("Shopid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spo_UpdatePassword_Result>("Spo_UpdatePassword", iDParameter, pWDParameter, shopidParameter);
        }
    
        public virtual int SPO_VendorContract(Nullable<int> autoid, Nullable<int> versionno, Nullable<int> business_id, Nullable<int> vendor_id, Nullable<int> productId, Nullable<System.DateTime> contractFrom, Nullable<System.DateTime> contractTo, Nullable<System.DateTime> adddate, Nullable<decimal> cost, Nullable<decimal> price, string unit, string remark)
        {
            var autoidParameter = autoid.HasValue ?
                new ObjectParameter("autoid", autoid) :
                new ObjectParameter("autoid", typeof(int));
    
            var versionnoParameter = versionno.HasValue ?
                new ObjectParameter("versionno", versionno) :
                new ObjectParameter("versionno", typeof(int));
    
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var vendor_idParameter = vendor_id.HasValue ?
                new ObjectParameter("vendor_id", vendor_id) :
                new ObjectParameter("vendor_id", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            var contractFromParameter = contractFrom.HasValue ?
                new ObjectParameter("contractFrom", contractFrom) :
                new ObjectParameter("contractFrom", typeof(System.DateTime));
    
            var contractToParameter = contractTo.HasValue ?
                new ObjectParameter("contractTo", contractTo) :
                new ObjectParameter("contractTo", typeof(System.DateTime));
    
            var adddateParameter = adddate.HasValue ?
                new ObjectParameter("adddate", adddate) :
                new ObjectParameter("adddate", typeof(System.DateTime));
    
            var costParameter = cost.HasValue ?
                new ObjectParameter("cost", cost) :
                new ObjectParameter("cost", typeof(decimal));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var unitParameter = unit != null ?
                new ObjectParameter("unit", unit) :
                new ObjectParameter("unit", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("remark", remark) :
                new ObjectParameter("remark", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPO_VendorContract", autoidParameter, versionnoParameter, business_idParameter, vendor_idParameter, productIdParameter, contractFromParameter, contractToParameter, adddateParameter, costParameter, priceParameter, unitParameter, remarkParameter);
        }
    
        public virtual ObjectResult<SPO_VendorContractDetails_Result> SPO_VendorContractDetails(Nullable<int> businessID, Nullable<int> autoID)
        {
            var businessIDParameter = businessID.HasValue ?
                new ObjectParameter("businessID", businessID) :
                new ObjectParameter("businessID", typeof(int));
    
            var autoIDParameter = autoID.HasValue ?
                new ObjectParameter("AutoID", autoID) :
                new ObjectParameter("AutoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPO_VendorContractDetails_Result>("SPO_VendorContractDetails", businessIDParameter, autoIDParameter);
        }
    
        public virtual ObjectResult<SPO_VendorDetails_Result> SPO_VendorDetails(Nullable<int> vendorID)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPO_VendorDetails_Result>("SPO_VendorDetails", vendorIDParameter);
        }
    
        public virtual ObjectResult<stor_actionplan_Result> stor_actionplan(Nullable<int> business_Eqy_plan_id, Nullable<int> business_enquiry_id, Nullable<int> tariff_id, Nullable<bool> active, string mode)
        {
            var business_Eqy_plan_idParameter = business_Eqy_plan_id.HasValue ?
                new ObjectParameter("Business_Eqy_plan_id", business_Eqy_plan_id) :
                new ObjectParameter("Business_Eqy_plan_id", typeof(int));
    
            var business_enquiry_idParameter = business_enquiry_id.HasValue ?
                new ObjectParameter("business_enquiry_id", business_enquiry_id) :
                new ObjectParameter("business_enquiry_id", typeof(int));
    
            var tariff_idParameter = tariff_id.HasValue ?
                new ObjectParameter("tariff_id", tariff_id) :
                new ObjectParameter("tariff_id", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(bool));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stor_actionplan_Result>("stor_actionplan", business_Eqy_plan_idParameter, business_enquiry_idParameter, tariff_idParameter, activeParameter, modeParameter);
        }
    
        public virtual ObjectResult<stor_admin_Result> stor_admin(Nullable<int> admin_id, string admin_name, string admin_password, string email, string contact_no, Nullable<int> isActive, string mode)
        {
            var admin_idParameter = admin_id.HasValue ?
                new ObjectParameter("admin_id", admin_id) :
                new ObjectParameter("admin_id", typeof(int));
    
            var admin_nameParameter = admin_name != null ?
                new ObjectParameter("admin_name", admin_name) :
                new ObjectParameter("admin_name", typeof(string));
    
            var admin_passwordParameter = admin_password != null ?
                new ObjectParameter("admin_password", admin_password) :
                new ObjectParameter("admin_password", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var contact_noParameter = contact_no != null ?
                new ObjectParameter("contact_no", contact_no) :
                new ObjectParameter("contact_no", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stor_admin_Result>("stor_admin", admin_idParameter, admin_nameParameter, admin_passwordParameter, emailParameter, contact_noParameter, isActiveParameter, modeParameter);
        }
    
        public virtual ObjectResult<stor_Allocated_Salon_Result> stor_Allocated_Salon(Nullable<int> user_id, Nullable<int> b_Target_id, Nullable<int> city_Id, Nullable<int> location_Id, string business_Name, string contact_No, string contact_No1, string address1, string address2, string address3, string contact_Person, string land_mark, string business_email_id, Nullable<bool> active, string mode)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var b_Target_idParameter = b_Target_id.HasValue ?
                new ObjectParameter("b_Target_id", b_Target_id) :
                new ObjectParameter("b_Target_id", typeof(int));
    
            var city_IdParameter = city_Id.HasValue ?
                new ObjectParameter("city_Id", city_Id) :
                new ObjectParameter("city_Id", typeof(int));
    
            var location_IdParameter = location_Id.HasValue ?
                new ObjectParameter("location_Id", location_Id) :
                new ObjectParameter("location_Id", typeof(int));
    
            var business_NameParameter = business_Name != null ?
                new ObjectParameter("business_Name", business_Name) :
                new ObjectParameter("business_Name", typeof(string));
    
            var contact_NoParameter = contact_No != null ?
                new ObjectParameter("contact_No", contact_No) :
                new ObjectParameter("contact_No", typeof(string));
    
            var contact_No1Parameter = contact_No1 != null ?
                new ObjectParameter("contact_No1", contact_No1) :
                new ObjectParameter("contact_No1", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("address1", address1) :
                new ObjectParameter("address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("address2", address2) :
                new ObjectParameter("address2", typeof(string));
    
            var address3Parameter = address3 != null ?
                new ObjectParameter("address3", address3) :
                new ObjectParameter("address3", typeof(string));
    
            var contact_PersonParameter = contact_Person != null ?
                new ObjectParameter("Contact_Person", contact_Person) :
                new ObjectParameter("Contact_Person", typeof(string));
    
            var land_markParameter = land_mark != null ?
                new ObjectParameter("Land_mark", land_mark) :
                new ObjectParameter("Land_mark", typeof(string));
    
            var business_email_idParameter = business_email_id != null ?
                new ObjectParameter("business_email_id", business_email_id) :
                new ObjectParameter("business_email_id", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(bool));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stor_Allocated_Salon_Result>("stor_Allocated_Salon", user_idParameter, b_Target_idParameter, city_IdParameter, location_IdParameter, business_NameParameter, contact_NoParameter, contact_No1Parameter, address1Parameter, address2Parameter, address3Parameter, contact_PersonParameter, land_markParameter, business_email_idParameter, activeParameter, modeParameter);
        }
    
        public virtual ObjectResult<Stor_Business_Result> Stor_Business(Nullable<int> business_id, Nullable<int> b_user_id, Nullable<int> city_Id, Nullable<int> location_Id, string business_Name, string contact_No, string contact_No1, string address1, string address2, string address3, string contact_Person, string land_mark, string business_email_id, string latitude, string longitute, string profile_Photo, Nullable<bool> active, string profile_pic, string url, Nullable<bool> status, string tagline, Nullable<int> no_of_emp, Nullable<int> no_of_chairs, Nullable<int> online, Nullable<int> offline, string salon_password, Nullable<System.DateTime> opning_hours, Nullable<System.DateTime> closing_hours, string business_type, string business_for, Nullable<int> serviceTax, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var b_user_idParameter = b_user_id.HasValue ?
                new ObjectParameter("b_user_id", b_user_id) :
                new ObjectParameter("b_user_id", typeof(int));
    
            var city_IdParameter = city_Id.HasValue ?
                new ObjectParameter("city_Id", city_Id) :
                new ObjectParameter("city_Id", typeof(int));
    
            var location_IdParameter = location_Id.HasValue ?
                new ObjectParameter("location_Id", location_Id) :
                new ObjectParameter("location_Id", typeof(int));
    
            var business_NameParameter = business_Name != null ?
                new ObjectParameter("business_Name", business_Name) :
                new ObjectParameter("business_Name", typeof(string));
    
            var contact_NoParameter = contact_No != null ?
                new ObjectParameter("contact_No", contact_No) :
                new ObjectParameter("contact_No", typeof(string));
    
            var contact_No1Parameter = contact_No1 != null ?
                new ObjectParameter("Contact_No1", contact_No1) :
                new ObjectParameter("Contact_No1", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("address1", address1) :
                new ObjectParameter("address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("address2", address2) :
                new ObjectParameter("address2", typeof(string));
    
            var address3Parameter = address3 != null ?
                new ObjectParameter("address3", address3) :
                new ObjectParameter("address3", typeof(string));
    
            var contact_PersonParameter = contact_Person != null ?
                new ObjectParameter("Contact_Person", contact_Person) :
                new ObjectParameter("Contact_Person", typeof(string));
    
            var land_markParameter = land_mark != null ?
                new ObjectParameter("Land_mark", land_mark) :
                new ObjectParameter("Land_mark", typeof(string));
    
            var business_email_idParameter = business_email_id != null ?
                new ObjectParameter("business_email_id", business_email_id) :
                new ObjectParameter("business_email_id", typeof(string));
    
            var latitudeParameter = latitude != null ?
                new ObjectParameter("Latitude", latitude) :
                new ObjectParameter("Latitude", typeof(string));
    
            var longituteParameter = longitute != null ?
                new ObjectParameter("Longitute", longitute) :
                new ObjectParameter("Longitute", typeof(string));
    
            var profile_PhotoParameter = profile_Photo != null ?
                new ObjectParameter("Profile_Photo", profile_Photo) :
                new ObjectParameter("Profile_Photo", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(bool));
    
            var profile_picParameter = profile_pic != null ?
                new ObjectParameter("Profile_pic", profile_pic) :
                new ObjectParameter("Profile_pic", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var taglineParameter = tagline != null ?
                new ObjectParameter("tagline", tagline) :
                new ObjectParameter("tagline", typeof(string));
    
            var no_of_empParameter = no_of_emp.HasValue ?
                new ObjectParameter("No_of_emp", no_of_emp) :
                new ObjectParameter("No_of_emp", typeof(int));
    
            var no_of_chairsParameter = no_of_chairs.HasValue ?
                new ObjectParameter("No_of_chairs", no_of_chairs) :
                new ObjectParameter("No_of_chairs", typeof(int));
    
            var onlineParameter = online.HasValue ?
                new ObjectParameter("Online", online) :
                new ObjectParameter("Online", typeof(int));
    
            var offlineParameter = offline.HasValue ?
                new ObjectParameter("Offline", offline) :
                new ObjectParameter("Offline", typeof(int));
    
            var salon_passwordParameter = salon_password != null ?
                new ObjectParameter("Salon_password", salon_password) :
                new ObjectParameter("Salon_password", typeof(string));
    
            var opning_hoursParameter = opning_hours.HasValue ?
                new ObjectParameter("Opning_hours", opning_hours) :
                new ObjectParameter("Opning_hours", typeof(System.DateTime));
    
            var closing_hoursParameter = closing_hours.HasValue ?
                new ObjectParameter("Closing_hours", closing_hours) :
                new ObjectParameter("Closing_hours", typeof(System.DateTime));
    
            var business_typeParameter = business_type != null ?
                new ObjectParameter("Business_type", business_type) :
                new ObjectParameter("Business_type", typeof(string));
    
            var business_forParameter = business_for != null ?
                new ObjectParameter("business_for", business_for) :
                new ObjectParameter("business_for", typeof(string));
    
            var serviceTaxParameter = serviceTax.HasValue ?
                new ObjectParameter("ServiceTax", serviceTax) :
                new ObjectParameter("ServiceTax", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Stor_Business_Result>("Stor_Business", business_idParameter, b_user_idParameter, city_IdParameter, location_IdParameter, business_NameParameter, contact_NoParameter, contact_No1Parameter, address1Parameter, address2Parameter, address3Parameter, contact_PersonParameter, land_markParameter, business_email_idParameter, latitudeParameter, longituteParameter, profile_PhotoParameter, activeParameter, profile_picParameter, urlParameter, statusParameter, taglineParameter, no_of_empParameter, no_of_chairsParameter, onlineParameter, offlineParameter, salon_passwordParameter, opning_hoursParameter, closing_hoursParameter, business_typeParameter, business_forParameter, serviceTaxParameter, modeParameter);
        }
    
        public virtual ObjectResult<stor_Business_Emp_Result> stor_Business_Emp(Nullable<int> business_id, Nullable<int> emp_id, string emp_name, string dob, string doj, string emp_contact_No, string emp_email_id, Nullable<int> work_exp, string emp_pic, string spcst, string qualification, string achivemnts, Nullable<bool> active, string dol, string adress1, string adress2, Nullable<int> location_Id, Nullable<int> city_Id, string emp_verification, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            var emp_nameParameter = emp_name != null ?
                new ObjectParameter("emp_name", emp_name) :
                new ObjectParameter("emp_name", typeof(string));
    
            var dobParameter = dob != null ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(string));
    
            var dojParameter = doj != null ?
                new ObjectParameter("doj", doj) :
                new ObjectParameter("doj", typeof(string));
    
            var emp_contact_NoParameter = emp_contact_No != null ?
                new ObjectParameter("emp_contact_No", emp_contact_No) :
                new ObjectParameter("emp_contact_No", typeof(string));
    
            var emp_email_idParameter = emp_email_id != null ?
                new ObjectParameter("emp_email_id", emp_email_id) :
                new ObjectParameter("emp_email_id", typeof(string));
    
            var work_expParameter = work_exp.HasValue ?
                new ObjectParameter("work_exp", work_exp) :
                new ObjectParameter("work_exp", typeof(int));
    
            var emp_picParameter = emp_pic != null ?
                new ObjectParameter("emp_pic", emp_pic) :
                new ObjectParameter("emp_pic", typeof(string));
    
            var spcstParameter = spcst != null ?
                new ObjectParameter("spcst", spcst) :
                new ObjectParameter("spcst", typeof(string));
    
            var qualificationParameter = qualification != null ?
                new ObjectParameter("qualification", qualification) :
                new ObjectParameter("qualification", typeof(string));
    
            var achivemntsParameter = achivemnts != null ?
                new ObjectParameter("achivemnts", achivemnts) :
                new ObjectParameter("achivemnts", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(bool));
    
            var dolParameter = dol != null ?
                new ObjectParameter("dol", dol) :
                new ObjectParameter("dol", typeof(string));
    
            var adress1Parameter = adress1 != null ?
                new ObjectParameter("adress1", adress1) :
                new ObjectParameter("adress1", typeof(string));
    
            var adress2Parameter = adress2 != null ?
                new ObjectParameter("adress2", adress2) :
                new ObjectParameter("adress2", typeof(string));
    
            var location_IdParameter = location_Id.HasValue ?
                new ObjectParameter("location_Id", location_Id) :
                new ObjectParameter("location_Id", typeof(int));
    
            var city_IdParameter = city_Id.HasValue ?
                new ObjectParameter("city_Id", city_Id) :
                new ObjectParameter("city_Id", typeof(int));
    
            var emp_verificationParameter = emp_verification != null ?
                new ObjectParameter("emp_verification", emp_verification) :
                new ObjectParameter("emp_verification", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stor_Business_Emp_Result>("stor_Business_Emp", business_idParameter, emp_idParameter, emp_nameParameter, dobParameter, dojParameter, emp_contact_NoParameter, emp_email_idParameter, work_expParameter, emp_picParameter, spcstParameter, qualificationParameter, achivemntsParameter, activeParameter, dolParameter, adress1Parameter, adress2Parameter, location_IdParameter, city_IdParameter, emp_verificationParameter, modeParameter);
        }
    
        public virtual ObjectResult<stor_Business_Enquiry_Result> stor_Business_Enquiry(Nullable<int> assign_id, Nullable<int> b_Target_id, Nullable<int> business_enquiry_id, Nullable<int> user_id, Nullable<System.DateTime> enquiry_date, string comments, string mode)
        {
            var assign_idParameter = assign_id.HasValue ?
                new ObjectParameter("Assign_id", assign_id) :
                new ObjectParameter("Assign_id", typeof(int));
    
            var b_Target_idParameter = b_Target_id.HasValue ?
                new ObjectParameter("b_Target_id", b_Target_id) :
                new ObjectParameter("b_Target_id", typeof(int));
    
            var business_enquiry_idParameter = business_enquiry_id.HasValue ?
                new ObjectParameter("business_enquiry_id", business_enquiry_id) :
                new ObjectParameter("business_enquiry_id", typeof(int));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var enquiry_dateParameter = enquiry_date.HasValue ?
                new ObjectParameter("enquiry_date", enquiry_date) :
                new ObjectParameter("enquiry_date", typeof(System.DateTime));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stor_Business_Enquiry_Result>("stor_Business_Enquiry", assign_idParameter, b_Target_idParameter, business_enquiry_idParameter, user_idParameter, enquiry_dateParameter, commentsParameter, modeParameter);
        }
    
        public virtual ObjectResult<stor_business_enquiry_question_Result> stor_business_enquiry_question(Nullable<int> business_enquiry_Ques_id, Nullable<int> b_target_id, Nullable<int> enquiry_id, string spend, string comment, Nullable<bool> answer_yes_no, string mode)
        {
            var business_enquiry_Ques_idParameter = business_enquiry_Ques_id.HasValue ?
                new ObjectParameter("business_enquiry_Ques_id", business_enquiry_Ques_id) :
                new ObjectParameter("business_enquiry_Ques_id", typeof(int));
    
            var b_target_idParameter = b_target_id.HasValue ?
                new ObjectParameter("b_target_id", b_target_id) :
                new ObjectParameter("b_target_id", typeof(int));
    
            var enquiry_idParameter = enquiry_id.HasValue ?
                new ObjectParameter("enquiry_id", enquiry_id) :
                new ObjectParameter("enquiry_id", typeof(int));
    
            var spendParameter = spend != null ?
                new ObjectParameter("spend", spend) :
                new ObjectParameter("spend", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("comment", comment) :
                new ObjectParameter("comment", typeof(string));
    
            var answer_yes_noParameter = answer_yes_no.HasValue ?
                new ObjectParameter("Answer_yes_no", answer_yes_no) :
                new ObjectParameter("Answer_yes_no", typeof(bool));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stor_business_enquiry_question_Result>("stor_business_enquiry_question", business_enquiry_Ques_idParameter, b_target_idParameter, enquiry_idParameter, spendParameter, commentParameter, answer_yes_noParameter, modeParameter);
        }
    
        public virtual ObjectResult<stor_business_facility_Result> stor_business_facility(Nullable<int> facility_id, Nullable<int> business_id, Nullable<int> business_facility_id, string business_facility_name, Nullable<bool> active, string mode)
        {
            var facility_idParameter = facility_id.HasValue ?
                new ObjectParameter("facility_id", facility_id) :
                new ObjectParameter("facility_id", typeof(int));
    
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var business_facility_idParameter = business_facility_id.HasValue ?
                new ObjectParameter("business_facility_id", business_facility_id) :
                new ObjectParameter("business_facility_id", typeof(int));
    
            var business_facility_nameParameter = business_facility_name != null ?
                new ObjectParameter("business_facility_name", business_facility_name) :
                new ObjectParameter("business_facility_name", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(bool));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stor_business_facility_Result>("stor_business_facility", facility_idParameter, business_idParameter, business_facility_idParameter, business_facility_nameParameter, activeParameter, modeParameter);
        }
    
        public virtual ObjectResult<stor_Business_pic_Result> stor_Business_pic(Nullable<int> business_pic_id, Nullable<int> business_id, string photo, Nullable<bool> enable, string mode)
        {
            var business_pic_idParameter = business_pic_id.HasValue ?
                new ObjectParameter("business_pic_id", business_pic_id) :
                new ObjectParameter("business_pic_id", typeof(int));
    
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var photoParameter = photo != null ?
                new ObjectParameter("Photo", photo) :
                new ObjectParameter("Photo", typeof(string));
    
            var enableParameter = enable.HasValue ?
                new ObjectParameter("enable", enable) :
                new ObjectParameter("enable", typeof(bool));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stor_Business_pic_Result>("stor_Business_pic", business_pic_idParameter, business_idParameter, photoParameter, enableParameter, modeParameter);
        }
    
        public virtual ObjectResult<stor_business_portfolio_Result> stor_business_portfolio(Nullable<int> business_id, Nullable<int> portfolio_id, string portfolio_name, string portfolio_pics, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var portfolio_idParameter = portfolio_id.HasValue ?
                new ObjectParameter("portfolio_id", portfolio_id) :
                new ObjectParameter("portfolio_id", typeof(int));
    
            var portfolio_nameParameter = portfolio_name != null ?
                new ObjectParameter("portfolio_name", portfolio_name) :
                new ObjectParameter("portfolio_name", typeof(string));
    
            var portfolio_picsParameter = portfolio_pics != null ?
                new ObjectParameter("portfolio_pics", portfolio_pics) :
                new ObjectParameter("portfolio_pics", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stor_business_portfolio_Result>("stor_business_portfolio", business_idParameter, portfolio_idParameter, portfolio_nameParameter, portfolio_picsParameter, modeParameter);
        }
    
        public virtual ObjectResult<stor_Business_services_Result> stor_Business_services(Nullable<int> business_id, Nullable<int> sub_service_id, Nullable<int> service_id, Nullable<int> business_service_id, string business_service_name, string eta, string description, Nullable<int> rate, Nullable<bool> active, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var sub_service_idParameter = sub_service_id.HasValue ?
                new ObjectParameter("sub_service_id", sub_service_id) :
                new ObjectParameter("sub_service_id", typeof(int));
    
            var service_idParameter = service_id.HasValue ?
                new ObjectParameter("service_id", service_id) :
                new ObjectParameter("service_id", typeof(int));
    
            var business_service_idParameter = business_service_id.HasValue ?
                new ObjectParameter("business_service_id", business_service_id) :
                new ObjectParameter("business_service_id", typeof(int));
    
            var business_service_nameParameter = business_service_name != null ?
                new ObjectParameter("business_service_name", business_service_name) :
                new ObjectParameter("business_service_name", typeof(string));
    
            var etaParameter = eta != null ?
                new ObjectParameter("eta", eta) :
                new ObjectParameter("eta", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(bool));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stor_Business_services_Result>("stor_Business_services", business_idParameter, sub_service_idParameter, service_idParameter, business_service_idParameter, business_service_nameParameter, etaParameter, descriptionParameter, rateParameter, activeParameter, modeParameter);
        }
    
        public virtual ObjectResult<stor_business_target_Result> stor_business_target(Nullable<int> user_id, Nullable<int> b_Target_id, Nullable<int> city_Id, Nullable<int> location_Id, string business_Name, string contact_No, string contact_No1, string address1, string address2, string address3, string contact_Person, string land_mark, string business_email_id, Nullable<bool> active, string assign, string mode)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var b_Target_idParameter = b_Target_id.HasValue ?
                new ObjectParameter("b_Target_id", b_Target_id) :
                new ObjectParameter("b_Target_id", typeof(int));
    
            var city_IdParameter = city_Id.HasValue ?
                new ObjectParameter("city_Id", city_Id) :
                new ObjectParameter("city_Id", typeof(int));
    
            var location_IdParameter = location_Id.HasValue ?
                new ObjectParameter("location_Id", location_Id) :
                new ObjectParameter("location_Id", typeof(int));
    
            var business_NameParameter = business_Name != null ?
                new ObjectParameter("business_Name", business_Name) :
                new ObjectParameter("business_Name", typeof(string));
    
            var contact_NoParameter = contact_No != null ?
                new ObjectParameter("contact_No", contact_No) :
                new ObjectParameter("contact_No", typeof(string));
    
            var contact_No1Parameter = contact_No1 != null ?
                new ObjectParameter("contact_No1", contact_No1) :
                new ObjectParameter("contact_No1", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("address1", address1) :
                new ObjectParameter("address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("address2", address2) :
                new ObjectParameter("address2", typeof(string));
    
            var address3Parameter = address3 != null ?
                new ObjectParameter("address3", address3) :
                new ObjectParameter("address3", typeof(string));
    
            var contact_PersonParameter = contact_Person != null ?
                new ObjectParameter("Contact_Person", contact_Person) :
                new ObjectParameter("Contact_Person", typeof(string));
    
            var land_markParameter = land_mark != null ?
                new ObjectParameter("Land_mark", land_mark) :
                new ObjectParameter("Land_mark", typeof(string));
    
            var business_email_idParameter = business_email_id != null ?
                new ObjectParameter("business_email_id", business_email_id) :
                new ObjectParameter("business_email_id", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(bool));
    
            var assignParameter = assign != null ?
                new ObjectParameter("assign", assign) :
                new ObjectParameter("assign", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stor_business_target_Result>("stor_business_target", user_idParameter, b_Target_idParameter, city_IdParameter, location_IdParameter, business_NameParameter, contact_NoParameter, contact_No1Parameter, address1Parameter, address2Parameter, address3Parameter, contact_PersonParameter, land_markParameter, business_email_idParameter, activeParameter, assignParameter, modeParameter);
        }
    
        public virtual ObjectResult<stor_Business_Target_Assign_Result> stor_Business_Target_Assign(Nullable<int> assign_id, Nullable<int> b_Target_id, Nullable<int> user_id, Nullable<int> assign_by, Nullable<System.DateTime> assign_date, string mode)
        {
            var assign_idParameter = assign_id.HasValue ?
                new ObjectParameter("Assign_id", assign_id) :
                new ObjectParameter("Assign_id", typeof(int));
    
            var b_Target_idParameter = b_Target_id.HasValue ?
                new ObjectParameter("b_Target_id", b_Target_id) :
                new ObjectParameter("b_Target_id", typeof(int));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var assign_byParameter = assign_by.HasValue ?
                new ObjectParameter("assign_by", assign_by) :
                new ObjectParameter("assign_by", typeof(int));
    
            var assign_dateParameter = assign_date.HasValue ?
                new ObjectParameter("assign_date", assign_date) :
                new ObjectParameter("assign_date", typeof(System.DateTime));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stor_Business_Target_Assign_Result>("stor_Business_Target_Assign", assign_idParameter, b_Target_idParameter, user_idParameter, assign_byParameter, assign_dateParameter, modeParameter);
        }
    
        public virtual ObjectResult<Stor_Business_User_Result> Stor_Business_User(Nullable<int> b_user_id, string b_user_name, string b_user_password, string b_email, string b_Contact_no, Nullable<System.DateTime> c_date, Nullable<bool> active, string mode)
        {
            var b_user_idParameter = b_user_id.HasValue ?
                new ObjectParameter("b_user_id", b_user_id) :
                new ObjectParameter("b_user_id", typeof(int));
    
            var b_user_nameParameter = b_user_name != null ?
                new ObjectParameter("b_user_name", b_user_name) :
                new ObjectParameter("b_user_name", typeof(string));
    
            var b_user_passwordParameter = b_user_password != null ?
                new ObjectParameter("b_user_password", b_user_password) :
                new ObjectParameter("b_user_password", typeof(string));
    
            var b_emailParameter = b_email != null ?
                new ObjectParameter("b_email", b_email) :
                new ObjectParameter("b_email", typeof(string));
    
            var b_Contact_noParameter = b_Contact_no != null ?
                new ObjectParameter("b_Contact_no", b_Contact_no) :
                new ObjectParameter("b_Contact_no", typeof(string));
    
            var c_dateParameter = c_date.HasValue ?
                new ObjectParameter("c_date", c_date) :
                new ObjectParameter("c_date", typeof(System.DateTime));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(bool));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Stor_Business_User_Result>("Stor_Business_User", b_user_idParameter, b_user_nameParameter, b_user_passwordParameter, b_emailParameter, b_Contact_noParameter, c_dateParameter, activeParameter, modeParameter);
        }
    
        public virtual ObjectResult<stor_business_workplace_Result> stor_business_workplace(Nullable<int> business_id, Nullable<int> work_place_id, string work_place_code, string comments, Nullable<bool> active, Nullable<bool> avilable_for_online, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var work_place_idParameter = work_place_id.HasValue ?
                new ObjectParameter("work_place_id", work_place_id) :
                new ObjectParameter("work_place_id", typeof(int));
    
            var work_place_codeParameter = work_place_code != null ?
                new ObjectParameter("work_place_code", work_place_code) :
                new ObjectParameter("work_place_code", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("comments", comments) :
                new ObjectParameter("comments", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(bool));
    
            var avilable_for_onlineParameter = avilable_for_online.HasValue ?
                new ObjectParameter("avilable_for_online", avilable_for_online) :
                new ObjectParameter("avilable_for_online", typeof(bool));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stor_business_workplace_Result>("stor_business_workplace", business_idParameter, work_place_idParameter, work_place_codeParameter, commentsParameter, activeParameter, avilable_for_onlineParameter, modeParameter);
        }
    
        public virtual ObjectResult<stor_city_Result> stor_city(Nullable<int> city_id, string city_code, string city_Name, Nullable<bool> active, string state_id, string mode)
        {
            var city_idParameter = city_id.HasValue ?
                new ObjectParameter("City_id", city_id) :
                new ObjectParameter("City_id", typeof(int));
    
            var city_codeParameter = city_code != null ?
                new ObjectParameter("City_code", city_code) :
                new ObjectParameter("City_code", typeof(string));
    
            var city_NameParameter = city_Name != null ?
                new ObjectParameter("City_Name", city_Name) :
                new ObjectParameter("City_Name", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var state_idParameter = state_id != null ?
                new ObjectParameter("state_id", state_id) :
                new ObjectParameter("state_id", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stor_city_Result>("stor_city", city_idParameter, city_codeParameter, city_NameParameter, activeParameter, state_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<stor_facility_Result> stor_facility(Nullable<int> facility_id, string facility_code, string facility_Name, string service_detail, Nullable<bool> active, string mode)
        {
            var facility_idParameter = facility_id.HasValue ?
                new ObjectParameter("facility_id", facility_id) :
                new ObjectParameter("facility_id", typeof(int));
    
            var facility_codeParameter = facility_code != null ?
                new ObjectParameter("facility_code", facility_code) :
                new ObjectParameter("facility_code", typeof(string));
    
            var facility_NameParameter = facility_Name != null ?
                new ObjectParameter("facility_Name", facility_Name) :
                new ObjectParameter("facility_Name", typeof(string));
    
            var service_detailParameter = service_detail != null ?
                new ObjectParameter("service_detail", service_detail) :
                new ObjectParameter("service_detail", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(bool));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stor_facility_Result>("stor_facility", facility_idParameter, facility_codeParameter, facility_NameParameter, service_detailParameter, activeParameter, modeParameter);
        }
    
        public virtual ObjectResult<stor_followup_Result> stor_followup(Nullable<int> enquiry_follow_id, Nullable<int> business_enquiry_id, Nullable<int> user_id, string feedback, Nullable<System.DateTime> next_date_to_Visit, string reason_for_next_visit, string next_Plan_of_Action, Nullable<int> no_of_visits, string mode)
        {
            var enquiry_follow_idParameter = enquiry_follow_id.HasValue ?
                new ObjectParameter("Enquiry_follow_id", enquiry_follow_id) :
                new ObjectParameter("Enquiry_follow_id", typeof(int));
    
            var business_enquiry_idParameter = business_enquiry_id.HasValue ?
                new ObjectParameter("business_enquiry_id", business_enquiry_id) :
                new ObjectParameter("business_enquiry_id", typeof(int));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var feedbackParameter = feedback != null ?
                new ObjectParameter("feedback", feedback) :
                new ObjectParameter("feedback", typeof(string));
    
            var next_date_to_VisitParameter = next_date_to_Visit.HasValue ?
                new ObjectParameter("next_date_to_Visit", next_date_to_Visit) :
                new ObjectParameter("next_date_to_Visit", typeof(System.DateTime));
    
            var reason_for_next_visitParameter = reason_for_next_visit != null ?
                new ObjectParameter("reason_for_next_visit", reason_for_next_visit) :
                new ObjectParameter("reason_for_next_visit", typeof(string));
    
            var next_Plan_of_ActionParameter = next_Plan_of_Action != null ?
                new ObjectParameter("next_Plan_of_Action", next_Plan_of_Action) :
                new ObjectParameter("next_Plan_of_Action", typeof(string));
    
            var no_of_visitsParameter = no_of_visits.HasValue ?
                new ObjectParameter("No_of_visits", no_of_visits) :
                new ObjectParameter("No_of_visits", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stor_followup_Result>("stor_followup", enquiry_follow_idParameter, business_enquiry_idParameter, user_idParameter, feedbackParameter, next_date_to_VisitParameter, reason_for_next_visitParameter, next_Plan_of_ActionParameter, no_of_visitsParameter, modeParameter);
        }
    
        public virtual ObjectResult<stor_item_Result> stor_item(Nullable<int> item_id, string item_code, string item_Name, Nullable<bool> active, string type_id, string mode)
        {
            var item_idParameter = item_id.HasValue ?
                new ObjectParameter("item_id", item_id) :
                new ObjectParameter("item_id", typeof(int));
    
            var item_codeParameter = item_code != null ?
                new ObjectParameter("item_code", item_code) :
                new ObjectParameter("item_code", typeof(string));
    
            var item_NameParameter = item_Name != null ?
                new ObjectParameter("item_Name", item_Name) :
                new ObjectParameter("item_Name", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var type_idParameter = type_id != null ?
                new ObjectParameter("type_id", type_id) :
                new ObjectParameter("type_id", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stor_item_Result>("stor_item", item_idParameter, item_codeParameter, item_NameParameter, activeParameter, type_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<Stor_Item_Inward_Result> Stor_Item_Inward(Nullable<int> business_id, Nullable<int> item_id, Nullable<int> type_id, Nullable<int> item_Inward_id, Nullable<int> qnty, Nullable<decimal> rate, string barcode, string remark, Nullable<System.DateTime> inward_date, string mode, Nullable<bool> active)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var item_idParameter = item_id.HasValue ?
                new ObjectParameter("item_id", item_id) :
                new ObjectParameter("item_id", typeof(int));
    
            var type_idParameter = type_id.HasValue ?
                new ObjectParameter("type_id", type_id) :
                new ObjectParameter("type_id", typeof(int));
    
            var item_Inward_idParameter = item_Inward_id.HasValue ?
                new ObjectParameter("item_Inward_id", item_Inward_id) :
                new ObjectParameter("item_Inward_id", typeof(int));
    
            var qntyParameter = qnty.HasValue ?
                new ObjectParameter("Qnty", qnty) :
                new ObjectParameter("Qnty", typeof(int));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(decimal));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("barcode", barcode) :
                new ObjectParameter("barcode", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("remark", remark) :
                new ObjectParameter("remark", typeof(string));
    
            var inward_dateParameter = inward_date.HasValue ?
                new ObjectParameter("inward_date", inward_date) :
                new ObjectParameter("inward_date", typeof(System.DateTime));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Stor_Item_Inward_Result>("Stor_Item_Inward", business_idParameter, item_idParameter, type_idParameter, item_Inward_idParameter, qntyParameter, rateParameter, barcodeParameter, remarkParameter, inward_dateParameter, modeParameter, activeParameter);
        }
    
        public virtual ObjectResult<Stor_item_type_Result> Stor_item_type(Nullable<int> type_id, string type_code, string typee_name, string mode, Nullable<bool> active)
        {
            var type_idParameter = type_id.HasValue ?
                new ObjectParameter("type_id", type_id) :
                new ObjectParameter("type_id", typeof(int));
    
            var type_codeParameter = type_code != null ?
                new ObjectParameter("type_code", type_code) :
                new ObjectParameter("type_code", typeof(string));
    
            var typee_nameParameter = typee_name != null ?
                new ObjectParameter("typee_name", typee_name) :
                new ObjectParameter("typee_name", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Stor_item_type_Result>("Stor_item_type", type_idParameter, type_codeParameter, typee_nameParameter, modeParameter, activeParameter);
        }
    
        public virtual ObjectResult<stor_location_Result> stor_location(Nullable<int> location_Id, string location_code, string location_Name, Nullable<int> pincode, Nullable<bool> active, Nullable<int> city_Id, string mode)
        {
            var location_IdParameter = location_Id.HasValue ?
                new ObjectParameter("location_Id", location_Id) :
                new ObjectParameter("location_Id", typeof(int));
    
            var location_codeParameter = location_code != null ?
                new ObjectParameter("location_code", location_code) :
                new ObjectParameter("location_code", typeof(string));
    
            var location_NameParameter = location_Name != null ?
                new ObjectParameter("location_Name", location_Name) :
                new ObjectParameter("location_Name", typeof(string));
    
            var pincodeParameter = pincode.HasValue ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(bool));
    
            var city_IdParameter = city_Id.HasValue ?
                new ObjectParameter("city_Id", city_Id) :
                new ObjectParameter("city_Id", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stor_location_Result>("stor_location", location_IdParameter, location_codeParameter, location_NameParameter, pincodeParameter, activeParameter, city_IdParameter, modeParameter);
        }
    
        public virtual ObjectResult<stor_login_Result> stor_login(Nullable<int> login_id, string user_type, string user_id, string user_password, Nullable<System.DateTime> login_time, string browser, string os, string ip_address, string mode)
        {
            var login_idParameter = login_id.HasValue ?
                new ObjectParameter("login_id", login_id) :
                new ObjectParameter("login_id", typeof(int));
    
            var user_typeParameter = user_type != null ?
                new ObjectParameter("user_type", user_type) :
                new ObjectParameter("user_type", typeof(string));
    
            var user_idParameter = user_id != null ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(string));
    
            var user_passwordParameter = user_password != null ?
                new ObjectParameter("user_password", user_password) :
                new ObjectParameter("user_password", typeof(string));
    
            var login_timeParameter = login_time.HasValue ?
                new ObjectParameter("login_time", login_time) :
                new ObjectParameter("login_time", typeof(System.DateTime));
    
            var browserParameter = browser != null ?
                new ObjectParameter("browser", browser) :
                new ObjectParameter("browser", typeof(string));
    
            var osParameter = os != null ?
                new ObjectParameter("os", os) :
                new ObjectParameter("os", typeof(string));
    
            var ip_addressParameter = ip_address != null ?
                new ObjectParameter("ip_address", ip_address) :
                new ObjectParameter("ip_address", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stor_login_Result>("stor_login", login_idParameter, user_typeParameter, user_idParameter, user_passwordParameter, login_timeParameter, browserParameter, osParameter, ip_addressParameter, modeParameter);
        }
    
        public virtual ObjectResult<stor_Questionbank_Result> stor_Questionbank(string enquiry_type, Nullable<int> enquiry_id, string enquiry_Name, Nullable<bool> active, Nullable<int> spend, string mode)
        {
            var enquiry_typeParameter = enquiry_type != null ?
                new ObjectParameter("enquiry_type", enquiry_type) :
                new ObjectParameter("enquiry_type", typeof(string));
    
            var enquiry_idParameter = enquiry_id.HasValue ?
                new ObjectParameter("enquiry_id", enquiry_id) :
                new ObjectParameter("enquiry_id", typeof(int));
    
            var enquiry_NameParameter = enquiry_Name != null ?
                new ObjectParameter("enquiry_Name", enquiry_Name) :
                new ObjectParameter("enquiry_Name", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(bool));
    
            var spendParameter = spend.HasValue ?
                new ObjectParameter("spend", spend) :
                new ObjectParameter("spend", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stor_Questionbank_Result>("stor_Questionbank", enquiry_typeParameter, enquiry_idParameter, enquiry_NameParameter, activeParameter, spendParameter, modeParameter);
        }
    
        public virtual ObjectResult<stor_services_Result> stor_services(Nullable<int> service_id, string service_code, string service_name, string service_detail, Nullable<bool> active, string mode)
        {
            var service_idParameter = service_id.HasValue ?
                new ObjectParameter("Service_id", service_id) :
                new ObjectParameter("Service_id", typeof(int));
    
            var service_codeParameter = service_code != null ?
                new ObjectParameter("Service_code", service_code) :
                new ObjectParameter("Service_code", typeof(string));
    
            var service_nameParameter = service_name != null ?
                new ObjectParameter("Service_name", service_name) :
                new ObjectParameter("Service_name", typeof(string));
    
            var service_detailParameter = service_detail != null ?
                new ObjectParameter("service_detail", service_detail) :
                new ObjectParameter("service_detail", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(bool));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stor_services_Result>("stor_services", service_idParameter, service_codeParameter, service_nameParameter, service_detailParameter, activeParameter, modeParameter);
        }
    
        public virtual ObjectResult<Stor_State_Result> Stor_State(Nullable<int> state_Id, string state_code, string state_Name, Nullable<bool> active, string mode)
        {
            var state_IdParameter = state_Id.HasValue ?
                new ObjectParameter("state_Id", state_Id) :
                new ObjectParameter("state_Id", typeof(int));
    
            var state_codeParameter = state_code != null ?
                new ObjectParameter("state_code", state_code) :
                new ObjectParameter("state_code", typeof(string));
    
            var state_NameParameter = state_Name != null ?
                new ObjectParameter("state_Name", state_Name) :
                new ObjectParameter("state_Name", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Stor_State_Result>("Stor_State", state_IdParameter, state_codeParameter, state_NameParameter, activeParameter, modeParameter);
        }
    
        public virtual ObjectResult<stor_SubServices_Result> stor_SubServices(Nullable<int> sub_Service_id, Nullable<int> service_id, string sub_Service_name, Nullable<bool> active, string description, string mode)
        {
            var sub_Service_idParameter = sub_Service_id.HasValue ?
                new ObjectParameter("Sub_Service_id", sub_Service_id) :
                new ObjectParameter("Sub_Service_id", typeof(int));
    
            var service_idParameter = service_id.HasValue ?
                new ObjectParameter("Service_id", service_id) :
                new ObjectParameter("Service_id", typeof(int));
    
            var sub_Service_nameParameter = sub_Service_name != null ?
                new ObjectParameter("sub_Service_name", sub_Service_name) :
                new ObjectParameter("sub_Service_name", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(bool));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stor_SubServices_Result>("stor_SubServices", sub_Service_idParameter, service_idParameter, sub_Service_nameParameter, activeParameter, descriptionParameter, modeParameter);
        }
    
        public virtual ObjectResult<stor_tariff_Result> stor_tariff(Nullable<int> tariff_id, string tariff_code, string tariff_name, string rate, string duration, Nullable<int> created_by, Nullable<bool> active, string mode)
        {
            var tariff_idParameter = tariff_id.HasValue ?
                new ObjectParameter("tariff_id", tariff_id) :
                new ObjectParameter("tariff_id", typeof(int));
    
            var tariff_codeParameter = tariff_code != null ?
                new ObjectParameter("tariff_code", tariff_code) :
                new ObjectParameter("tariff_code", typeof(string));
    
            var tariff_nameParameter = tariff_name != null ?
                new ObjectParameter("tariff_name", tariff_name) :
                new ObjectParameter("tariff_name", typeof(string));
    
            var rateParameter = rate != null ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(string));
    
            var durationParameter = duration != null ?
                new ObjectParameter("duration", duration) :
                new ObjectParameter("duration", typeof(string));
    
            var created_byParameter = created_by.HasValue ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(bool));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stor_tariff_Result>("stor_tariff", tariff_idParameter, tariff_codeParameter, tariff_nameParameter, rateParameter, durationParameter, created_byParameter, activeParameter, modeParameter);
        }
    
        public virtual ObjectResult<stor_user_Result> stor_user(Nullable<int> activate_by, Nullable<int> type_id, Nullable<int> user_id, string user_name, string user_password, string email, string contact_no, Nullable<System.DateTime> c_date, Nullable<int> active, string mode)
        {
            var activate_byParameter = activate_by.HasValue ?
                new ObjectParameter("activate_by", activate_by) :
                new ObjectParameter("activate_by", typeof(int));
    
            var type_idParameter = type_id.HasValue ?
                new ObjectParameter("Type_id", type_id) :
                new ObjectParameter("Type_id", typeof(int));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var user_nameParameter = user_name != null ?
                new ObjectParameter("user_name", user_name) :
                new ObjectParameter("user_name", typeof(string));
    
            var user_passwordParameter = user_password != null ?
                new ObjectParameter("user_password", user_password) :
                new ObjectParameter("user_password", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var contact_noParameter = contact_no != null ?
                new ObjectParameter("Contact_no", contact_no) :
                new ObjectParameter("Contact_no", typeof(string));
    
            var c_dateParameter = c_date.HasValue ?
                new ObjectParameter("c_date", c_date) :
                new ObjectParameter("c_date", typeof(System.DateTime));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stor_user_Result>("stor_user", activate_byParameter, type_idParameter, user_idParameter, user_nameParameter, user_passwordParameter, emailParameter, contact_noParameter, c_dateParameter, activeParameter, modeParameter);
        }
    
        public virtual ObjectResult<stor_usertype_Result> stor_usertype(Nullable<int> type_id, string type_name, string mode)
        {
            var type_idParameter = type_id.HasValue ?
                new ObjectParameter("Type_id", type_id) :
                new ObjectParameter("Type_id", typeof(int));
    
            var type_nameParameter = type_name != null ?
                new ObjectParameter("Type_name", type_name) :
                new ObjectParameter("Type_name", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stor_usertype_Result>("stor_usertype", type_idParameter, type_nameParameter, modeParameter);
        }
    
        public virtual ObjectResult<store_dataentry_salon_Result> store_dataentry_salon(Nullable<int> user_id, Nullable<int> b_Target_id, Nullable<int> city_Id, Nullable<int> location_Id, string business_Name, string contact_No, string contact_No1, string address1, string address2, string address3, string contact_Person, string land_mark, string business_email_id, Nullable<bool> active, string assign, string forMarketing, string request_type, string mode)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var b_Target_idParameter = b_Target_id.HasValue ?
                new ObjectParameter("b_Target_id", b_Target_id) :
                new ObjectParameter("b_Target_id", typeof(int));
    
            var city_IdParameter = city_Id.HasValue ?
                new ObjectParameter("city_Id", city_Id) :
                new ObjectParameter("city_Id", typeof(int));
    
            var location_IdParameter = location_Id.HasValue ?
                new ObjectParameter("location_Id", location_Id) :
                new ObjectParameter("location_Id", typeof(int));
    
            var business_NameParameter = business_Name != null ?
                new ObjectParameter("business_Name", business_Name) :
                new ObjectParameter("business_Name", typeof(string));
    
            var contact_NoParameter = contact_No != null ?
                new ObjectParameter("contact_No", contact_No) :
                new ObjectParameter("contact_No", typeof(string));
    
            var contact_No1Parameter = contact_No1 != null ?
                new ObjectParameter("contact_No1", contact_No1) :
                new ObjectParameter("contact_No1", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("address1", address1) :
                new ObjectParameter("address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("address2", address2) :
                new ObjectParameter("address2", typeof(string));
    
            var address3Parameter = address3 != null ?
                new ObjectParameter("address3", address3) :
                new ObjectParameter("address3", typeof(string));
    
            var contact_PersonParameter = contact_Person != null ?
                new ObjectParameter("Contact_Person", contact_Person) :
                new ObjectParameter("Contact_Person", typeof(string));
    
            var land_markParameter = land_mark != null ?
                new ObjectParameter("Land_mark", land_mark) :
                new ObjectParameter("Land_mark", typeof(string));
    
            var business_email_idParameter = business_email_id != null ?
                new ObjectParameter("business_email_id", business_email_id) :
                new ObjectParameter("business_email_id", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(bool));
    
            var assignParameter = assign != null ?
                new ObjectParameter("assign", assign) :
                new ObjectParameter("assign", typeof(string));
    
            var forMarketingParameter = forMarketing != null ?
                new ObjectParameter("ForMarketing", forMarketing) :
                new ObjectParameter("ForMarketing", typeof(string));
    
            var request_typeParameter = request_type != null ?
                new ObjectParameter("request_type", request_type) :
                new ObjectParameter("request_type", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<store_dataentry_salon_Result>("store_dataentry_salon", user_idParameter, b_Target_idParameter, city_IdParameter, location_IdParameter, business_NameParameter, contact_NoParameter, contact_No1Parameter, address1Parameter, address2Parameter, address3Parameter, contact_PersonParameter, land_markParameter, business_email_idParameter, activeParameter, assignParameter, forMarketingParameter, request_typeParameter, modeParameter);
        }
    
        public virtual int UpdateNotification(Nullable<int> notificationID, Nullable<bool> isMessageSend, Nullable<bool> isError, string errorMessage)
        {
            var notificationIDParameter = notificationID.HasValue ?
                new ObjectParameter("NotificationID", notificationID) :
                new ObjectParameter("NotificationID", typeof(int));
    
            var isMessageSendParameter = isMessageSend.HasValue ?
                new ObjectParameter("IsMessageSend", isMessageSend) :
                new ObjectParameter("IsMessageSend", typeof(bool));
    
            var isErrorParameter = isError.HasValue ?
                new ObjectParameter("IsError", isError) :
                new ObjectParameter("IsError", typeof(bool));
    
            var errorMessageParameter = errorMessage != null ?
                new ObjectParameter("ErrorMessage", errorMessage) :
                new ObjectParameter("ErrorMessage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateNotification", notificationIDParameter, isMessageSendParameter, isErrorParameter, errorMessageParameter);
        }
    
        public virtual ObjectResult<string> usp_AssignCustomer_booking(Nullable<int> booking_id, Nullable<int> business_id, Nullable<int> enduser_id, string booking_code, string c_mobile_no, Nullable<int> time_type_id, Nullable<System.TimeSpan> booking_start_time, Nullable<System.TimeSpan> booking_end_time, Nullable<int> booked_assign, string on_Off, Nullable<int> ticket_id, Nullable<System.DateTime> booking_date, Nullable<int> cancel, Nullable<int> eta_for_proces, Nullable<int> work_place_id, string enduser_name, string mode)
        {
            var booking_idParameter = booking_id.HasValue ?
                new ObjectParameter("booking_id", booking_id) :
                new ObjectParameter("booking_id", typeof(int));
    
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var enduser_idParameter = enduser_id.HasValue ?
                new ObjectParameter("Enduser_id", enduser_id) :
                new ObjectParameter("Enduser_id", typeof(int));
    
            var booking_codeParameter = booking_code != null ?
                new ObjectParameter("Booking_code", booking_code) :
                new ObjectParameter("Booking_code", typeof(string));
    
            var c_mobile_noParameter = c_mobile_no != null ?
                new ObjectParameter("c_mobile_no", c_mobile_no) :
                new ObjectParameter("c_mobile_no", typeof(string));
    
            var time_type_idParameter = time_type_id.HasValue ?
                new ObjectParameter("time_type_id", time_type_id) :
                new ObjectParameter("time_type_id", typeof(int));
    
            var booking_start_timeParameter = booking_start_time.HasValue ?
                new ObjectParameter("Booking_start_time", booking_start_time) :
                new ObjectParameter("Booking_start_time", typeof(System.TimeSpan));
    
            var booking_end_timeParameter = booking_end_time.HasValue ?
                new ObjectParameter("Booking_end_time", booking_end_time) :
                new ObjectParameter("Booking_end_time", typeof(System.TimeSpan));
    
            var booked_assignParameter = booked_assign.HasValue ?
                new ObjectParameter("booked_assign", booked_assign) :
                new ObjectParameter("booked_assign", typeof(int));
    
            var on_OffParameter = on_Off != null ?
                new ObjectParameter("On_Off", on_Off) :
                new ObjectParameter("On_Off", typeof(string));
    
            var ticket_idParameter = ticket_id.HasValue ?
                new ObjectParameter("ticket_id", ticket_id) :
                new ObjectParameter("ticket_id", typeof(int));
    
            var booking_dateParameter = booking_date.HasValue ?
                new ObjectParameter("booking_date", booking_date) :
                new ObjectParameter("booking_date", typeof(System.DateTime));
    
            var cancelParameter = cancel.HasValue ?
                new ObjectParameter("cancel", cancel) :
                new ObjectParameter("cancel", typeof(int));
    
            var eta_for_procesParameter = eta_for_proces.HasValue ?
                new ObjectParameter("eta_for_proces", eta_for_proces) :
                new ObjectParameter("eta_for_proces", typeof(int));
    
            var work_place_idParameter = work_place_id.HasValue ?
                new ObjectParameter("work_place_id", work_place_id) :
                new ObjectParameter("work_place_id", typeof(int));
    
            var enduser_nameParameter = enduser_name != null ?
                new ObjectParameter("Enduser_name", enduser_name) :
                new ObjectParameter("Enduser_name", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_AssignCustomer_booking", booking_idParameter, business_idParameter, enduser_idParameter, booking_codeParameter, c_mobile_noParameter, time_type_idParameter, booking_start_timeParameter, booking_end_timeParameter, booked_assignParameter, on_OffParameter, ticket_idParameter, booking_dateParameter, cancelParameter, eta_for_procesParameter, work_place_idParameter, enduser_nameParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_AssignCustomer_Get_Slot_time_Result> usp_AssignCustomer_Get_Slot_time(Nullable<int> business_id, string startTime, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var startTimeParameter = startTime != null ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AssignCustomer_Get_Slot_time_Result>("usp_AssignCustomer_Get_Slot_time", business_idParameter, startTimeParameter, modeParameter);
        }
    
        public virtual ObjectResult<string> usp_Booked_Services_For_Dynamic_Chair(Nullable<int> booking_id, Nullable<int> business_id, Nullable<System.DateTime> booking_date, Nullable<int> work_place_id, string mode)
        {
            var booking_idParameter = booking_id.HasValue ?
                new ObjectParameter("booking_id", booking_id) :
                new ObjectParameter("booking_id", typeof(int));
    
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var booking_dateParameter = booking_date.HasValue ?
                new ObjectParameter("Booking_date", booking_date) :
                new ObjectParameter("Booking_date", typeof(System.DateTime));
    
            var work_place_idParameter = work_place_id.HasValue ?
                new ObjectParameter("work_place_id", work_place_id) :
                new ObjectParameter("work_place_id", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_Booked_Services_For_Dynamic_Chair", booking_idParameter, business_idParameter, booking_dateParameter, work_place_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_Booked_Services_Total_Rate_Result> usp_Booked_Services_Total_Rate(Nullable<int> business_id, Nullable<int> booking_id, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var booking_idParameter = booking_id.HasValue ?
                new ObjectParameter("Booking_id", booking_id) :
                new ObjectParameter("Booking_id", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Booked_Services_Total_Rate_Result>("usp_Booked_Services_Total_Rate", business_idParameter, booking_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<string> usp_booking_code(Nullable<int> business_id, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_booking_code", business_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_Booking_Detail_Result> usp_Booking_Detail(Nullable<int> enduser_id, Nullable<System.DateTime> booking_date, string mode)
        {
            var enduser_idParameter = enduser_id.HasValue ?
                new ObjectParameter("Enduser_id", enduser_id) :
                new ObjectParameter("Enduser_id", typeof(int));
    
            var booking_dateParameter = booking_date.HasValue ?
                new ObjectParameter("Booking_date", booking_date) :
                new ObjectParameter("Booking_date", typeof(System.DateTime));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Booking_Detail_Result>("usp_Booking_Detail", enduser_idParameter, booking_dateParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_Booking_Id_for_Chair_Result> usp_Booking_Id_for_Chair(Nullable<int> booking_id, Nullable<int> business_id, Nullable<System.DateTime> booking_date, string mode)
        {
            var booking_idParameter = booking_id.HasValue ?
                new ObjectParameter("booking_id", booking_id) :
                new ObjectParameter("booking_id", typeof(int));
    
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var booking_dateParameter = booking_date.HasValue ?
                new ObjectParameter("Booking_date", booking_date) :
                new ObjectParameter("Booking_date", typeof(System.DateTime));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Booking_Id_for_Chair_Result>("usp_Booking_Id_for_Chair", booking_idParameter, business_idParameter, booking_dateParameter, modeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_booking_Id_Order_By(string mode)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_booking_Id_Order_By", modeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_Booking_Total_Amount(Nullable<int> business_id, Nullable<System.DateTime> booking_date, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var booking_dateParameter = booking_date.HasValue ?
                new ObjectParameter("booking_date", booking_date) :
                new ObjectParameter("booking_date", typeof(System.DateTime));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_Booking_Total_Amount", business_idParameter, booking_dateParameter, modeParameter);
        }
    
        public virtual ObjectResult<Nullable<System.TimeSpan>> usp_Business_Closing_Hours(Nullable<int> business_id, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.TimeSpan>>("usp_Business_Closing_Hours", business_idParameter, modeParameter);
        }
    
        public virtual int usp_Business_Offer(Nullable<int> fabkut_offer_id, Nullable<int> fabkut_offer_type_id, string fabkut_offer_code, string fabkut_offer_name, string fabkut_offer_desc, string fabkut_offer_pic, Nullable<System.DateTime> fabkut_offer_start, Nullable<System.DateTime> fabkut_offer_end, Nullable<int> fabkut_offer_price, Nullable<int> fabkut_offer_disc_perc, Nullable<int> fabkut_offer_disc_coupon_value, Nullable<bool> active, Nullable<bool> decline, string mode)
        {
            var fabkut_offer_idParameter = fabkut_offer_id.HasValue ?
                new ObjectParameter("fabkut_offer_id", fabkut_offer_id) :
                new ObjectParameter("fabkut_offer_id", typeof(int));
    
            var fabkut_offer_type_idParameter = fabkut_offer_type_id.HasValue ?
                new ObjectParameter("fabkut_offer_type_id", fabkut_offer_type_id) :
                new ObjectParameter("fabkut_offer_type_id", typeof(int));
    
            var fabkut_offer_codeParameter = fabkut_offer_code != null ?
                new ObjectParameter("fabkut_offer_code", fabkut_offer_code) :
                new ObjectParameter("fabkut_offer_code", typeof(string));
    
            var fabkut_offer_nameParameter = fabkut_offer_name != null ?
                new ObjectParameter("fabkut_offer_name", fabkut_offer_name) :
                new ObjectParameter("fabkut_offer_name", typeof(string));
    
            var fabkut_offer_descParameter = fabkut_offer_desc != null ?
                new ObjectParameter("fabkut_offer_desc", fabkut_offer_desc) :
                new ObjectParameter("fabkut_offer_desc", typeof(string));
    
            var fabkut_offer_picParameter = fabkut_offer_pic != null ?
                new ObjectParameter("fabkut_offer_pic", fabkut_offer_pic) :
                new ObjectParameter("fabkut_offer_pic", typeof(string));
    
            var fabkut_offer_startParameter = fabkut_offer_start.HasValue ?
                new ObjectParameter("fabkut_offer_start", fabkut_offer_start) :
                new ObjectParameter("fabkut_offer_start", typeof(System.DateTime));
    
            var fabkut_offer_endParameter = fabkut_offer_end.HasValue ?
                new ObjectParameter("fabkut_offer_end", fabkut_offer_end) :
                new ObjectParameter("fabkut_offer_end", typeof(System.DateTime));
    
            var fabkut_offer_priceParameter = fabkut_offer_price.HasValue ?
                new ObjectParameter("fabkut_offer_price", fabkut_offer_price) :
                new ObjectParameter("fabkut_offer_price", typeof(int));
    
            var fabkut_offer_disc_percParameter = fabkut_offer_disc_perc.HasValue ?
                new ObjectParameter("fabkut_offer_disc_perc", fabkut_offer_disc_perc) :
                new ObjectParameter("fabkut_offer_disc_perc", typeof(int));
    
            var fabkut_offer_disc_coupon_valueParameter = fabkut_offer_disc_coupon_value.HasValue ?
                new ObjectParameter("fabkut_offer_disc_coupon_value", fabkut_offer_disc_coupon_value) :
                new ObjectParameter("fabkut_offer_disc_coupon_value", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(bool));
    
            var declineParameter = decline.HasValue ?
                new ObjectParameter("decline", decline) :
                new ObjectParameter("decline", typeof(bool));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Business_Offer", fabkut_offer_idParameter, fabkut_offer_type_idParameter, fabkut_offer_codeParameter, fabkut_offer_nameParameter, fabkut_offer_descParameter, fabkut_offer_picParameter, fabkut_offer_startParameter, fabkut_offer_endParameter, fabkut_offer_priceParameter, fabkut_offer_disc_percParameter, fabkut_offer_disc_coupon_valueParameter, activeParameter, declineParameter, modeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_Business_Wise_Total_Amount(Nullable<int> business_id, Nullable<System.DateTime> booking_date, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var booking_dateParameter = booking_date.HasValue ?
                new ObjectParameter("Booking_date", booking_date) :
                new ObjectParameter("Booking_date", typeof(System.DateTime));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_Business_Wise_Total_Amount", business_idParameter, booking_dateParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_Busniess_Wise_Employee_Result> usp_Busniess_Wise_Employee(Nullable<int> business_id, Nullable<int> emp_id, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Busniess_Wise_Employee_Result>("usp_Busniess_Wise_Employee", business_idParameter, emp_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_Client_Login_Contact_Result> usp_Client_Login_Contact(string contact_no, string password)
        {
            var contact_noParameter = contact_no != null ?
                new ObjectParameter("Contact_no", contact_no) :
                new ObjectParameter("Contact_no", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Client_Login_Contact_Result>("usp_Client_Login_Contact", contact_noParameter, passwordParameter);
        }
    
        public virtual ObjectResult<usp_Client_Login_Email_Result> usp_Client_Login_Email(string email_id, string password)
        {
            var email_idParameter = email_id != null ?
                new ObjectParameter("email_id", email_id) :
                new ObjectParameter("email_id", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Client_Login_Email_Result>("usp_Client_Login_Email", email_idParameter, passwordParameter);
        }
    
        public virtual ObjectResult<usp_Customer_For_Dynamic_Chair_Result> usp_Customer_For_Dynamic_Chair(Nullable<int> business_id, Nullable<System.DateTime> booking_date, Nullable<int> work_place_id, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var booking_dateParameter = booking_date.HasValue ?
                new ObjectParameter("Booking_date", booking_date) :
                new ObjectParameter("Booking_date", typeof(System.DateTime));
    
            var work_place_idParameter = work_place_id.HasValue ?
                new ObjectParameter("work_place_id", work_place_id) :
                new ObjectParameter("work_place_id", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Customer_For_Dynamic_Chair_Result>("usp_Customer_For_Dynamic_Chair", business_idParameter, booking_dateParameter, work_place_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_DashBoard_Expense_Result> usp_DashBoard_Expense(Nullable<int> business_id, Nullable<System.DateTime> date, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DashBoard_Expense_Result>("usp_DashBoard_Expense", business_idParameter, dateParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_Dashboard_Get_booked_Customer_Detail_Result> usp_Dashboard_Get_booked_Customer_Detail(Nullable<int> business_id, Nullable<int> work_place_id, Nullable<System.DateTime> booking_date, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var work_place_idParameter = work_place_id.HasValue ?
                new ObjectParameter("work_place_id", work_place_id) :
                new ObjectParameter("work_place_id", typeof(int));
    
            var booking_dateParameter = booking_date.HasValue ?
                new ObjectParameter("Booking_date", booking_date) :
                new ObjectParameter("Booking_date", typeof(System.DateTime));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Dashboard_Get_booked_Customer_Detail_Result>("usp_Dashboard_Get_booked_Customer_Detail", business_idParameter, work_place_idParameter, booking_dateParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_DashBoard_Get_Services_Result> usp_DashBoard_Get_Services(Nullable<int> business_id, Nullable<bool> active)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DashBoard_Get_Services_Result>("usp_DashBoard_Get_Services", business_idParameter, activeParameter);
        }
    
        public virtual ObjectResult<usp_Employee_Advance_Detail_Result> usp_Employee_Advance_Detail(Nullable<int> business_id, Nullable<System.DateTime> booking_date, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var booking_dateParameter = booking_date.HasValue ?
                new ObjectParameter("booking_date", booking_date) :
                new ObjectParameter("booking_date", typeof(System.DateTime));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Employee_Advance_Detail_Result>("usp_Employee_Advance_Detail", business_idParameter, booking_dateParameter, modeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_Employee_Wise_Advance_Detail(Nullable<int> business_id, Nullable<System.DateTime> date, Nullable<int> emp_id, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_Employee_Wise_Advance_Detail", business_idParameter, dateParameter, emp_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_Employee_Wise_Amount_Result> usp_Employee_Wise_Amount(Nullable<int> business_id, Nullable<System.DateTime> booking_date, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var booking_dateParameter = booking_date.HasValue ?
                new ObjectParameter("Booking_date", booking_date) :
                new ObjectParameter("Booking_date", typeof(System.DateTime));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Employee_Wise_Amount_Result>("usp_Employee_Wise_Amount", business_idParameter, booking_dateParameter, modeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_Expense_Total_Amount(Nullable<int> business_id, Nullable<System.DateTime> date, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_Expense_Total_Amount", business_idParameter, dateParameter, modeParameter);
        }
    
        public virtual int usp_Fabkut_Offer(Nullable<int> fabkut_offer_id, Nullable<int> fabkut_offer_type_id, string fabkut_offer_code, string fabkut_offer_name, string fabkut_offer_desc, string fabkut_offer_pic, Nullable<System.DateTime> fabkut_offer_start, Nullable<System.DateTime> fabkut_offer_end, Nullable<int> fabkut_offer_price, Nullable<int> fabkut_offer_disc_perc, Nullable<int> fabkut_offer_disc_coupon_value, Nullable<bool> active, Nullable<bool> decline, Nullable<bool> accept, string mode)
        {
            var fabkut_offer_idParameter = fabkut_offer_id.HasValue ?
                new ObjectParameter("fabkut_offer_id", fabkut_offer_id) :
                new ObjectParameter("fabkut_offer_id", typeof(int));
    
            var fabkut_offer_type_idParameter = fabkut_offer_type_id.HasValue ?
                new ObjectParameter("fabkut_offer_type_id", fabkut_offer_type_id) :
                new ObjectParameter("fabkut_offer_type_id", typeof(int));
    
            var fabkut_offer_codeParameter = fabkut_offer_code != null ?
                new ObjectParameter("fabkut_offer_code", fabkut_offer_code) :
                new ObjectParameter("fabkut_offer_code", typeof(string));
    
            var fabkut_offer_nameParameter = fabkut_offer_name != null ?
                new ObjectParameter("fabkut_offer_name", fabkut_offer_name) :
                new ObjectParameter("fabkut_offer_name", typeof(string));
    
            var fabkut_offer_descParameter = fabkut_offer_desc != null ?
                new ObjectParameter("fabkut_offer_desc", fabkut_offer_desc) :
                new ObjectParameter("fabkut_offer_desc", typeof(string));
    
            var fabkut_offer_picParameter = fabkut_offer_pic != null ?
                new ObjectParameter("fabkut_offer_pic", fabkut_offer_pic) :
                new ObjectParameter("fabkut_offer_pic", typeof(string));
    
            var fabkut_offer_startParameter = fabkut_offer_start.HasValue ?
                new ObjectParameter("fabkut_offer_start", fabkut_offer_start) :
                new ObjectParameter("fabkut_offer_start", typeof(System.DateTime));
    
            var fabkut_offer_endParameter = fabkut_offer_end.HasValue ?
                new ObjectParameter("fabkut_offer_end", fabkut_offer_end) :
                new ObjectParameter("fabkut_offer_end", typeof(System.DateTime));
    
            var fabkut_offer_priceParameter = fabkut_offer_price.HasValue ?
                new ObjectParameter("fabkut_offer_price", fabkut_offer_price) :
                new ObjectParameter("fabkut_offer_price", typeof(int));
    
            var fabkut_offer_disc_percParameter = fabkut_offer_disc_perc.HasValue ?
                new ObjectParameter("fabkut_offer_disc_perc", fabkut_offer_disc_perc) :
                new ObjectParameter("fabkut_offer_disc_perc", typeof(int));
    
            var fabkut_offer_disc_coupon_valueParameter = fabkut_offer_disc_coupon_value.HasValue ?
                new ObjectParameter("fabkut_offer_disc_coupon_value", fabkut_offer_disc_coupon_value) :
                new ObjectParameter("fabkut_offer_disc_coupon_value", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(bool));
    
            var declineParameter = decline.HasValue ?
                new ObjectParameter("decline", decline) :
                new ObjectParameter("decline", typeof(bool));
    
            var acceptParameter = accept.HasValue ?
                new ObjectParameter("accept", accept) :
                new ObjectParameter("accept", typeof(bool));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Fabkut_Offer", fabkut_offer_idParameter, fabkut_offer_type_idParameter, fabkut_offer_codeParameter, fabkut_offer_nameParameter, fabkut_offer_descParameter, fabkut_offer_picParameter, fabkut_offer_startParameter, fabkut_offer_endParameter, fabkut_offer_priceParameter, fabkut_offer_disc_percParameter, fabkut_offer_disc_coupon_valueParameter, activeParameter, declineParameter, acceptParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_Fill_Grid_Business_Id_Result> usp_Fill_Grid_Business_Id(Nullable<int> business_id, Nullable<System.DateTime> booking_date, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var booking_dateParameter = booking_date.HasValue ?
                new ObjectParameter("booking_date", booking_date) :
                new ObjectParameter("booking_date", typeof(System.DateTime));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Fill_Grid_Business_Id_Result>("usp_Fill_Grid_Business_Id", business_idParameter, booking_dateParameter, modeParameter);
        }
    
        public virtual ObjectResult<string> usp_Get_Booked_selected_Services(Nullable<int> booking_id, string mode)
        {
            var booking_idParameter = booking_id.HasValue ?
                new ObjectParameter("booking_id", booking_id) :
                new ObjectParameter("booking_id", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_Get_Booked_selected_Services", booking_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_Get_Card_Amount_Result> usp_Get_Card_Amount(Nullable<int> business_id, Nullable<System.DateTime> booking_date, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var booking_dateParameter = booking_date.HasValue ?
                new ObjectParameter("Booking_date", booking_date) :
                new ObjectParameter("Booking_date", typeof(System.DateTime));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Get_Card_Amount_Result>("usp_Get_Card_Amount", business_idParameter, booking_dateParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_Get_Cash_Amount_Result> usp_Get_Cash_Amount(Nullable<int> business_id, Nullable<System.DateTime> booking_date, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var booking_dateParameter = booking_date.HasValue ?
                new ObjectParameter("Booking_date", booking_date) :
                new ObjectParameter("Booking_date", typeof(System.DateTime));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Get_Cash_Amount_Result>("usp_Get_Cash_Amount", business_idParameter, booking_dateParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_Get_EndUser_By_Mobile_Result> usp_Get_EndUser_By_Mobile(Nullable<int> business_id, string contact_no, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var contact_noParameter = contact_no != null ?
                new ObjectParameter("contact_no", contact_no) :
                new ObjectParameter("contact_no", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Get_EndUser_By_Mobile_Result>("usp_Get_EndUser_By_Mobile", business_idParameter, contact_noParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_Get_Enuser_Detail_Result> usp_Get_Enuser_Detail(Nullable<int> business_id, Nullable<int> booking_id, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var booking_idParameter = booking_id.HasValue ?
                new ObjectParameter("booking_id", booking_id) :
                new ObjectParameter("booking_id", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Get_Enuser_Detail_Result>("usp_Get_Enuser_Detail", business_idParameter, booking_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_Get_Enuser_Detail_Grid_Result> usp_Get_Enuser_Detail_Grid(Nullable<int> business_id, Nullable<int> booking_id, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var booking_idParameter = booking_id.HasValue ?
                new ObjectParameter("booking_id", booking_id) :
                new ObjectParameter("booking_id", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Get_Enuser_Detail_Grid_Result>("usp_Get_Enuser_Detail_Grid", business_idParameter, booking_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_Get_Eta_Booking_Services(Nullable<int> booking_id, string mode)
        {
            var booking_idParameter = booking_id.HasValue ?
                new ObjectParameter("booking_id", booking_id) :
                new ObjectParameter("booking_id", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_Get_Eta_Booking_Services", booking_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_Get_Eta_Temp_Services(Nullable<int> booking_id, string mode)
        {
            var booking_idParameter = booking_id.HasValue ?
                new ObjectParameter("Booking_id", booking_id) :
                new ObjectParameter("Booking_id", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_Get_Eta_Temp_Services", booking_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_Get_Free_Seat_Result> usp_Get_Free_Seat(Nullable<int> business_id, Nullable<System.DateTime> booking_date, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var booking_dateParameter = booking_date.HasValue ?
                new ObjectParameter("booking_date", booking_date) :
                new ObjectParameter("booking_date", typeof(System.DateTime));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Get_Free_Seat_Result>("usp_Get_Free_Seat", business_idParameter, booking_dateParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_Get_selected_Services_Result> usp_Get_selected_Services(Nullable<int> business_id, Nullable<int> business_service_id, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var business_service_idParameter = business_service_id.HasValue ?
                new ObjectParameter("business_service_id", business_service_id) :
                new ObjectParameter("business_service_id", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Get_selected_Services_Result>("usp_Get_selected_Services", business_idParameter, business_service_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<string> usp_Get_Temp_selected_Services(Nullable<System.DateTime> date, Nullable<int> booking_id, string mode)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var booking_idParameter = booking_id.HasValue ?
                new ObjectParameter("booking_id", booking_id) :
                new ObjectParameter("booking_id", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_Get_Temp_selected_Services", dateParameter, booking_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_Inventory_List_Result> usp_Inventory_List(Nullable<int> inventory_id, Nullable<int> business_Id, Nullable<int> product_id, Nullable<int> unit, Nullable<decimal> product_cost, Nullable<decimal> product_retail_price, Nullable<int> minordlevel, Nullable<int> maxordlevel, Nullable<int> product_onhand, Nullable<System.DateTime> expirydate, Nullable<System.DateTime> inv_date, Nullable<int> nouseup, string barcode, string remark, string mode)
        {
            var inventory_idParameter = inventory_id.HasValue ?
                new ObjectParameter("inventory_id", inventory_id) :
                new ObjectParameter("inventory_id", typeof(int));
    
            var business_IdParameter = business_Id.HasValue ?
                new ObjectParameter("business_Id", business_Id) :
                new ObjectParameter("business_Id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("Product_id", product_id) :
                new ObjectParameter("Product_id", typeof(int));
    
            var unitParameter = unit.HasValue ?
                new ObjectParameter("unit", unit) :
                new ObjectParameter("unit", typeof(int));
    
            var product_costParameter = product_cost.HasValue ?
                new ObjectParameter("Product_cost", product_cost) :
                new ObjectParameter("Product_cost", typeof(decimal));
    
            var product_retail_priceParameter = product_retail_price.HasValue ?
                new ObjectParameter("Product_retail_price", product_retail_price) :
                new ObjectParameter("Product_retail_price", typeof(decimal));
    
            var minordlevelParameter = minordlevel.HasValue ?
                new ObjectParameter("minordlevel", minordlevel) :
                new ObjectParameter("minordlevel", typeof(int));
    
            var maxordlevelParameter = maxordlevel.HasValue ?
                new ObjectParameter("maxordlevel", maxordlevel) :
                new ObjectParameter("maxordlevel", typeof(int));
    
            var product_onhandParameter = product_onhand.HasValue ?
                new ObjectParameter("Product_onhand", product_onhand) :
                new ObjectParameter("Product_onhand", typeof(int));
    
            var expirydateParameter = expirydate.HasValue ?
                new ObjectParameter("expirydate", expirydate) :
                new ObjectParameter("expirydate", typeof(System.DateTime));
    
            var inv_dateParameter = inv_date.HasValue ?
                new ObjectParameter("inv_date", inv_date) :
                new ObjectParameter("inv_date", typeof(System.DateTime));
    
            var nouseupParameter = nouseup.HasValue ?
                new ObjectParameter("nouseup", nouseup) :
                new ObjectParameter("nouseup", typeof(int));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("barcode", barcode) :
                new ObjectParameter("barcode", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("remark", remark) :
                new ObjectParameter("remark", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Inventory_List_Result>("usp_Inventory_List", inventory_idParameter, business_IdParameter, product_idParameter, unitParameter, product_costParameter, product_retail_priceParameter, minordlevelParameter, maxordlevelParameter, product_onhandParameter, expirydateParameter, inv_dateParameter, nouseupParameter, barcodeParameter, remarkParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_Order_List_Result> usp_Order_List(Nullable<int> business_Id, Nullable<int> order_Id, Nullable<int> vendor_id, Nullable<System.DateTime> order_date, Nullable<bool> status, string mode)
        {
            var business_IdParameter = business_Id.HasValue ?
                new ObjectParameter("business_Id", business_Id) :
                new ObjectParameter("business_Id", typeof(int));
    
            var order_IdParameter = order_Id.HasValue ?
                new ObjectParameter("Order_Id", order_Id) :
                new ObjectParameter("Order_Id", typeof(int));
    
            var vendor_idParameter = vendor_id.HasValue ?
                new ObjectParameter("Vendor_id", vendor_id) :
                new ObjectParameter("Vendor_id", typeof(int));
    
            var order_dateParameter = order_date.HasValue ?
                new ObjectParameter("Order_date", order_date) :
                new ObjectParameter("Order_date", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Order_List_Result>("usp_Order_List", business_IdParameter, order_IdParameter, vendor_idParameter, order_dateParameter, statusParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_Product_List_Result> usp_Product_List(Nullable<int> item_Id, string product_type, Nullable<int> product_id, string product_code, string product_name, Nullable<decimal> product_size, string product_uom, Nullable<int> product_target_min, Nullable<int> product_target_max, Nullable<decimal> product_useup_times, Nullable<int> product_useup_no, string description, Nullable<bool> active, string photo, Nullable<System.DateTime> exdate, string mode)
        {
            var item_IdParameter = item_Id.HasValue ?
                new ObjectParameter("item_Id", item_Id) :
                new ObjectParameter("item_Id", typeof(int));
    
            var product_typeParameter = product_type != null ?
                new ObjectParameter("Product_type", product_type) :
                new ObjectParameter("Product_type", typeof(string));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("Product_id", product_id) :
                new ObjectParameter("Product_id", typeof(int));
    
            var product_codeParameter = product_code != null ?
                new ObjectParameter("Product_code", product_code) :
                new ObjectParameter("Product_code", typeof(string));
    
            var product_nameParameter = product_name != null ?
                new ObjectParameter("Product_name", product_name) :
                new ObjectParameter("Product_name", typeof(string));
    
            var product_sizeParameter = product_size.HasValue ?
                new ObjectParameter("Product_size", product_size) :
                new ObjectParameter("Product_size", typeof(decimal));
    
            var product_uomParameter = product_uom != null ?
                new ObjectParameter("Product_uom", product_uom) :
                new ObjectParameter("Product_uom", typeof(string));
    
            var product_target_minParameter = product_target_min.HasValue ?
                new ObjectParameter("Product_target_min", product_target_min) :
                new ObjectParameter("Product_target_min", typeof(int));
    
            var product_target_maxParameter = product_target_max.HasValue ?
                new ObjectParameter("Product_target_max", product_target_max) :
                new ObjectParameter("Product_target_max", typeof(int));
    
            var product_useup_timesParameter = product_useup_times.HasValue ?
                new ObjectParameter("Product_useup_times", product_useup_times) :
                new ObjectParameter("Product_useup_times", typeof(decimal));
    
            var product_useup_noParameter = product_useup_no.HasValue ?
                new ObjectParameter("Product_useup_no", product_useup_no) :
                new ObjectParameter("Product_useup_no", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(string));
    
            var exdateParameter = exdate.HasValue ?
                new ObjectParameter("exdate", exdate) :
                new ObjectParameter("exdate", typeof(System.DateTime));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Product_List_Result>("usp_Product_List", item_IdParameter, product_typeParameter, product_idParameter, product_codeParameter, product_nameParameter, product_sizeParameter, product_uomParameter, product_target_minParameter, product_target_maxParameter, product_useup_timesParameter, product_useup_noParameter, descriptionParameter, activeParameter, photoParameter, exdateParameter, modeParameter);
        }
    
        public virtual int usp_Product_Recieve_List(Nullable<int> business_Id, Nullable<int> order_Id, Nullable<int> recive_id, Nullable<System.DateTime> recive_date, Nullable<bool> status, string mode)
        {
            var business_IdParameter = business_Id.HasValue ?
                new ObjectParameter("business_Id", business_Id) :
                new ObjectParameter("business_Id", typeof(int));
    
            var order_IdParameter = order_Id.HasValue ?
                new ObjectParameter("Order_Id", order_Id) :
                new ObjectParameter("Order_Id", typeof(int));
    
            var recive_idParameter = recive_id.HasValue ?
                new ObjectParameter("recive_id", recive_id) :
                new ObjectParameter("recive_id", typeof(int));
    
            var recive_dateParameter = recive_date.HasValue ?
                new ObjectParameter("recive_date", recive_date) :
                new ObjectParameter("recive_date", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Product_Recieve_List", business_IdParameter, order_IdParameter, recive_idParameter, recive_dateParameter, statusParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_Salon_Login_contact_no_Result> usp_Salon_Login_contact_no(string contact_No, string salon_password, string mode)
        {
            var contact_NoParameter = contact_No != null ?
                new ObjectParameter("contact_No", contact_No) :
                new ObjectParameter("contact_No", typeof(string));
    
            var salon_passwordParameter = salon_password != null ?
                new ObjectParameter("Salon_password", salon_password) :
                new ObjectParameter("Salon_password", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Salon_Login_contact_no_Result>("usp_Salon_Login_contact_no", contact_NoParameter, salon_passwordParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_Salon_Login_Email_Result> usp_Salon_Login_Email(string business_email_id, string salon_password, string mode)
        {
            var business_email_idParameter = business_email_id != null ?
                new ObjectParameter("business_email_id", business_email_id) :
                new ObjectParameter("business_email_id", typeof(string));
    
            var salon_passwordParameter = salon_password != null ?
                new ObjectParameter("Salon_password", salon_password) :
                new ObjectParameter("Salon_password", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Salon_Login_Email_Result>("usp_Salon_Login_Email", business_email_idParameter, salon_passwordParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_Search_EndUser_By_Mobile_Result> usp_Search_EndUser_By_Mobile(Nullable<int> business_id, Nullable<System.DateTime> booking_date, string c_mobile_no, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var booking_dateParameter = booking_date.HasValue ?
                new ObjectParameter("Booking_date", booking_date) :
                new ObjectParameter("Booking_date", typeof(System.DateTime));
    
            var c_mobile_noParameter = c_mobile_no != null ?
                new ObjectParameter("c_mobile_no", c_mobile_no) :
                new ObjectParameter("c_mobile_no", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Search_EndUser_By_Mobile_Result>("usp_Search_EndUser_By_Mobile", business_idParameter, booking_dateParameter, c_mobile_noParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_Search_EndUser_By_Name_Result> usp_Search_EndUser_By_Name(Nullable<int> business_id, Nullable<System.DateTime> booking_date, string enduser_name, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var booking_dateParameter = booking_date.HasValue ?
                new ObjectParameter("Booking_date", booking_date) :
                new ObjectParameter("Booking_date", typeof(System.DateTime));
    
            var enduser_nameParameter = enduser_name != null ?
                new ObjectParameter("Enduser_name", enduser_name) :
                new ObjectParameter("Enduser_name", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Search_EndUser_By_Name_Result>("usp_Search_EndUser_By_Name", business_idParameter, booking_dateParameter, enduser_nameParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_Select_Busniess_Seat_Result> usp_Select_Busniess_Seat(Nullable<int> business_id, string mode)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Select_Busniess_Seat_Result>("usp_Select_Busniess_Seat", business_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_Select_Enduser_Result> usp_Select_Enduser(string enduser_name, Nullable<int> business_id, string mode)
        {
            var enduser_nameParameter = enduser_name != null ?
                new ObjectParameter("Enduser_name", enduser_name) :
                new ObjectParameter("Enduser_name", typeof(string));
    
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Select_Enduser_Result>("usp_Select_Enduser", enduser_nameParameter, business_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_Select_Enduser_After_Insert_Result> usp_Select_Enduser_After_Insert(string mode)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Select_Enduser_After_Insert_Result>("usp_Select_Enduser_After_Insert", modeParameter);
        }
    
        public virtual ObjectResult<usp_select_Grid_Data_Result> usp_select_Grid_Data(Nullable<int> booking_id, string mode)
        {
            var booking_idParameter = booking_id.HasValue ?
                new ObjectParameter("booking_id", booking_id) :
                new ObjectParameter("booking_id", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_Grid_Data_Result>("usp_select_Grid_Data", booking_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_Vendor_List_Result> usp_Vendor_List(Nullable<int> business_Id, Nullable<int> vendor_Id, string vendor_Name, string vendor_phone, string vendor_mobile, string vendore_email, string vendor_address, string address1, Nullable<int> countryid, Nullable<int> stateid, Nullable<int> cityid, Nullable<int> locationid, string zipcode, Nullable<bool> active, string mode)
        {
            var business_IdParameter = business_Id.HasValue ?
                new ObjectParameter("business_Id", business_Id) :
                new ObjectParameter("business_Id", typeof(int));
    
            var vendor_IdParameter = vendor_Id.HasValue ?
                new ObjectParameter("Vendor_Id", vendor_Id) :
                new ObjectParameter("Vendor_Id", typeof(int));
    
            var vendor_NameParameter = vendor_Name != null ?
                new ObjectParameter("Vendor_Name", vendor_Name) :
                new ObjectParameter("Vendor_Name", typeof(string));
    
            var vendor_phoneParameter = vendor_phone != null ?
                new ObjectParameter("Vendor_phone", vendor_phone) :
                new ObjectParameter("Vendor_phone", typeof(string));
    
            var vendor_mobileParameter = vendor_mobile != null ?
                new ObjectParameter("Vendor_mobile", vendor_mobile) :
                new ObjectParameter("Vendor_mobile", typeof(string));
    
            var vendore_emailParameter = vendore_email != null ?
                new ObjectParameter("Vendore_email", vendore_email) :
                new ObjectParameter("Vendore_email", typeof(string));
    
            var vendor_addressParameter = vendor_address != null ?
                new ObjectParameter("Vendor_address", vendor_address) :
                new ObjectParameter("Vendor_address", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("address1", address1) :
                new ObjectParameter("address1", typeof(string));
    
            var countryidParameter = countryid.HasValue ?
                new ObjectParameter("countryid", countryid) :
                new ObjectParameter("countryid", typeof(int));
    
            var stateidParameter = stateid.HasValue ?
                new ObjectParameter("stateid", stateid) :
                new ObjectParameter("stateid", typeof(int));
    
            var cityidParameter = cityid.HasValue ?
                new ObjectParameter("cityid", cityid) :
                new ObjectParameter("cityid", typeof(int));
    
            var locationidParameter = locationid.HasValue ?
                new ObjectParameter("Locationid", locationid) :
                new ObjectParameter("Locationid", typeof(int));
    
            var zipcodeParameter = zipcode != null ?
                new ObjectParameter("Zipcode", zipcode) :
                new ObjectParameter("Zipcode", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Vendor_List_Result>("usp_Vendor_List", business_IdParameter, vendor_IdParameter, vendor_NameParameter, vendor_phoneParameter, vendor_mobileParameter, vendore_emailParameter, vendor_addressParameter, address1Parameter, countryidParameter, stateidParameter, cityidParameter, locationidParameter, zipcodeParameter, activeParameter, modeParameter);
        }
    
        public virtual ObjectResult<uspAppFetchAssigendUser_Result> uspAppFetchAssigendUser(Nullable<int> business_id)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspAppFetchAssigendUser_Result>("uspAppFetchAssigendUser", business_idParameter);
        }
    
        public virtual ObjectResult<uspAppFetchChair_Result> uspAppFetchChair(Nullable<int> business_id)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspAppFetchChair_Result>("uspAppFetchChair", business_idParameter);
        }
    
        public virtual ObjectResult<uspAppFetchChairStatus_Result> uspAppFetchChairStatus(Nullable<int> business_id)
        {
            var business_idParameter = business_id.HasValue ?
                new ObjectParameter("business_id", business_id) :
                new ObjectParameter("business_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspAppFetchChairStatus_Result>("uspAppFetchChairStatus", business_idParameter);
        }
    
        public virtual ObjectResult<uspAppFetchCity_Result> uspAppFetchCity()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspAppFetchCity_Result>("uspAppFetchCity");
        }
    
        public virtual ObjectResult<uspAppFetchLocationCityWise_Result> uspAppFetchLocationCityWise(Nullable<int> city_Id)
        {
            var city_IdParameter = city_Id.HasValue ?
                new ObjectParameter("city_Id", city_Id) :
                new ObjectParameter("city_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspAppFetchLocationCityWise_Result>("uspAppFetchLocationCityWise", city_IdParameter);
        }
    
        public virtual ObjectResult<uspAppForgotPassword_Result> uspAppForgotPassword(string contact_No)
        {
            var contact_NoParameter = contact_No != null ?
                new ObjectParameter("contact_No", contact_No) :
                new ObjectParameter("contact_No", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspAppForgotPassword_Result>("uspAppForgotPassword", contact_NoParameter);
        }
    
        public virtual ObjectResult<uspAppSalonLogin_Result> uspAppSalonLogin(string contact_No, string salon_password)
        {
            var contact_NoParameter = contact_No != null ?
                new ObjectParameter("contact_No", contact_No) :
                new ObjectParameter("contact_No", typeof(string));
    
            var salon_passwordParameter = salon_password != null ?
                new ObjectParameter("Salon_password", salon_password) :
                new ObjectParameter("Salon_password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspAppSalonLogin_Result>("uspAppSalonLogin", contact_NoParameter, salon_passwordParameter);
        }
    
        public virtual ObjectResult<uspFetchAddress_Result> uspFetchAddress(Nullable<int> state_Id, Nullable<int> city_Id)
        {
            var state_IdParameter = state_Id.HasValue ?
                new ObjectParameter("state_Id", state_Id) :
                new ObjectParameter("state_Id", typeof(int));
    
            var city_IdParameter = city_Id.HasValue ?
                new ObjectParameter("city_Id", city_Id) :
                new ObjectParameter("city_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspFetchAddress_Result>("uspFetchAddress", state_IdParameter, city_IdParameter);
        }
    
        public virtual int uspMarketingSalonInsert(Nullable<int> user_id, Nullable<int> city_id, Nullable<int> location_id, string business_name, string contact_no, string contact_no1, string address1, string address2, string address3, string contact_person, string land_mark, string business_email_id)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var city_idParameter = city_id.HasValue ?
                new ObjectParameter("city_id", city_id) :
                new ObjectParameter("city_id", typeof(int));
    
            var location_idParameter = location_id.HasValue ?
                new ObjectParameter("location_id", location_id) :
                new ObjectParameter("location_id", typeof(int));
    
            var business_nameParameter = business_name != null ?
                new ObjectParameter("business_name", business_name) :
                new ObjectParameter("business_name", typeof(string));
    
            var contact_noParameter = contact_no != null ?
                new ObjectParameter("contact_no", contact_no) :
                new ObjectParameter("contact_no", typeof(string));
    
            var contact_no1Parameter = contact_no1 != null ?
                new ObjectParameter("contact_no1", contact_no1) :
                new ObjectParameter("contact_no1", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("address1", address1) :
                new ObjectParameter("address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("address2", address2) :
                new ObjectParameter("address2", typeof(string));
    
            var address3Parameter = address3 != null ?
                new ObjectParameter("address3", address3) :
                new ObjectParameter("address3", typeof(string));
    
            var contact_personParameter = contact_person != null ?
                new ObjectParameter("contact_person", contact_person) :
                new ObjectParameter("contact_person", typeof(string));
    
            var land_markParameter = land_mark != null ?
                new ObjectParameter("land_mark", land_mark) :
                new ObjectParameter("land_mark", typeof(string));
    
            var business_email_idParameter = business_email_id != null ?
                new ObjectParameter("business_email_id", business_email_id) :
                new ObjectParameter("business_email_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspMarketingSalonInsert", user_idParameter, city_idParameter, location_idParameter, business_nameParameter, contact_noParameter, contact_no1Parameter, address1Parameter, address2Parameter, address3Parameter, contact_personParameter, land_markParameter, business_email_idParameter);
        }
    }
}
